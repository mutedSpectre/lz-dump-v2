declare enum ChainId {
    AAVEGOTCHI_TESTNET = 10180,
    BLOCKGEN_TESTNET = 10177,
    MERITCIRCLE_TESTNET = 10178,
    APTOS = 108,
    APTOS_TESTNET = 10108,
    APTOS_TESTNET_SANDBOX = 20308,
    ARBITRUM = 110,
    ARBITRUM_GOERLI = 10143,
    ARBITRUM_GOERLI_SANDBOX = 20143,
    ARBITRUM_RINKEBY = 10110,
    ARBITRUM_RINKEBY_SANDBOX = 20110,
    ARCANA = 117,
    ARCANA_TESTNET = 10117,
    ARCANA_TESTNET_SANDBOX = 20117,
    ASTAR = 146,
    ASTAR_TESTNET = 10146,
    ASTAR_TESTNET_SANDBOX = 20146,
    AURORA = 129,
    AURORA_TESTNET = 10129,
    AURORA_TESTNET_SANDBOX = 20129,
    AVALANCHE = 106,
    BASE_TESTNET = 10160,
    BOBA = 127,
    BOBA_TESTNET = 10144,
    BOBA_TESTNET_SANDBOX = 20144,
    BSC = 102,
    BSC_TESTNET = 10102,
    BSC_TESTNET_SANDBOX = 20102,
    CANTO = 159,
    CANTO_TESTNET = 10159,
    CASTLECRUSH = 119,
    CASTLECRUSH_TESTNET = 10119,
    CASTLECRUSH_TESTNET_SANDBOX = 20119,
    CELO = 125,
    CELO_TESTNET = 10125,
    CELO_TESTNET_SANDBOX = 20125,
    COREDAO = 153,
    COREDAO_TESTNET = 10153,
    DEXALOT = 118,
    DEXALOT_TESTNET = 10118,
    DEXALOT_TESTNET_SANDBOX = 20118,
    DFK = 115,
    DFK_TESTNET = 10115,
    DFK_TESTNET_SANDBOX = 20115,
    DOS = 149,
    DOS_TESTNET = 10162,
    ETHEREUM = 101,
    FANTOM = 112,
    FANTOM_TESTNET = 10112,
    FANTOM_TESTNET_SANDBOX = 20112,
    FUJI = 10106,
    FUJI_SANDBOX = 20106,
    FUSE = 138,
    FUSE_TESTNET = 10138,
    FUSE_TESTNET_SANDBOX = 20138,
    GNOSIS = 145,
    GNOSIS_TESTNET = 10145,
    GNOSIS_TESTNET_SANDBOX = 20145,
    GOERLI = 10121,
    GOERLI_MAINNET = 154,
    GOERLI_SANDBOX = 20121,
    HARMONY = 116,
    HARMONY_TESTNET = 10133,
    HARMONY_TESTNET_SANDBOX = 20133,
    INTAIN = 152,
    INTAIN_TESTNET = 10152,
    INTAIN_TESTNET_SANDBOX = 20152,
    KLAYTN = 150,
    KLAYTN_TESTNET = 10150,
    KOVAN = 10120,
    KOVAN_SANDBOX = 20120,
    METER = 156,
    METER_TESTNET = 10156,
    METIS = 151,
    METIS_TESTNET = 10151,
    MOONBEAM = 126,
    MOONBEAM_TESTNET = 10126,
    MOONBEAM_TESTNET_SANDBOX = 20126,
    MOONRIVER = 167,
    MOONRIVER_TESTNET = 10166,
    MUMBAI = 10109,
    MUMBAI_SANDBOX = 20109,
    NOVA = 175,
    OKX = 155,
    OKX_TESTNET = 10155,
    OPTIMISM = 111,
    OPTIMISM_GOERLI = 10132,
    OPTIMISM_GOERLI_SANDBOX = 20132,
    OPTIMISM_KOVAN = 10111,
    OPTIMISM_KOVAN_SANDBOX = 20111,
    POLYGON = 109,
    PORTAL = 128,
    PORTAL_TESTNET = 10128,
    PORTAL_TESTNET_SANDBOX = 20128,
    RINKEBY = 10101,
    RINKEBY_SANDBOX = 20101,
    SEPOLIA = 161,
    SEPOLIA_TESTNET = 10161,
    SHRAPNEL = 148,
    SHRAPNEL_TESTNET = 10164,
    SOLANA = 168,
    SOLANA_TESTNET = 10168,
    SWIMMER = 114,
    SWIMMER_TESTNET = 10130,
    SWIMMER_TESTNET_SANDBOX = 20130,
    TENET = 173,
    TENET_TESTNET = 10173,
    ZKCONSENSYS_TESTNET = 10157,
    ZKPOLYGON = 158,
    ZKPOLYGON_TESTNET = 10158,
    ZKSYNC = 165,
    ZKSYNC_TESTNET = 10165
}

declare enum ChainKey {
    AAVEGOTCHI_TESTNET = "aavegotchi-testnet",
    APTOS = "aptos",
    APTOS_TESTNET = "aptos-testnet",
    APTOS_TESTNET_SANDBOX = "aptos-testnet-sandbox",
    ARBITRUM = "arbitrum",
    ARBITRUM_GOERLI = "arbitrum-goerli",
    ARBITRUM_GOERLI_SANDBOX = "arbitrum-goerli-sandbox",
    ARBITRUM_RINKEBY = "arbitrum-rinkeby",
    ARBITRUM_RINKEBY_SANDBOX = "arbitrum-rinkeby-sandbox",
    ARCANA = "arcana",
    ARCANA_TESTNET = "arcana-testnet",
    ARCANA_TESTNET_SANDBOX = "arcana-testnet-sandbox",
    ASTAR = "astar",
    ASTAR_TESTNET = "astar-testnet",
    ASTAR_TESTNET_SANDBOX = "astar-testnet-sandbox",
    AURORA = "aurora",
    AURORA_TESTNET = "aurora-testnet",
    AURORA_TESTNET_SANDBOX = "aurora-testnet-sandbox",
    AVALANCHE = "avalanche",
    BASE = "base",
    BASE_TESTNET = "base-testnet",
    BLOCKGEN_TESTNET = "blockgen-testnet",
    BOBA = "boba",
    BOBA_TESTNET = "boba-testnet",
    BOBA_TESTNET_SANDBOX = "boba-testnet-sandbox",
    BSC = "bsc",
    BSC_TESTNET = "bsc-testnet",
    BSC_TESTNET_SANDBOX = "bsc-testnet-sandbox",
    CANTO = "canto",
    CANTO_TESTNET = "canto-testnet",
    CASTLECRUSH = "castlecrush",
    CASTLECRUSH_TESTNET = "castlecrush-testnet",
    CASTLECRUSH_TESTNET_SANDBOX = "castlecrush-testnet-sandbox",
    CELO = "celo",
    CELO_TESTNET = "celo-testnet",
    CELO_TESTNET_SANDBOX = "celo-testnet-sandbox",
    COREDAO = "coredao",
    COREDAO_TESTNET = "coredao-testnet",
    DEXALOT = "dexalot",
    DEXALOT_TESTNET = "dexalot-testnet",
    DEXALOT_TESTNET_SANDBOX = "dexalot-testnet-sandbox",
    DFK = "dfk",
    DFK_TESTNET = "dfk-testnet",
    DFK_TESTNET_SANDBOX = "dfk-testnet-sandbox",
    DOS = "dos",
    DOS_TESTNET = "dos-testnet",
    ETHEREUM = "ethereum",
    FANTOM = "fantom",
    FANTOM_TESTNET = "fantom-testnet",
    FANTOM_TESTNET_SANDBOX = "fantom-testnet-sandbox",
    FUJI = "fuji",
    FUJI_SANDBOX = "fuji-sandbox",
    FUSE = "fuse",
    FUSE_TESTNET = "fuse-testnet",
    FUSE_TESTNET_SANDBOX = "fuse-testnet-sandbox",
    GNOSIS = "gnosis",
    GNOSIS_TESTNET = "gnosis-testnet",
    GNOSIS_TESTNET_SANDBOX = "gnosis-testnet-sandbox",
    GOERLI = "goerli",
    GOERLI_MAINNET = "goerli-mainnet",
    GOERLI_SANDBOX = "goerli-sandbox",
    HARMONY = "harmony",
    HARMONY_TESTNET = "harmony-testnet",
    HARMONY_TESTNET_SANDBOX = "harmony-testnet-sandbox",
    INTAIN = "intain",
    INTAIN_TESTNET = "intain-testnet",
    INTAIN_TESTNET_SANDBOX = "intain-testnet-sandbox",
    KLAYTN = "klaytn",
    KLAYTN_TESTNET = "klaytn-testnet",
    KOVAN = "kovan",
    KOVAN_SANDBOX = "kovan-sandbox",
    MERITCIRCLE_TESTNET = "meritcircle-testnet",
    METER = "meter",
    METER_TESTNET = "meter-testnet",
    METIS = "metis",
    METIS_TESTNET = "metis-testnet",
    MOONBEAM = "moonbeam",
    MOONBEAM_TESTNET = "moonbeam-testnet",
    MOONBEAM_TESTNET_SANDBOX = "moonbeam-testnet-sandbox",
    MOONRIVER = "moonriver",
    MOONRIVER_TESTNET = "moonriver-testnet",
    MUMBAI = "mumbai",
    MUMBAI_SANDBOX = "mumbai-sandbox",
    NOVA = "nova",
    OKX = "okx",
    OKX_TESTNET = "okx-testnet",
    OPTIMISM = "optimism",
    OPTIMISM_GOERLI = "optimism-goerli",
    OPTIMISM_GOERLI_SANDBOX = "optimism-goerli-sandbox",
    OPTIMISM_KOVAN = "optimism-kovan",
    OPTIMISM_KOVAN_SANDBOX = "optimism-kovan-sandbox",
    POLYGON = "polygon",
    PORTAL = "portal",
    PORTAL_TESTNET = "portal-testnet",
    PORTAL_TESTNET_SANDBOX = "portal-testnet-sandbox",
    RINKEBY = "rinkeby",
    RINKEBY_SANDBOX = "rinkeby-sandbox",
    SEPOLIA = "sepolia",
    SEPOLIA_TESTNET = "sepolia-testnet",
    SHRAPNEL = "shrapnel",
    SHRAPNEL_TESTNET = "shrapnel-testnet",
    SOLANA = "solana",
    SOLANA_TESTNET = "solana-testnet",
    SWIMMER = "swimmer",
    SWIMMER_TESTNET = "swimmer-testnet",
    SWIMMER_TESTNET_SANDBOX = "swimmer-testnet-sandbox",
    TENET = "tenet",
    TENET_TESTNET = "tenet-testnet",
    ZKCONSENSYS_TESTNET = "zkconsensys-testnet",
    ZKPOLYGON = "zkpolygon",
    ZKPOLYGON_TESTNET = "zkpolygon-testnet",
    ZKSYNC = "zksync",
    ZKSYNC_TESTNET = "zksync-testnet"
}

declare enum ChainListId {
    AAVEGOTCHI_TESTNET = 2007,
    APTOS = 1,
    APTOS_TESTNET = 2,
    APTOS_TESTNET_SANDBOX = 3,
    ARBITRUM = 42161,
    ARBITRUM_GOERLI = 421613,
    ARBITRUM_GOERLI_SANDBOX = 421613,
    ARBITRUM_RINKEBY = 421611,
    ARBITRUM_RINKEBY_SANDBOX = 421611,
    ARCANA_TESTNET = 40404,
    ARCANA_TESTNET_SANDBOX = 40404,
    ASTAR = 592,
    AURORA = 1313161554,
    AURORA_TESTNET = 1313161555,
    AURORA_TESTNET_SANDBOX = 1313161555,
    AVALANCHE = 43114,
    BOBA = 288,
    BOBA_TESTNET = 28,
    BOBA_TESTNET_SANDBOX = 28,
    BSC = 56,
    BSC_TESTNET = 97,
    BSC_TESTNET_SANDBOX = 97,
    CANTO = 7700,
    CANTO_TESTNET = 740,
    CASTLECRUSH_TESTNET = 31416,
    CASTLECRUSH_TESTNET_SANDBOX = 31416,
    CELO = 42220,
    CELO_TESTNET = 44787,
    CELO_TESTNET_SANDBOX = 44787,
    COREDAO = 1116,
    COREDAO_TESTNET = 1115,
    DEXALOT = 432204,
    DEXALOT_TESTNET = 432201,
    DEXALOT_TESTNET_SANDBOX = 432201,
    DFK = 53935,
    DFK_TESTNET = 335,
    DFK_TESTNET_SANDBOX = 335,
    DOS = 7979,
    DOS_TESTNET = 3939,
    ETHEREUM = 1,
    FANTOM = 250,
    FANTOM_TESTNET = 4002,
    FANTOM_TESTNET_SANDBOX = 4002,
    FUJI = 43113,
    FUJI_SANDBOX = 43113,
    FUSE = 122,
    GNOSIS = 100,
    GNOSIS_TESTNET = 300,
    GNOSIS_TESTNET_SANDBOX = 300,
    GOERLI = 5,
    GOERLI_MAINNET = 5,
    GOERLI_SANDBOX = 5,
    HARMONY = 1666600000,
    HARMONY_TESTNET = 1666700000,
    HARMONY_TESTNET_SANDBOX = 1666700000,
    KLAYTN = 8217,
    KLAYTN_TESTNET = 1001,
    KOVAN = 42,
    KOVAN_SANDBOX = 42,
    METER = 82,
    METER_TESTNET = 83,
    METIS = 1088,
    METIS_TESTNET = 599,
    MOONBEAM = 1284,
    MOONBEAM_TESTNET = 1287,
    MOONBEAM_TESTNET_SANDBOX = 1287,
    MOONRIVER = 1285,
    MUMBAI = 80001,
    MUMBAI_SANDBOX = 80001,
    NOVA = 42170,
    OKX = 66,
    OPTIMISM = 10,
    OPTIMISM_GOERLI = 420,
    OPTIMISM_GOERLI_SANDBOX = 420,
    OPTIMISM_KOVAN = 69,
    OPTIMISM_KOVAN_SANDBOX = 69,
    POLYGON = 137,
    PORTAL_TESTNET = 808,
    PORTAL_TESTNET_SANDBOX = 808,
    RINKEBY = 4,
    RINKEBY_SANDBOX = 4,
    SEPOLIA = 11155111,
    SHRAPNEL = 2044,
    SWIMMER = 73772,
    SWIMMER_TESTNET = 73771,
    SWIMMER_TESTNET_SANDBOX = 73771,
    TENET = 1559,
    TENET_TESTNET = 155,
    ZKPOLYGON = 1101,
    ZKPOLYGON_TESTNET = 1442,
    ZKSYNC = 324,
    ZKSYNC_TESTNET = 280,
    BASE = 8453,
    BASE_TESTNET = 84531
}

declare enum ChainStage {
    MAINNET = 0,
    TESTNET = 1,
    TESTNET_SANDBOX = 2
}

declare const LZ_ADDRESS: {
    [chainKey in ChainKey]?: string;
};
declare const LZ_RELAYER: {
    [chainKey in ChainKey]?: string;
};
declare const LZ_RELAYER_V2: {
    [chainKey in ChainKey]?: string;
};
declare const LZ_ULTRA_LIGHT_NODE_V1: {
    [chainKey in ChainKey]?: string;
};
declare const LZ_ULTRA_LIGHT_NODE_V2: {
    [chainKey in ChainKey]?: string;
};

declare const RPCS: {
    [chainId in ChainId]?: string[];
};

declare const AVERAGE_BLOCK_TIME: {
    [chainId in ChainId]: number;
};

declare function getMnemonic(networkName?: string): string;
declare function accounts(chainKey?: string): {
    mnemonic: string;
};
declare type HardhatNetwork = {
    [network: string]: any;
};
declare type HardhatNetworks = {
    [chainKey in ChainKey]?: any;
};
declare function setupNetwork(networkConfig: any, chainIds: ChainId[]): HardhatNetworks;
declare function setupNetworks(chainIds: [ChainId, {
    rpcIndex?: number;
}][]): HardhatNetworks;

declare function getNetworkNameByEndpointId(endpointId: ChainId | number): ChainKey;
declare function getEndpointIdByName(networkName: ChainKey | string): ChainId;
declare function getNetworksForEnv(chainStageAsString: string): ChainKey[];
declare function getChainStage(chainId: number): ChainStage;
declare function getChainKey(chainId: ChainId): ChainKey;
declare function getChainListId(chainId: ChainId): ChainListId;
declare function getChainIdByChainKey(chainKey: ChainKey): ChainId;

export { AVERAGE_BLOCK_TIME, ChainId, ChainKey, ChainListId, ChainStage, HardhatNetwork, HardhatNetworks, LZ_ADDRESS, LZ_RELAYER, LZ_RELAYER_V2, LZ_ULTRA_LIGHT_NODE_V1, LZ_ULTRA_LIGHT_NODE_V2, RPCS, accounts, getChainIdByChainKey, getChainKey, getChainListId, getChainStage, getEndpointIdByName, getMnemonic, getNetworkNameByEndpointId, getNetworksForEnv, setupNetwork, setupNetworks };
