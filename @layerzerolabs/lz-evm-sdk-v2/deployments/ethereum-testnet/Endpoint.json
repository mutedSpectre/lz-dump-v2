{
  "address": "0x6626B4A7073C6517705d36c06F7B5Eab4C349180",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_blockedLib",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_altToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "ComposedMessageDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ComposedMessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "DefaultReceiveLibraryTimeoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultSendLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nativeOrAltTokenFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lzTokenFee",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "InboundNonceSkipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LayerZeroTokenSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "LibraryRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzComposeFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzReceiveFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiveLibrary",
          "type": "address"
        }
      ],
      "name": "PacketDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PacketReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encodedPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sendLibrary",
          "type": "address"
        }
      ],
      "name": "PacketSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "ReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeout",
          "type": "uint256"
        }
      ],
      "name": "ReceiveLibraryTimoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "SendLibrarySet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_LIB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_MESSAGE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RECEIVED_MESSAGE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "altFeeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_actualReceiveLib",
          "type": "address"
        }
      ],
      "name": "assertReceiveLibrary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockedLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "clear",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "composedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageLib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "defaultConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "defaultSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "_payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "deliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "deliverComposedMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eid",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getComposeContext",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oapp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_messageLib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "config",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        }
      ],
      "name": "getInboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "getInboundPayloadHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_receiver",
          "type": "bytes32"
        }
      ],
      "name": "getOutboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReceiveContext",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        }
      ],
      "name": "getReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredLibraries",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSendContext",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        }
      ],
      "name": "getSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "hasPayload",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isComposingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isReceivingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSendingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_callerParams",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_tryCatch",
          "type": "bool"
        }
      ],
      "name": "lzCompose",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_callerParams",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_tryCatch",
          "type": "bool"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_payInZro",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_options",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nativeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lzTokenFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingFee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "receiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "receiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        }
      ],
      "name": "registerLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredLibraries",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageLib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "resetConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFee",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        }
      ],
      "name": "send",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpoint.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "sendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_altTokenFee",
          "type": "uint256"
        }
      ],
      "name": "sendWithAlt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpoint.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageLib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setDefaultSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroToken",
          "type": "address"
        }
      ],
      "name": "setLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageLib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "snapshotConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xede8deeb17d1cd532317104ef552b278e420aa2553768d4972ca88c14a8be033",
  "receipt": {
    "to": null,
    "from": "0x7ed0222FEF0C668e389D8E38c68aA73ef4EE6B3d",
    "contractAddress": "0x6626B4A7073C6517705d36c06F7B5Eab4C349180",
    "transactionIndex": 30,
    "gasUsed": "4991021",
    "logsBloom": "0x
    "blockHash": "0x3510a872967a3c2cf67c06a5818b11db4eb74c67a4b2b37b67205e843e5d8e8c",
    "transactionHash": "0xede8deeb17d1cd532317104ef552b278e420aa2553768d4972ca88c14a8be033",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 9020509,
        "transactionHash": "0xede8deeb17d1cd532317104ef552b278e420aa2553768d4972ca88c14a8be033",
        "address": "0x6626B4A7073C6517705d36c06F7B5Eab4C349180",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007ed0222fef0c668e389d8e38c68aa73ef4ee6b3d"
        ],
        "data": "0x",
        "logIndex": 120,
        "blockHash": "0x3510a872967a3c2cf67c06a5818b11db4eb74c67a4b2b37b67205e843e5d8e8c"
      },
      {
        "transactionIndex": 30,
        "blockNumber": 9020509,
        "transactionHash": "0xede8deeb17d1cd532317104ef552b278e420aa2553768d4972ca88c14a8be033",
        "address": "0x6626B4A7073C6517705d36c06F7B5Eab4C349180",
        "topics": [
          "0x6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5"
        ],
        "data": "0x0000000000000000000000001103867b06762f5b680e0338896892ce04a2d3c0",
        "logIndex": 121,
        "blockHash": "0x3510a872967a3c2cf67c06a5818b11db4eb74c67a4b2b37b67205e843e5d8e8c"
      }
    ],
    "blockNumber": 9020509,
    "cumulativeGasUsed": "26880643",
    "status": 1,
    "byzantium": true
  },
  "args": [
    40121,
    "0x1103867B06762F5B680e0338896892cE04a2d3c0",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "cab51f2d1db1314c5a8e05a73c31897b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_blockedLib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_altToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposedMessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ComposedMessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeOrAltTokenFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LayerZeroTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveLibrary\",\"type\":\"address\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PacketReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_LIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_MESSAGE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECEIVED_MESSAGE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"altFeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_actualReceiveLib\",\"type\":\"address\"}],\"name\":\"assertReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockedLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"composedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageLib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"defaultConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"deliverComposedMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComposeContext\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_messageLib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"getInboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReceiveContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"hasPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComposingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_callerParams\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_tryCatch\",\"type\":\"bool\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_callerParams\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_tryCatch\",\"type\":\"bool\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZro\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"receiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredLibraries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageLib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"resetConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFee\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"sendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_altTokenFee\",\"type\":\"uint256\"}],\"name\":\"sendWithAlt\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageLib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroToken\",\"type\":\"address\"}],\"name\":\"setLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageLib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"snapshotConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Endpoint.sol\":\"Endpoint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Endpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\n\\nimport \\\"./MessagingChannel.sol\\\";\\nimport \\\"./MessagingFeeHandler.sol\\\";\\nimport \\\"./MessagingComposer.sol\\\";\\nimport \\\"./MessageLibManager.sol\\\";\\n\\ncontract Endpoint is ILayerZeroEndpoint, MessagingChannel, MessageLibManager, MessagingFeeHandler, MessagingComposer {\\n    uint32 public immutable eid;\\n\\n    uint private _NOT_ENTERED = 1;\\n    uint private _sendContext = _NOT_ENTERED;\\n    uint private _receiveContext = _NOT_ENTERED;\\n\\n    constructor(\\n        uint32 _eid,\\n        address _blockedLib,\\n        address _altToken\\n    ) MessageLibManager(_blockedLib) MessagingFeeHandler(_altToken) {\\n        eid = _eid;\\n    }\\n\\n    modifier sendContext(uint32 _dstEid, address _sender) {\\n        require(_sendContext == _NOT_ENTERED, \\\"LZ30001\\\");\\n        _sendContext = (uint(_dstEid) << 160) | uint160(_sender);\\n        _;\\n        _sendContext = _NOT_ENTERED;\\n    }\\n\\n    modifier receiveContext(uint32 _srcEid, address _receiver) {\\n        require(_receiveContext == _NOT_ENTERED, \\\"LZ30002\\\");\\n        _receiveContext = (uint(_srcEid) << 160) | uint160(_receiver);\\n        _;\\n        _receiveContext = _NOT_ENTERED;\\n    }\\n\\n    function layerZeroToken() public view returns (address) {\\n        return lzToken;\\n    }\\n\\n    function setLayerZeroToken(address _layerZeroToken) external onlyOwner {\\n        _setLayerZeroToken(_layerZeroToken);\\n        emit LayerZeroTokenSet(_layerZeroToken);\\n    }\\n\\n    function altFeeToken() public view returns (address) {\\n        return altToken;\\n    }\\n\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInZro,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory) {\\n        require(!_payInZro || lzToken != address(0x0), \\\"LZD0003\\\");\\n\\n        (address sendLibrary, ) = getSendLibrary(_sender, _dstEid);\\n        IPacket.PacketForQuote memory packet = IPacket.PacketForQuote({\\n            sender: _sender,\\n            dstEid: _dstEid,\\n            message: _message\\n        });\\n        return IMessageLib(sendLibrary).quote(packet, _payInZro, _options);\\n    }\\n\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        uint _altTokenFee\\n    ) external sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFee);\\n\\n        // handle fees\\n        _payAltToken(sender, receipt.fee.nativeFee, _altTokenFee, payable(sendLibrary));\\n        _payLayerZeroToken(sender, receipt.fee.lzTokenFee, _lzTokenFee, sendLibrary);\\n        emit FeePaid(sender, receipt.fee.nativeFee, receipt.fee.lzTokenFee);\\n\\n        return receipt;\\n    }\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        address payable _refundAddress\\n    ) external payable sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFee);\\n\\n        // handle fees\\n        _payNative(receipt.fee.nativeFee, msg.value, payable(sendLibrary), _refundAddress);\\n        _payLayerZeroToken(sender, receipt.fee.lzTokenFee, _lzTokenFee, sendLibrary);\\n        emit FeePaid(sender, receipt.fee.nativeFee, receipt.fee.lzTokenFee);\\n\\n        return receipt;\\n    }\\n\\n    function _send(\\n        address _sender,\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee\\n    ) internal returns (MessagingReceipt memory, address) {\\n        uint64 nonce = _outbound(_sender, _params.dstEid, _params.receiver);\\n        (address sendLibrary, ) = getSendLibrary(_sender, _params.dstEid);\\n\\n        IPacket.Packet memory packet = IPacket.Packet({\\n            nonce: nonce,\\n            srcEid: eid,\\n            sender: _sender,\\n            dstEid: _params.dstEid,\\n            receiver: _params.receiver,\\n            message: _params.message\\n        });\\n\\n        bool payInLzToken = _lzTokenFee > 0;\\n\\n        (MessagingReceipt memory receipt, bytes memory encodedPacket, bytes memory options) = IMessageLib(sendLibrary)\\n            .send(packet, _params.options, payInLzToken);\\n        emit PacketSent(encodedPacket, options, sendLibrary);\\n        return (receipt, sendLibrary);\\n    }\\n\\n    function deliver(uint32 _srcEid, bytes32 _sender, address _receiver, uint64 _nonce, bytes32 _payloadHash) external {\\n        assertReceiveLibrary(_receiver, _srcEid, msg.sender);\\n        _inbound(_receiver, _srcEid, _sender, _nonce, _payloadHash);\\n        emit PacketDelivered(_srcEid, _sender, _receiver, _nonce, _payloadHash, msg.sender);\\n    }\\n\\n    function lzReceive(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams,\\n        bool _tryCatch\\n    ) external payable receiveContext(_srcEid, _receiver) {\\n        bytes memory payload = abi.encodePacked(_guid, _message);\\n        // just copy to local vars to overcome stack too deep error\\n        address receiver = _receiver;\\n        uint32 srcEid = _srcEid;\\n        bytes32 sender = _sender;\\n        uint64 nonce = _nonce;\\n        bytes32 guid = _guid;\\n        bytes memory message = _message;\\n        bytes memory callerParams = _callerParams;\\n        try\\n            ILayerZeroReceiver(receiver).lzReceive{value: msg.value}(\\n                srcEid,\\n                sender,\\n                nonce,\\n                guid,\\n                message,\\n                msg.sender,\\n                callerParams\\n            )\\n        {\\n            bytes32 payloadHash = _clearPayload(receiver, srcEid, sender, nonce, payload);\\n            emit PacketReceived(srcEid, sender, receiver, nonce, payloadHash, msg.sender);\\n        } catch (bytes memory reason) {\\n            if (_tryCatch) {\\n                if (msg.value > 0) payable(msg.sender).transfer(msg.value);\\n                emit LzReceiveFailed(srcEid, sender, receiver, nonce, keccak256(payload), msg.sender, reason);\\n            } else {\\n                // bubble up the revert reason\\n                assembly {\\n                    revert(add(reason, 32), mload(reason))\\n                }\\n            }\\n        }\\n    }\\n\\n    function clear(\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _guid,\\n        bytes calldata _message\\n    ) external returns (bytes32 payloadHash) {\\n        bytes memory payload = abi.encodePacked(_guid, _message);\\n        payloadHash = _clearPayload(msg.sender, _srcEid, _sender, _nonce, payload);\\n        emit PacketReceived(_srcEid, _sender, msg.sender, _nonce, payloadHash, msg.sender);\\n    }\\n\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external {\\n        _skipInboundNonce(msg.sender, _srcEid, _sender, _nonce);\\n        emit InboundNonceSkipped(_srcEid, _sender, msg.sender, _nonce);\\n    }\\n\\n    function getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64) {\\n        return _getInboundNonce(_receiver, _srcEid, _sender);\\n    }\\n\\n    function getOutboundNonce(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes32 _receiver\\n    ) external view override returns (uint64) {\\n        return outboundNonce[_sender][_dstEid][_receiver];\\n    }\\n\\n    function getInboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view override returns (bytes32) {\\n        return inboundPayloadHash[_receiver][_srcEid][_sender][_nonce];\\n    }\\n\\n    function isSendingMessage() public view override returns (bool) {\\n        return _sendContext != _NOT_ENTERED;\\n    }\\n\\n    function getSendContext() external view override returns (uint32, address) {\\n        return isSendingMessage() ? (uint32(_sendContext >> 160), address(uint160(_sendContext))) : (0, address(0));\\n    }\\n\\n    function isReceivingMessage() public view override returns (bool) {\\n        return _receiveContext != _NOT_ENTERED;\\n    }\\n\\n    function getReceiveContext() external view override returns (uint32, address) {\\n        return\\n            isReceivingMessage()\\n                ? (uint32(_receiveContext >> 160), address(uint160(_receiveContext)))\\n                : (0, address(0));\\n    }\\n}\\n\",\"keccak256\":\"0xa3ce45c2c8eb05515a1eecdd1c24d0c96deb33d447dcf1213cff59a6e5a25369\",\"license\":\"BUSL-1.1\"},\"contracts/MessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IMessageLib.sol\\\";\\nimport \\\"./interfaces/IMessageLibManager.sol\\\";\\n\\ncontract MessageLibManager is Ownable, IMessageLibManager {\\n    address public constant DEFAULT_LIB = address(0x0);\\n\\n    address public immutable blockedLibrary;\\n\\n    address[] public registeredLibraries;\\n    mapping(address => bool) public isRegisteredLibrary;\\n\\n    // [sender][dstEid] -> library\\n    mapping(address => mapping(uint32 => address)) public sendLibrary;\\n    // [receiver][srcEid] -> library\\n    mapping(address => mapping(uint32 => address)) public receiveLibrary;\\n    // [receiver][srcEid] => Timeout\\n    mapping(address => mapping(uint32 => Timeout)) public receiveLibraryTimeout;\\n\\n    // [remoteEid] -> MessageLibConfig\\n    mapping(uint32 => address) public defaultSendLibrary;\\n    mapping(uint32 => address) public defaultReceiveLibrary;\\n    // [remoteEid] -> Timeout\\n    mapping(uint32 => Timeout) public defaultReceiveLibraryTimeout;\\n\\n    modifier onlyRegistered(address _lib) {\\n        require(isRegisteredLibrary[_lib], \\\"LZ10001\\\");\\n        _;\\n    }\\n\\n    modifier onlyRegisteredOrDefault(address _lib) {\\n        require(isRegisteredLibrary[_lib] || _lib == DEFAULT_LIB, \\\"LZ10002\\\");\\n        _;\\n    }\\n\\n    constructor(address _blockedLib) {\\n        blockedLibrary = _blockedLib;\\n        registerLibrary(_blockedLib);\\n    }\\n\\n    function getRegisteredLibraries() external view returns (address[] memory) {\\n        return registeredLibraries;\\n    }\\n\\n    function getSendLibrary(address _sender, uint32 _dstEid) public view returns (address lib, bool isDefault) {\\n        lib = sendLibrary[_sender][_dstEid];\\n        if (lib == DEFAULT_LIB) {\\n            lib = defaultSendLibrary[_dstEid];\\n            require(lib != address(0x0), \\\"LZD0004\\\");\\n            isDefault = true;\\n        }\\n    }\\n\\n    function getReceiveLibrary(address _receiver, uint32 _srcEid) public view returns (address lib, bool isDefault) {\\n        lib = receiveLibrary[_receiver][_srcEid];\\n        if (lib == DEFAULT_LIB) {\\n            lib = defaultReceiveLibrary[_srcEid];\\n            require(lib != address(0x0), \\\"LZD0004\\\");\\n            isDefault = true;\\n        }\\n    }\\n\\n    function assertReceiveLibrary(address _receiver, uint32 _srcEid, address _actualReceiveLib) public view {\\n        (address expectedReceiveLib, bool isDefault) = getReceiveLibrary(_receiver, _srcEid);\\n        if (_actualReceiveLib == expectedReceiveLib) {\\n            return;\\n        }\\n\\n        // if current library is default, use default configured timeout\\n        Timeout memory timeout = isDefault\\n            ? defaultReceiveLibraryTimeout[_srcEid]\\n            : receiveLibraryTimeout[_receiver][_srcEid];\\n\\n        require(timeout.lib == _actualReceiveLib, \\\"LZ50000\\\");\\n        require(timeout.expiry > 0 && timeout.expiry > block.timestamp, \\\"LZ20000\\\");\\n    }\\n\\n    //------- Owner interfaces\\n    function registerLibrary(address _lib) public onlyOwner {\\n        require(IERC165(_lib).supportsInterface(type(IMessageLib).interfaceId), \\\"LZC0001\\\");\\n        require(!isRegisteredLibrary[_lib], \\\"LZ80000\\\");\\n        isRegisteredLibrary[_lib] = true;\\n        registeredLibraries.push(_lib);\\n        emit LibraryRegistered(_lib);\\n    }\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external onlyOwner onlyRegistered(_newLib) {\\n        address oldLib = defaultSendLibrary[_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n        defaultSendLibrary[_eid] = _newLib;\\n        emit DefaultSendLibrarySet(_eid, _newLib);\\n    }\\n\\n    function setDefaultReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyOwner onlyRegistered(_newLib) {\\n        address oldLib = defaultReceiveLibrary[_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n\\n        if (_gracePeriod > 0) {\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = oldLib;\\n            timeout.expiry = block.timestamp + _gracePeriod;\\n            emit DefaultReceiveLibraryTimeoutSet(_eid, oldLib, timeout.expiry);\\n        } else {\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        }\\n\\n        defaultReceiveLibrary[_eid] = _newLib;\\n        emit DefaultReceiveLibrarySet(_eid, oldLib, _newLib);\\n    }\\n\\n    function setDefaultReceiveLibraryTimeout(\\n        uint32 _eid,\\n        address _lib,\\n        uint _expiry\\n    ) external onlyRegistered(_lib) onlyOwner {\\n        if (_expiry == 0) {\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        } else {\\n            require(_expiry > block.timestamp, \\\"LZ10000\\\");\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit DefaultReceiveLibraryTimeoutSet(_eid, _lib, _expiry);\\n    }\\n\\n    function defaultConfig(address _messageLib, uint32 _eid, uint32 _configType) external view returns (bytes memory) {\\n        return IMessageLib(_messageLib).getDefaultConfig(_eid, _configType);\\n    }\\n\\n    //------- OApp interfaces\\n    function setSendLibrary(uint32 _eid, address _newLib) external onlyRegisteredOrDefault(_newLib) {\\n        address oldLib = sendLibrary[msg.sender][_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n        sendLibrary[msg.sender][_eid] = _newLib;\\n        emit SendLibrarySet(msg.sender, _eid, _newLib);\\n    }\\n\\n    function setReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyRegisteredOrDefault(_newLib) {\\n        address oldLib = receiveLibrary[msg.sender][_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n\\n        // if the new lib is default, it will use the default timeout configuration\\n        if (_gracePeriod > 0) {\\n            require(oldLib != DEFAULT_LIB && _newLib != DEFAULT_LIB, \\\"LZ10010\\\");\\n            Timeout storage timeout = receiveLibraryTimeout[msg.sender][_eid];\\n            timeout.lib = oldLib;\\n            timeout.expiry = block.timestamp + _gracePeriod;\\n            emit ReceiveLibraryTimoutSet(msg.sender, _eid, oldLib, timeout.expiry);\\n        } else {\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        }\\n\\n        receiveLibrary[msg.sender][_eid] = _newLib;\\n        emit ReceiveLibrarySet(msg.sender, _eid, oldLib, _newLib);\\n    }\\n\\n    function setReceiveLibraryTimeout(uint32 _eid, address _lib, uint _expiry) external onlyRegistered(_lib) {\\n        (, bool isDefault) = getReceiveLibrary(msg.sender, _eid);\\n        require(!isDefault, \\\"LZ10010\\\"); // if current library is default, it cannot set timeout\\n\\n        if (_expiry == 0) {\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        } else {\\n            require(_expiry > block.timestamp, \\\"LZ10000\\\");\\n            Timeout storage timeout = receiveLibraryTimeout[msg.sender][_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit ReceiveLibraryTimoutSet(msg.sender, _eid, _lib, _expiry);\\n    }\\n\\n    function setConfig(\\n        address _messageLib,\\n        uint32 _eid,\\n        uint32 _configType,\\n        bytes calldata _config\\n    ) external onlyRegistered(_messageLib) {\\n        IMessageLib(_messageLib).setConfig(_eid, msg.sender, _configType, _config);\\n    }\\n\\n    function getConfig(\\n        address _oapp,\\n        address _messageLib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view onlyRegistered(_messageLib) returns (bytes memory config, bool isDefault) {\\n        return IMessageLib(_messageLib).getConfig(_eid, _oapp, _configType);\\n    }\\n\\n    function snapshotConfig(address _messageLib, uint32[] calldata _eids) external onlyRegistered(_messageLib) {\\n        IMessageLib(_messageLib).snapshotConfig(_eids, msg.sender);\\n    }\\n\\n    function resetConfig(address _messageLib, uint32[] calldata _eids) external onlyRegistered(_messageLib) {\\n        IMessageLib(_messageLib).resetConfig(_eids, msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3a352ba34c27ff8fd26659ec155e2abb2248a278d591b276941d3ef3fe77ec03\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\ncontract MessagingChannel {\\n    // [receiver][srcEid][sender] -> inboundNonce\\n    mapping(address => mapping(uint32 => mapping(bytes32 => uint64))) internal lazyInboundNonce;\\n    // [sender][dstEid][receiver] -> outboundNonce\\n    mapping(address => mapping(uint32 => mapping(bytes32 => uint64))) internal outboundNonce;\\n    // [receiver][srcEid][sender][inboundNonce] -> payloadHash\\n    mapping(address => mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32)))) internal inboundPayloadHash;\\n\\n    function _outbound(address _sender, uint32 _dstEid, bytes32 _receiver) internal returns (uint64) {\\n        return ++outboundNonce[_sender][_dstEid][_receiver];\\n    }\\n\\n    function _inbound(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _payloadHash\\n    ) internal {\\n        // can only deliver nonce greater than the current inboundNonce\\n        require(_nonce > lazyInboundNonce[_receiver][_srcEid][_sender], \\\"LZ10004\\\");\\n        // add into payload hash if not delivered already\\n        require(!hasPayload(_receiver, _srcEid, _sender, _nonce), \\\"LZ80000\\\");\\n        inboundPayloadHash[_receiver][_srcEid][_sender][_nonce] = _payloadHash;\\n    }\\n\\n    function hasPayload(address _receiver, uint32 _srcEid, bytes32 _sender, uint64 _nonce) public view returns (bool) {\\n        return inboundPayloadHash[_receiver][_srcEid][_sender][_nonce] != bytes32(0);\\n    }\\n\\n    // this is an emergency function if a message can not be delivered for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function _skipInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender, uint64 _nextNonce) internal {\\n        require(_nextNonce == _getInboundNonce(_receiver, _srcEid, _sender) + 1, \\\"LZ10004\\\");\\n        lazyInboundNonce[_receiver][_srcEid][_sender] = _nextNonce;\\n    }\\n\\n    function _clearPayload(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal returns (bytes32 actualHash) {\\n        // require the _nonce to be no greater than the inboundNonce\\n        uint64 currentNonce = lazyInboundNonce[_receiver][_srcEid][_sender];\\n        if (_nonce > currentNonce) {\\n            // try to lazily update the inboundNonce till the _nonce\\n            for (uint64 i = currentNonce + 1; i <= _nonce; i++) {\\n                require(hasPayload(_receiver, _srcEid, _sender, i), \\\"LZ10004\\\");\\n            }\\n            lazyInboundNonce[_receiver][_srcEid][_sender] = _nonce;\\n        }\\n\\n        // check hash\\n        actualHash = keccak256(_payload);\\n        bytes32 expectedHash = inboundPayloadHash[_receiver][_srcEid][_sender][_nonce];\\n        require(expectedHash == actualHash, \\\"LZ60000\\\");\\n        // remove it from the storage\\n        delete inboundPayloadHash[_receiver][_srcEid][_sender][_nonce];\\n    }\\n\\n    function _getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) internal view returns (uint64) {\\n        uint64 nonceCursor = lazyInboundNonce[_receiver][_srcEid][_sender];\\n        // find the effective inbound currentNonce\\n        while (hasPayload(_receiver, _srcEid, _sender, nonceCursor + 1)) {\\n            nonceCursor++;\\n        }\\n        return nonceCursor;\\n    }\\n}\\n\",\"keccak256\":\"0x772c107276bb1cb92c88391ad741d06488a3f690c70d8e680cad48a6d5bf413e\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./interfaces/IMessagingComposer.sol\\\";\\nimport \\\"./interfaces/ILayerZeroComposer.sol\\\";\\n\\ncontract MessagingComposer is IMessagingComposer {\\n    // receiver -> composer -> guid -> message hash\\n    bytes32 public constant NO_MESSAGE_HASH = bytes32(0);\\n    bytes32 public constant RECEIVED_MESSAGE_HASH = bytes32(uint(1));\\n    address private constant _NOT_ENTERED_ADDR = address(1);\\n\\n    mapping(address => mapping(address => mapping(bytes32 => bytes32))) public composedMessages;\\n    address private _composeContext = _NOT_ENTERED_ADDR;\\n\\n    modifier composeContext(address _receiver) {\\n        require(_composeContext == _NOT_ENTERED_ADDR, \\\"LZ30003\\\");\\n        _composeContext = _receiver;\\n        _;\\n        _composeContext = _NOT_ENTERED_ADDR;\\n    }\\n\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external {\\n        require(composedMessages[msg.sender][_composer][_guid] == NO_MESSAGE_HASH, \\\"LZ80000\\\");\\n        bytes32 hash = keccak256(_message);\\n        composedMessages[msg.sender][_composer][_guid] = hash;\\n        emit ComposedMessageDelivered(msg.sender, _composer, _guid, _message);\\n    }\\n\\n    function lzCompose(\\n        address _receiver,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams,\\n        bool _tryCatch\\n    ) external payable composeContext(_receiver) {\\n        bytes32 expectedHash = composedMessages[_receiver][_composer][_guid];\\n        require(expectedHash == keccak256(_message), \\\"LZ60000\\\");\\n\\n        try\\n            ILayerZeroComposer(_composer).lzCompose{value: msg.value}(\\n                _receiver,\\n                _guid,\\n                _message,\\n                msg.sender,\\n                _callerParams\\n            )\\n        {\\n            // to prevent double spending\\n            composedMessages[_receiver][_composer][_guid] = RECEIVED_MESSAGE_HASH;\\n            emit ComposedMessageReceived(_receiver, _composer, _guid, expectedHash, msg.sender);\\n        } catch (bytes memory reason) {\\n            if (_tryCatch) {\\n                if (msg.value > 0) payable(msg.sender).transfer(msg.value);\\n                emit LzComposeFailed(_receiver, _composer, _guid, expectedHash, msg.sender, reason);\\n            } else {\\n                // bubble up the revert reason\\n                assembly {\\n                    revert(add(reason, 32), mload(reason))\\n                }\\n            }\\n        }\\n    }\\n\\n    function isComposingMessage() public view override returns (bool) {\\n        return _composeContext != _NOT_ENTERED_ADDR;\\n    }\\n\\n    function getComposeContext() external view override returns (address) {\\n        return isComposingMessage() ? _composeContext : address(0);\\n    }\\n}\\n\",\"keccak256\":\"0xa56d5cd3e9e536f4ae37883be8cc3689e2cfd0ddd54486b2cd4539f99d657144\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingFeeHandler.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract MessagingFeeHandler {\\n    using SafeERC20 for IERC20;\\n\\n    address internal lzToken;\\n    address internal immutable altToken; // alternative fee token instead of native\\n\\n    constructor(address _altToken) {\\n        altToken = _altToken;\\n    }\\n\\n    function _setLayerZeroToken(address _lzToken) internal {\\n        lzToken = _lzToken;\\n    }\\n\\n    function _payLayerZeroToken(address _sender, uint _required, uint _supplied, address _sendLibrary) internal {\\n        if (_required == 0) return;\\n\\n        address token = lzToken; // save one SLOAD\\n        require(token != address(0x0), \\\"LZD0003\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        IERC20(token).safeTransferFrom(_sender, _sendLibrary, _required);\\n    }\\n\\n    function _payAltToken(address _sender, uint _required, uint _supplied, address _sendLibrary) internal {\\n        if (_required == 0) return;\\n\\n        address token = altToken; // save one SLOAD\\n        require(token != address(0x0), \\\"LZD0002\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        IERC20(token).safeTransferFrom(_sender, _sendLibrary, _required);\\n    }\\n\\n    function _payNative(\\n        uint _required,\\n        uint _supplied,\\n        address payable _sendLibrary,\\n        address payable _refundAddress\\n    ) internal {\\n        require(altToken == address(0x0), \\\"LZD0001\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        if (_required > 0) {\\n            _sendLibrary.transfer(_required);\\n        }\\n        if (_required < _supplied) {\\n            // refund the excess\\n            _refundAddress.transfer(_supplied - _required);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xce20506e628091d4c0c87cc17f9f54125f757f517f60fdc9b5b4fa02ac4f463b\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroComposer {\\n    function lzCompose(\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _caller,\\n        bytes calldata _callerParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x6d6c8228020e75f08e2c4d4fb3e3e270eedf7508e9371955a971bec9f3e6f6c1\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IMessageLibManager.sol\\\";\\nimport \\\"./IMessagingComposer.sol\\\";\\n\\ninterface ILayerZeroEndpoint is IMessageLibManager, IMessagingComposer {\\n    struct MessagingParams {\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes message;\\n        bytes options;\\n    }\\n\\n    struct MessagingReceipt {\\n        bytes32 guid;\\n        uint64 nonce;\\n        MessagingFee fee;\\n    }\\n\\n    struct MessagingFee {\\n        uint nativeFee;\\n        uint lzTokenFee;\\n    }\\n\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketDelivered(\\n        uint32 srcEid,\\n        bytes32 sender,\\n        address receiver,\\n        uint64 nonce,\\n        bytes32 payloadHash,\\n        address receiveLibrary\\n    );\\n\\n    event PacketReceived(\\n        uint32 srcEid,\\n        bytes32 sender,\\n        address receiver,\\n        uint64 nonce,\\n        bytes32 payloadHash,\\n        address caller\\n    );\\n\\n    event LzReceiveFailed(\\n        uint32 srcEid,\\n        bytes32 sender,\\n        address receiver,\\n        uint64 nonce,\\n        bytes32 payloadHash,\\n        address caller,\\n        bytes reason\\n    );\\n\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n\\n    event FeePaid(address sender, uint nativeOrAltTokenFee, uint lzTokenFee);\\n\\n    event LayerZeroTokenSet(address token);\\n\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInZro,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        address payable _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        uint _altTokenFee\\n    ) external returns (MessagingReceipt memory);\\n\\n    function deliver(uint32 _srcEid, bytes32 _sender, address _receiver, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function lzReceive(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams,\\n        bool _tryCatch\\n    ) external payable;\\n\\n    function clear(\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _guid,\\n        bytes calldata _message\\n    ) external returns (bytes32 payloadHash);\\n\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function eid() external view returns (uint32);\\n\\n    function setLayerZeroToken(address _layerZeroToken) external;\\n\\n    function layerZeroToken() external view returns (address);\\n\\n    function altFeeToken() external view returns (address);\\n\\n    function getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function getOutboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function getInboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32, address);\\n\\n    function isReceivingMessage() external view returns (bool);\\n\\n    function getReceiveContext() external view returns (uint32, address);\\n}\\n\",\"keccak256\":\"0x97a6887bc26a0f2a842b2a65d85f6059c5eabad75ce06dae72b9e2c8266e599b\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice indicate the Receiver to receive the message in order or not\\n    function isOrdered() external view returns (bool);\\n\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcEid - the source endpoint identifier\\n    // @param _sender - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    function lzReceive(\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _callerParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x71280cdfede8894c8962438311697f821145c1cf220f4b82b456d3229f3db404\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"./ILayerZeroEndpoint.sol\\\";\\nimport \\\"./IPacket.sol\\\";\\n\\ninterface IMessageLib is IERC165, IPacket {\\n    function send(\\n        Packet calldata _packet,\\n        bytes calldata _options,\\n        bool _payInLzToken\\n    ) external returns (ILayerZeroEndpoint.MessagingReceipt memory, bytes memory encodedPacket, bytes memory options);\\n\\n    function quote(\\n        PacketForQuote calldata _packet,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (ILayerZeroEndpoint.MessagingFee memory);\\n\\n    function setTreasury(address _treasury) external;\\n\\n    function treasury() external view returns (address);\\n\\n    function setConfig(uint32 _eid, address _oapp, uint32 _configType, bytes calldata _config) external;\\n\\n    function snapshotConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function resetConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function getConfig(\\n        uint32 _eid,\\n        address _oapp,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function getDefaultConfig(uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    function withdrawFee(address _to, uint _amount) external;\\n\\n    function withdrawLzTokenFee(address _to, uint _amount) external;\\n\\n    // message libs of same major version are compatible\\n    function version() external view returns (uint64 major, uint8 minor, uint8 endpointVersion);\\n}\\n\",\"keccak256\":\"0xb7c491a347dc7e84af0f1023359109c1f02f048e3019e76dbdb229d77fd234d7\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address oldLib, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address oldLib, address newLib);\\n    event ReceiveLibraryTimoutSet(address receiver, uint32 eid, address oldLib, uint timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint _timeout) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function defaultConfig(address _messageLib, uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibrary(uint32 _eid, address _newLib, uint _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(uint32 _eid, address _lib, uint _gracePeriod) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function setConfig(address _messageLib, uint32 _eid, uint32 _configType, bytes calldata _config) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _messageLib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function snapshotConfig(address _messageLib, uint32[] calldata _eids) external;\\n\\n    function resetConfig(address _messageLib, uint32[] calldata _eids) external;\\n}\\n\",\"keccak256\":\"0x349e667ea1885307c0323e84805372ce323bd7b0195aa0a2f9a6f0b41bee968f\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposedMessageDelivered(address receiver, address composer, bytes32 guid, bytes message);\\n    event ComposedMessageReceived(\\n        address receiver,\\n        address composer,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller\\n    );\\n    event LzComposeFailed(\\n        address sender,\\n        address receiver,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller,\\n        bytes reason\\n    );\\n\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _receiver,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams,\\n        bool _tryCatch\\n    ) external payable;\\n\\n    function isComposingMessage() external view returns (bool);\\n\\n    function getComposeContext() external view returns (address);\\n}\\n\",\"keccak256\":\"0x5b0c911c9386259ceb30e62be24057a85d3e15c5568fa4fc9aab04c890d4c756\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPacket.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IPacket {\\n    struct PacketForQuote {\\n        address sender;\\n        uint32 dstEid;\\n        bytes message;\\n    }\\n\\n    struct Packet {\\n        uint64 nonce;\\n        uint32 srcEid;\\n        address sender;\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes message;\\n    }\\n}\\n\",\"keccak256\":\"0xb4b6970f4d5baecb84b9c12653a166cf7c682a133b48f0359a9b69ccb013118f\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106103605760003560e01c80638da5cb5b116101c6578063cdbb91a9116100f7578063ef57458d11610095578063f64be4c71161006f578063f64be4c714610c53578063f90f3ce214610c96578063f936112b14610ce4578063fd894a5314610d1757600080fd5b8063ef57458d14610bab578063ef667aa114610bdb578063f2fde38b14610c3357600080fd5b8063e16f964d116100d1578063e16f964d14610b36578063e8964e8114610b56578063eaeacd6314610b76578063eaf87bc714610b9657600080fd5b8063cdbb91a914610ac6578063d4b4ec8f14610ae6578063dc706a6214610b0657600080fd5b8063a9f73c4511610164578063b51315de1161013e578063b51315de14610a53578063b8849ac914610a73578063b96a277f14610a93578063bdbf279c14610ab357600080fd5b8063a9f73c45146109d2578063aafea31214610a20578063aca1b45a14610a4057600080fd5b80639b86cb4d116101a05780639b86cb4d146108e95780639c9dd91d146109545780639e7fffcc14610992578063a718531b146109b257600080fd5b80638da5cb5b1461086f5780639132e5c31461089a5780639731526b146108bc57600080fd5b806344760576116102a0578063715018a61161023e57806379624ca91161021857806379624ca914610792578063830139fc146107ac57806383c47559146108225780638736a38a1461084f57600080fd5b8063715018a614610729578063733180911461073e578063754d3b9c1461077257600080fd5b806366bf43d61161027a57806366bf43d61461062757806369e55fb8146106475780636e83f5bb1461066d5780636f50a803146106e657600080fd5b806344760576146105a157806351c85b6b146105da57806352d3b5001461060757600080fd5b80632b3197b91161030d5780633fa44675116102e75780633fa44675146104e2578063402f8468146104f757806340d2036e14610543578063416ecebf1461055857600080fd5b80632b3197b91461047457806338d71486146104a25780633906c031146104c257600080fd5b806307b9ca7c1161033e57806307b9ca7c146103cf5780630d8516011461041b57806314f651a91461042e57600080fd5b806303e83c13146103655780630445d13c146103875780630678327f146103af575b600080fd5b34801561037157600080fd5b5061038561038036600461447c565b610d2c565b005b34801561039357600080fd5b5061039c600181565b6040519081526020015b60405180910390f35b3480156103bb57600080fd5b506103856103ca3660046144f4565b610e3c565b3480156103db57600080fd5b50600c5473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016103a6565b6103856104293660046145a0565b610f41565b34801561043a57600080fd5b5061044361129b565b6040805163ffffffff909316835273ffffffffffffffffffffffffffffffffffffffff9091166020830152016103a6565b34801561048057600080fd5b5061049461048f36600461466d565b6112cb565b6040516103a6929190614733565b3480156104ae57600080fd5b506103856104bd366004614757565b61141b565b3480156104ce57600080fd5b5061039c6104dd3660046147b0565b6114b7565b3480156104ee57600080fd5b506103f6611511565b34801561050357600080fd5b50610517610512366004614801565b61155d565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683529015156020830152016103a6565b34801561054f57600080fd5b506103f6600081565b34801561056457600080fd5b5061058c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016103a6565b3480156105ad57600080fd5b506105c16105bc366004614836565b611624565b60405167ffffffffffffffff90911681526020016103a6565b3480156105e657600080fd5b506105fa6105f5366004614874565b611631565b6040516103a691906148b9565b34801561061357600080fd5b506103856106223660046148d3565b6116f2565b34801561063357600080fd5b506103856106423660046148f0565b611787565b34801561065357600080fd5b50600f5460115414155b60405190151581526020016103a6565b34801561067957600080fd5b506106ba61068836600461492f565b600b602052600090815260409020805460019091015473ffffffffffffffffffffffffffffffffffffffff9091169082565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016103a6565b3480156106f257600080fd5b506103f661070136600461492f565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561073557600080fd5b506103856119c8565b34801561074a57600080fd5b506103f67f000000000000000000000000000000000000000000000000000000000000000081565b34801561077e57600080fd5b5061038561078d36600461494a565b6119dc565b34801561079e57600080fd5b50600f54601054141561065d565b3480156107b857600080fd5b5061065d6107c73660046147b0565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260036020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff851684529091529020541515949350505050565b34801561082e57600080fd5b5061084261083d3660046149a6565b611aee565b6040516103a69190614a4e565b34801561085b57600080fd5b5061038561086a366004614a67565b611c97565b34801561087b57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166103f6565b3480156108a657600080fd5b506108af611e29565b6040516103a69190614ab0565b3480156108c857600080fd5b506108dc6108d7366004614b22565b611e98565b6040516103a69190614b70565b3480156108f557600080fd5b506105c1610904366004614836565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020908152604080832063ffffffff86168452825280832084845290915290205467ffffffffffffffff169392505050565b34801561096057600080fd5b5061039c61096f366004614bb3565b600d60209081526000938452604080852082529284528284209052825290205481565b34801561099e57600080fd5b506103856109ad3660046144f4565b611fe8565b3480156109be57600080fd5b506103856109cd3660046148f0565b6120b5565b3480156109de57600080fd5b506103f66109ed366004614801565b600760209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b348015610a2c57600080fd5b50610385610a3b366004614bd3565b612356565b6108dc610a4e366004614c0a565b6124e9565b348015610a5f57600080fd5b5061039c610a6e366004614c5a565b6125b3565b348015610a7f57600080fd5b50610385610a8e3660046148f0565b61265b565b348015610a9f57600080fd5b50610517610aae366004614801565b6129d2565b610385610ac1366004614cd4565b612a8e565b348015610ad257600080fd5b506103f6610ae1366004614d86565b612dcf565b348015610af257600080fd5b50610385610b013660046148f0565b612e06565b348015610b1257600080fd5b5061065d610b213660046148d3565b60056020526000908152604090205460ff1681565b348015610b4257600080fd5b50610385610b51366004614bd3565b612fd3565b348015610b6257600080fd5b50610385610b713660046148d3565b613191565b348015610b8257600080fd5b50610385610b91366004614d9f565b6133e2565b348015610ba257600080fd5b5061039c600081565b348015610bb757600080fd5b5061065d600e5473ffffffffffffffffffffffffffffffffffffffff166001141590565b348015610be757600080fd5b506106ba610bf6366004614801565b60086020908152600092835260408084209091529082529020805460019091015473ffffffffffffffffffffffffffffffffffffffff9091169082565b348015610c3f57600080fd5b50610385610c4e3660046148d3565b613448565b348015610c5f57600080fd5b506103f6610c6e36600461492f565b60096020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b348015610ca257600080fd5b506103f6610cb1366004614801565b600660209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b348015610cf057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103f6565b348015610d2357600080fd5b506104436134e5565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260056020526040902054859060ff16610da85760405162461bcd60e51b815260206004820152600760248201527f4c5a31303030310000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517f37d570ef00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716906337d570ef90610e029088903390899089908990600401614e1d565b600060405180830381600087803b158015610e1c57600080fd5b505af1158015610e30573d6000803e3d6000fd5b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040902054839060ff16610eb35760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b6040517f1c63e3b600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851690631c63e3b690610f0990869086903390600401614e63565b600060405180830381600087803b158015610f2357600080fd5b505af1158015610f37573d6000803e3d6000fd5b5050505050505050565b888a600f5460115414610f965760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303032000000000000000000000000000000000000000000000000006044820152606401610d9f565b77ffffffff000000000000000000000000000000000000000060a083901b1673ffffffffffffffffffffffffffffffffffffffff821617601155604051600090610fe8908a908a908a90602001614ecb565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181526020601f8b0181900481028401810190925289835292508e918e918e918e918e916000918f908f9081908401838280828437600081840152601f19601f82011690508083019250505050505050905060008c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040517fe270fdf90000000000000000000000000000000000000000000000000000000081529293505073ffffffffffffffffffffffffffffffffffffffff89169163e270fdf9915034906110fd908a908a908a908a908a9033908b90600401614ee5565b6000604051808303818588803b15801561111657600080fd5b505af193505050508015611128575060015b6111f2573d808015611156576040519150601f19603f3d011682016040523d82523d6000602084013e61115b565b606091505b508b156111e45734156111965760405133903480156108fc02916000818181858888f19350505050158015611194573d6000803e3d6000fd5b505b885160208a01206040517f8368eedcba2bd20dde49d7d03e0bdd5d8d8a5eee830e724e174e9557aba393c8916111d7918a918a918d918b9133908990614f4e565b60405180910390a16111ec565b805160208201fd5b5061127f565b6000611201888888888d61350f565b6040805163ffffffff8a1681526020810189905273ffffffffffffffffffffffffffffffffffffffff8b168183015267ffffffffffffffff88166060820152608081018390523360a082015290519192507f36a712d838370fbefd9d182cbb8bcf882d7ff8da788689b8eb76e0d97cb12959919081900360c00190a1505b5050600f54601155505050505050505050505050505050505050565b6000806112ac600f54601054141590565b6112b8576000806112c3565b60a0601054901c6010545b915091509091565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604081205460609190859060ff166113465760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b6040517f9c33abf700000000000000000000000000000000000000000000000000000000815263ffffffff808716600483015273ffffffffffffffffffffffffffffffffffffffff89811660248401529086166044830152871690639c33abf790606401600060405180830381865afa1580156113c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261140d9190810190615091565b925092505094509492505050565b611426838633611c97565b61143383868685856137be565b6040805163ffffffff871681526020810186905273ffffffffffffffffffffffffffffffffffffffff85169181019190915267ffffffffffffffff83166060820152608081018290523360a08201527fb050f74c1b909fdaa18eff7df8c4190882955066b08e982c4ce9a2a4663b6e439060c0015b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260036020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff851684529091529020545b949350505050565b6000611536600e5473ffffffffffffffffffffffffffffffffffffffff166001141590565b6115405750600090565b50600e5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260076020908152604080832063ffffffff86168452909152812054909116908161161d5763ffffffff83166000908152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff169150816116195760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610d9f565b5060015b9250929050565b600061150984848461394d565b6040517f690c655500000000000000000000000000000000000000000000000000000000815263ffffffff80841660048301528216602482015260609073ffffffffffffffffffffffffffffffffffffffff85169063690c655590604401600060405180830381865afa1580156116ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261150991908101906150d8565b6116fa6139bf565b600c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905560405173ffffffffffffffffffffffffffffffffffffffff821681527ff66b6c5fcba13210e695e203c62d584c85a4193f8a279598609bb6af760b17c1906020015b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054829060ff166117fe5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b600061180a338661155d565b915050801561185b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610d9f565b826000036118b25733600090815260086020908152604080832063ffffffff89168452909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155611966565b4283116119015760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b33600090815260086020908152604080832063ffffffff89168452909152902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86161781556001018390555b6040805133815263ffffffff8716602082015273ffffffffffffffffffffffffffffffffffffffff861691810191909152606081018490527f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e906080016114a8565b6119d06139bf565b6119da6000613a26565b565b336000908152600d6020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452825280832086845290915290205415611a625760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b60008282604051611a7492919061510d565b60408051918290038220336000818152600d602090815284822073ffffffffffffffffffffffffffffffffffffffff8c16835281528482208a835290529290922081905592507f7c0503be82d6ab0d4ea200b69f9930b82aec3c92ed138ed1a28f60cd9c3626db916114a89190889088908890889061511d565b6040805180820190915260008082526020820152831580611b265750600c5473ffffffffffffffffffffffffffffffffffffffff1615155b611b725760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610d9f565b6000611b7e89896129d2565b509050600060405180606001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018a63ffffffff16815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517f07d7b2f900000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8316906307d7b2f990611c499084908a908a908a9060040161515d565b6040805180830381865afa158015611c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c899190615215565b9a9950505050505050505050565b600080611ca4858561155d565b915091508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ce2575050505050565b600081611d245773ffffffffffffffffffffffffffffffffffffffff8616600090815260086020908152604080832063ffffffff891684529091529020611d3a565b63ffffffff85166000908152600b602052604090205b60408051808201909152815473ffffffffffffffffffffffffffffffffffffffff9081168083526001909301546020830152909250851614611dbe5760405162461bcd60e51b815260206004820152600760248201527f4c5a3530303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b60008160200151118015611dd55750428160200151115b611e215760405162461bcd60e51b815260206004820152600760248201527f4c5a3230303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611e8e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611e63575b5050505050905090565b611ea06143b7565b611ead602085018561492f565b33600f5460105414611f015760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b77ffffffff000000000000000000000000000000000000000060a083901b1673ffffffffffffffffffffffffffffffffffffffff82161760105533600080611f4a838a8a613a9b565b91509150611f62838360400151600001518984613cb9565b611f76838360400151602001518a84613dbd565b6040828101518051602091820151835173ffffffffffffffffffffffffffffffffffffffff88168152928301919091528183015290517ff3816d9cce3442fbfe3e4d36ad047b3362efdc9f2e283e77b0ecd768a0a01ef29181900360600190a150600f54601055979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040902054839060ff1661205f5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b6040517fd2d287f000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063d2d287f090610f0990869086903390600401614e63565b6120bd6139bf565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054829060ff166121345760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b63ffffffff84166000908152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff90811690841681036121b35760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610d9f565b821561227e5763ffffffff85166000908152600b6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161781556122168442615260565b600182018190556040805163ffffffff8916815273ffffffffffffffffffffffffffffffffffffffff8516602082015280820192909252517f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f89181900360600190a1506122be565b63ffffffff85166000908152600b6020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b63ffffffff85166000818152600a602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff898116918217909255835194855290851691840191909152908201527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea5906060016114a8565b61235e6139bf565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040902054819060ff166123d55760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b63ffffffff831660009081526009602052604090205473ffffffffffffffffffffffffffffffffffffffff90811690831681036124545760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610d9f565b63ffffffff841660008181526009602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88169081179091558251938452908301527f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f591015b60405180910390a150505050565b6124f16143b7565b6124fe602085018561492f565b33600f54601054146125525760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b77ffffffff000000000000000000000000000000000000000060a083901b1673ffffffffffffffffffffffffffffffffffffffff8216176010553360008061259b838a8a613a9b565b91509150611f6282604001516000015134838a613e29565b6000808484846040516020016125cb93929190614ecb565b60405160208183030381529060405290506125e9338989898561350f565b6040805163ffffffff8b168152602081018a90523381830181905267ffffffffffffffff8a1660608301526080820184905260a082015290519193507f36a712d838370fbefd9d182cbb8bcf882d7ff8da788689b8eb76e0d97cb12959919081900360c00190a1509695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054829060ff16806126a5575073ffffffffffffffffffffffffffffffffffffffff8116155b6126f15760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610d9f565b33600090815260076020908152604080832063ffffffff8816845290915290205473ffffffffffffffffffffffffffffffffffffffff908116908416810361277b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610d9f565b82156128dd5773ffffffffffffffffffffffffffffffffffffffff8116158015906127bb575073ffffffffffffffffffffffffffffffffffffffff841615155b6128075760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610d9f565b33600090815260086020908152604080832063ffffffff89168452909152902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617815561286f8442615260565b600182018190556040805133815263ffffffff8916602082015273ffffffffffffffffffffffffffffffffffffffff8516818301526060810192909252517f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e9181900360800190a150612928565b33600090815260086020908152604080832063ffffffff89168452909152812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b33600081815260076020908152604080832063ffffffff8a168085529083529281902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a81169182179092558251958652928501939093529184169183019190915260608201527fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa906080016114a8565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260066020908152604080832063ffffffff86168452909152812054909116908161161d5763ffffffff831660009081526009602052604090205473ffffffffffffffffffffffffffffffffffffffff169150816116195760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610d9f565b600e54889073ffffffffffffffffffffffffffffffffffffffff16600114612af85760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303033000000000000000000000000000000000000000000000000006044820152606401610d9f565b600e80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff838116919091179091558981166000908152600d60209081526040808320938c1683529281528282208a83529052819020549051612b74908890889061510d565b60405180910390208114612bca5760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b6040517fd0a1026000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a169063d0a10260903490612c2a908e908d908d908d9033908e908e90600401615273565b6000604051808303818588803b158015612c4357600080fd5b505af193505050508015612c55575060015b612d0a573d808015612c83576040519150601f19603f3d011682016040523d82523d6000602084013e612c88565b606091505b5083156111e4573415612cc35760405133903480156108fc02916000818181858888f19350505050158015612cc1573d6000803e3d6000fd5b505b7f8054fc0b1a2df897569746b52a49553918b57ffcedcd0a35f0e8553d5ebba6768b8b8b853386604051612cfc969594939291906152d4565b60405180910390a150612d98565b73ffffffffffffffffffffffffffffffffffffffff8a81166000818152600d60209081526040808320948e168084529482528083208d8452825291829020600190558151928352820192909252908101899052606081018290523360808201527fe8de892dbb4fd705fc4c154fd784700f6f24789e8ffea6922947d082606887949060a00160405180910390a15b5050600e80547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790555050505050505050565b60048181548110612ddf57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054829060ff16612e7d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b612e856139bf565b81600003612ed15763ffffffff84166000908152600b6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155612f7a565b428211612f205760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b63ffffffff84166000908152600b6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161781556001018290555b6040805163ffffffff8616815273ffffffffffffffffffffffffffffffffffffffff851660208201529081018390527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8906060016124db565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040902054819060ff168061301d575073ffffffffffffffffffffffffffffffffffffffff8116155b6130695760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610d9f565b33600090815260066020908152604080832063ffffffff8716845290915290205473ffffffffffffffffffffffffffffffffffffffff90811690831681036130f35760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610d9f565b33600081815260066020908152604080832063ffffffff89168085529083529281902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8916908117909155815194855291840192909252908201527f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c906060016124db565b6131996139bf565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f1532172f00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa158015613223573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613247919061532d565b6132935760405162461bcd60e51b815260206004820152600760248201527f4c5a4330303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090205460ff16156133095760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260056020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910161177c565b6133ee33848484613f9c565b6040805163ffffffff8516815260208101849052338183015267ffffffffffffffff8316606082015290517f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde489181900360800190a1505050565b6134506139bf565b73ffffffffffffffffffffffffffffffffffffffff81166134d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610d9f565b6134e281613a26565b50565b6000806134f6600f54601154141590565b613502576000806112c3565b505060115460a081901c91565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832063ffffffff88168452825280832086845290915281205467ffffffffffffffff9081169084168110156136b057600061357182600161534a565b90505b8467ffffffffffffffff168167ffffffffffffffff161161363e5773ffffffffffffffffffffffffffffffffffffffff8816600090815260036020908152604080832063ffffffff8b1684528252808320898452825280832067ffffffffffffffff8516845290915290205461362c5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610d9f565b806136368161536b565b915050613574565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260016020908152604080832063ffffffff8a1684528252808320888452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff86161790555b825160208085019190912073ffffffffffffffffffffffffffffffffffffffff8916600090815260038352604080822063ffffffff8b1683528452808220898352845280822067ffffffffffffffff89168352909352919091205490925080831461375d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b505073ffffffffffffffffffffffffffffffffffffffff909516600090815260036020908152604080832063ffffffff909716835295815285822094825293845284812067ffffffffffffffff909316815291909252918220919091555090565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832063ffffffff88168452825280832086845290915290205467ffffffffffffffff908116908316116138595760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610d9f565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260036020908152604080832063ffffffff881684528252808320868452825280832067ffffffffffffffff86168452909152902054156138f75760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610d9f565b73ffffffffffffffffffffffffffffffffffffffff909416600090815260036020908152604080832063ffffffff909616835294815284822093825292835283812067ffffffffffffffff909216815291522055565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020908152604080832063ffffffff86168452825280832084845290915281205467ffffffffffffffff165b6139a88585856107c785600161534a565b1561150957806139b78161536b565b915050613997565b60005473ffffffffffffffffffffffffffffffffffffffff1633146119da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d9f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613aa36143b7565b600080613ac186613ab7602088018861492f565b876020013561408f565b90506000613ad687610aae602089018961492f565b50905060006040518060c001604052808467ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff168152602001886000016020810190613b51919061492f565b63ffffffff16815260200188602001358152602001888060400190613b769190615392565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935088151592509050808073ffffffffffffffffffffffffffffffffffffffff861663a9a4180686613be160608f018f615392565b886040518563ffffffff1660e01b8152600401613c0194939291906153f7565b6000604051808303816000875af1158015613c20573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613c6691908101906154a2565b9250925092507f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f828288604051613c9f9392919061556a565b60405180910390a150909a93995092975050505050505050565b8215613db7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8116613d435760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303032000000000000000000000000000000000000000000000000006044820152606401610d9f565b82841115613d935760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610d9f565b613db573ffffffffffffffffffffffffffffffffffffffff8216868487614112565b505b50505050565b8215613db757600c5473ffffffffffffffffffffffffffffffffffffffff1680613d435760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610d9f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1615613ead5760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303031000000000000000000000000000000000000000000000000006044820152606401610d9f565b82841115613efd5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610d9f565b8315613f485760405173ffffffffffffffffffffffffffffffffffffffff83169085156108fc029086906000818181858888f19350505050158015613f46573d6000803e3d6000fd5b505b82841015613db75773ffffffffffffffffffffffffffffffffffffffff81166108fc613f7486866155b6565b6040518115909202916000818181858888f19350505050158015613db5573d6000803e3d6000fd5b613fa784848461394d565b613fb290600161534a565b67ffffffffffffffff168167ffffffffffffffff16146140145760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610d9f565b73ffffffffffffffffffffffffffffffffffffffff909316600090815260016020908152604080832063ffffffff90951683529381528382209282529190915220805467ffffffffffffffff9092167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020908152604080832063ffffffff8616845282528083208484529091528120805482906140e49067ffffffffffffffff1661536b565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905590509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152613db7928792916000916141e591851690849061427a565b8051909150156142755780806020019051810190614203919061532d565b6142755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d9f565b505050565b60606115098484600085856000808673ffffffffffffffffffffffffffffffffffffffff1685876040516142ae91906155c9565b60006040518083038185875af1925050503d80600081146142eb576040519150601f19603f3d011682016040523d82523d6000602084013e6142f0565b606091505b50915091506143018783838761430c565b979650505050505050565b606083156143885782516000036143815773ffffffffffffffffffffffffffffffffffffffff85163b6143815760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d9f565b5081611509565b611509838381511561439d5781518083602001fd5b8060405162461bcd60e51b8152600401610d9f91906148b9565b604051806060016040528060008019168152602001600067ffffffffffffffff1681526020016143fa604051806040016040528060008152602001600081525090565b905290565b73ffffffffffffffffffffffffffffffffffffffff811681146134e257600080fd5b803563ffffffff8116811461443557600080fd5b919050565b60008083601f84011261444c57600080fd5b50813567ffffffffffffffff81111561446457600080fd5b60208301915083602082850101111561161d57600080fd5b60008060008060006080868803121561449457600080fd5b853561449f816143ff565b94506144ad60208701614421565b93506144bb60408701614421565b9250606086013567ffffffffffffffff8111156144d757600080fd5b6144e38882890161443a565b969995985093965092949392505050565b60008060006040848603121561450957600080fd5b8335614514816143ff565b9250602084013567ffffffffffffffff8082111561453157600080fd5b818601915086601f83011261454557600080fd5b81358181111561455457600080fd5b8760208260051b850101111561456957600080fd5b6020830194508093505050509250925092565b67ffffffffffffffff811681146134e257600080fd5b80151581146134e257600080fd5b6000806000806000806000806000806101008b8d0312156145c057600080fd5b8a356145cb816143ff565b99506145d960208c01614421565b985060408b0135975060608b01356145f08161457c565b965060808b0135955060a08b013567ffffffffffffffff8082111561461457600080fd5b6146208e838f0161443a565b909750955060c08d013591508082111561463957600080fd5b506146468d828e0161443a565b90945092505060e08b013561465a81614592565b809150509295989b9194979a5092959850565b6000806000806080858703121561468357600080fd5b843561468e816143ff565b9350602085013561469e816143ff565b92506146ac60408601614421565b91506146ba60608601614421565b905092959194509250565b60005b838110156146e05781810151838201526020016146c8565b50506000910152565b600081518084526147018160208601602086016146c5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061474660408301856146e9565b905082151560208301529392505050565b600080600080600060a0868803121561476f57600080fd5b61477886614421565b945060208601359350604086013561478f816143ff565b9250606086013561479f8161457c565b949793965091946080013592915050565b600080600080608085870312156147c657600080fd5b84356147d1816143ff565b93506147df60208601614421565b92506040850135915060608501356147f68161457c565b939692955090935050565b6000806040838503121561481457600080fd5b823561481f816143ff565b915061482d60208401614421565b90509250929050565b60008060006060848603121561484b57600080fd5b8335614856816143ff565b925061486460208501614421565b9150604084013590509250925092565b60008060006060848603121561488957600080fd5b8335614894816143ff565b92506148a260208501614421565b91506148b060408501614421565b90509250925092565b6020815260006148cc60208301846146e9565b9392505050565b6000602082840312156148e557600080fd5b81356148cc816143ff565b60008060006060848603121561490557600080fd5b61490e84614421565b9250602084013561491e816143ff565b929592945050506040919091013590565b60006020828403121561494157600080fd5b6148cc82614421565b6000806000806060858703121561496057600080fd5b843561496b816143ff565b935060208501359250604085013567ffffffffffffffff81111561498e57600080fd5b61499a8782880161443a565b95989497509550505050565b600080600080600080600060a0888a0312156149c157600080fd5b87356149cc816143ff565b96506149da60208901614421565b9550604088013567ffffffffffffffff808211156149f757600080fd5b614a038b838c0161443a565b909750955060608a01359150614a1882614592565b90935060808901359080821115614a2e57600080fd5b50614a3b8a828b0161443a565b989b979a50959850939692959293505050565b8151815260208083015190820152604081015b92915050565b600080600060608486031215614a7c57600080fd5b8335614a87816143ff565b9250614a9560208501614421565b91506040840135614aa5816143ff565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614afe57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101614acc565b50909695505050505050565b600060808284031215614b1c57600080fd5b50919050565b600080600060608486031215614b3757600080fd5b833567ffffffffffffffff811115614b4e57600080fd5b614b5a86828701614b0a565b9660208601359650604090950135949350505050565b60006080820190508251825267ffffffffffffffff60208401511660208301526040830151614bac604084018280518252602090810151910152565b5092915050565b600080600060608486031215614bc857600080fd5b833561490e816143ff565b60008060408385031215614be657600080fd5b614bef83614421565b91506020830135614bff816143ff565b809150509250929050565b600080600060608486031215614c1f57600080fd5b833567ffffffffffffffff811115614c3657600080fd5b614c4286828701614b0a565b935050602084013591506040840135614aa5816143ff565b60008060008060008060a08789031215614c7357600080fd5b614c7c87614421565b9550602087013594506040870135614c938161457c565b935060608701359250608087013567ffffffffffffffff811115614cb657600080fd5b614cc289828a0161443a565b979a9699509497509295939492505050565b60008060008060008060008060c0898b031215614cf057600080fd5b8835614cfb816143ff565b97506020890135614d0b816143ff565b965060408901359550606089013567ffffffffffffffff80821115614d2f57600080fd5b614d3b8c838d0161443a565b909750955060808b0135915080821115614d5457600080fd5b50614d618b828c0161443a565b90945092505060a0890135614d7581614592565b809150509295985092959890939650565b600060208284031215614d9857600080fd5b5035919050565b600080600060608486031215614db457600080fd5b614dbd84614421565b9250602084013591506040840135614aa58161457c565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600063ffffffff808816835273ffffffffffffffffffffffffffffffffffffffff8716602084015280861660408401525060806060830152614301608083018486614dd4565b6040808252810183905260008460608301825b86811015614ea15763ffffffff614e8c84614421565b16825260209283019290910190600101614e76565b50809250505073ffffffffffffffffffffffffffffffffffffffff83166020830152949350505050565b838152818360208301376000910160200190815292915050565b63ffffffff8816815286602082015267ffffffffffffffff8616604082015284606082015260e060808201526000614f2060e08301866146e9565b73ffffffffffffffffffffffffffffffffffffffff851660a084015282810360c0840152611c8981856146e9565b63ffffffff88168152866020820152600073ffffffffffffffffffffffffffffffffffffffff808816604084015267ffffffffffffffff8716606084015285608084015280851660a08401525060e060c0830152614faf60e08301846146e9565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112614ffc57600080fd5b815167ffffffffffffffff8082111561501757615017614fbc565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561505d5761505d614fbc565b8160405283815286602085880101111561507657600080fd5b6150878460208301602089016146c5565b9695505050505050565b600080604083850312156150a457600080fd5b825167ffffffffffffffff8111156150bb57600080fd5b6150c785828601614feb565b9250506020830151614bff81614592565b6000602082840312156150ea57600080fd5b815167ffffffffffffffff81111561510157600080fd5b61150984828501614feb565b8183823760009101908152919050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152614301608083018486614dd4565b6060815273ffffffffffffffffffffffffffffffffffffffff855116606082015263ffffffff602086015116608082015260006040860151606060a08401526151a960c08401826146e9565b905085151560208401528281036040840152614301818587614dd4565b6000604082840312156151d857600080fd5b6040516040810181811067ffffffffffffffff821117156151fb576151fb614fbc565b604052825181526020928301519281019290925250919050565b60006040828403121561522757600080fd5b6148cc83836151c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115614a6157614a61615231565b600073ffffffffffffffffffffffffffffffffffffffff808a16835288602084015260a060408401526152aa60a08401888a614dd4565b818716606085015283810360808501526152c5818688614dd4565b9b9a5050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015286604084015285606084015280851660808401525060c060a083015261532160c08301846146e9565b98975050505050505050565b60006020828403121561533f57600080fd5b81516148cc81614592565b67ffffffffffffffff818116838216019080821115614bac57614bac615231565b600067ffffffffffffffff80831681810361538857615388615231565b6001019392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126153c757600080fd5b83018035915067ffffffffffffffff8211156153e257600080fd5b60200191503681900382131561161d57600080fd5b6060815267ffffffffffffffff85511660608201526000602086015163ffffffff808216608085015273ffffffffffffffffffffffffffffffffffffffff60408901511660a08501528060608901511660c08501525050608086015160e083015260a086015160c06101008401526154736101208401826146e9565b90508281036020840152615488818688614dd4565b915050615499604083018415159052565b95945050505050565b600080600083850360c08112156154b857600080fd5b60808112156154c657600080fd5b506040516060810167ffffffffffffffff82821081831117156154eb576154eb614fbc565b8160405286518352602087015191506155038261457c565b81602084015261551688604089016151c6565b604084015260808701519295508083111561553057600080fd5b61553c88848901614feb565b945060a087015192508083111561555257600080fd5b505061556086828701614feb565b9150509250925092565b60608152600061557d60608301866146e9565b828103602084015261558f81866146e9565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b81810381811115614a6157614a61615231565b600082516155db8184602087016146c5565b919091019291505056fea2646970667358221220f3c5f2dd0b438d38224aef50bfe912b324233584c74ce42dbb2a7323966ba22964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setSendLibrary(uint32,address)": {
        "notice": "------------------- OApp interfaces -------------------"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2562,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "lazyInboundNonce",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 2570,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "outboundNonce",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 2580,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "inboundPayloadHash",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))"
      },
      {
        "astId": 1747,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "registeredLibraries",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1751,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "isRegisteredLibrary",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1757,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "sendLibrary",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 1763,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "receiveLibrary",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 1770,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "receiveLibraryTimeout",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)3731_storage))"
      },
      {
        "astId": 1774,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultSendLibrary",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 1778,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultReceiveLibrary",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 1783,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultReceiveLibraryTimeout",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint32,t_struct(Timeout)3731_storage)"
      },
      {
        "astId": 3109,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "lzToken",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 2889,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "composedMessages",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))"
      },
      {
        "astId": 2892,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_composeContext",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 918,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_NOT_ENTERED",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 921,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_sendContext",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 924,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_receiveContext",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bytes32 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes32)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => uint64)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)3731_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => struct IMessageLibManager.Timeout))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_struct(Timeout)3731_storage)"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint64 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes32)"
      },
      "t_mapping(t_bytes32,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint32,t_address)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint64)"
      },
      "t_mapping(t_uint32,t_struct(Timeout)3731_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct IMessageLibManager.Timeout)",
        "numberOfBytes": "32",
        "value": "t_struct(Timeout)3731_storage"
      },
      "t_mapping(t_uint64,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_struct(Timeout)3731_storage": {
        "encoding": "inplace",
        "label": "struct IMessageLibManager.Timeout",
        "members": [
          {
            "astId": 3728,
            "contract": "contracts/Endpoint.sol:Endpoint",
            "label": "lib",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3730,
            "contract": "contracts/Endpoint.sol:Endpoint",
            "label": "expiry",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}