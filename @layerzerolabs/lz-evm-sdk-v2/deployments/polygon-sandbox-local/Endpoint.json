{
  "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_blockedLib",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_altToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "ComposedMessageDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ComposedMessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "DefaultReceiveLibraryTimeoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultSendLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nativeOrAltTokenFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lzTokenFee",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "InboundNonceSkipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LayerZeroTokenSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "LibraryRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzComposeFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzReceiveFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiveLibrary",
          "type": "address"
        }
      ],
      "name": "PacketDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "PacketReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encodedPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sendLibrary",
          "type": "address"
        }
      ],
      "name": "PacketSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "ReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeout",
          "type": "uint256"
        }
      ],
      "name": "ReceiveLibraryTimoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "SendLibrarySet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "altFeeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockedLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "clear",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        }
      ],
      "name": "composedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "defaultConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstEid",
          "type": "uint32"
        }
      ],
      "name": "defaultSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "deliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "deliverComposedMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiveLib",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "deliverable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eid",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getComposeContext",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oapp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "config",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        }
      ],
      "name": "getInboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "getInboundPayloadHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_receiver",
          "type": "bytes32"
        }
      ],
      "name": "getNextGuid",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_receiver",
          "type": "bytes32"
        }
      ],
      "name": "getOutboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReceiveContext",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        }
      ],
      "name": "getReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredLibraries",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSendContext",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        }
      ],
      "name": "getSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "hasPayloadHash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isComposingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isReceivingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "name": "isRegisteredLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSendingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        }
      ],
      "name": "isSupportedEid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_actualReceiveLib",
          "type": "address"
        }
      ],
      "name": "isValidReceiveLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_callerParams",
          "type": "bytes"
        }
      ],
      "name": "lzCompose",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_callerParams",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_payInLzToken",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_options",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nativeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lzTokenFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingFee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "receiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        }
      ],
      "name": "registerLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "resetConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFee",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        }
      ],
      "name": "send",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpoint.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_altTokenFee",
          "type": "uint256"
        }
      ],
      "name": "sendWithAlt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpoint.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpoint.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "configType",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "config",
              "type": "bytes"
            }
          ],
          "internalType": "struct IMessageLibManager.ConfigParam[]",
          "name": "_params",
          "type": "tuple[]"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setDefaultSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroToken",
          "type": "address"
        }
      ],
      "name": "setLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "snapshotConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe6542fc8e2f2d8eed82a99ba9f7af31268fba1b28f1bf190d74c0e2d7543b90e",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
    "transactionIndex": 0,
    "gasUsed": "5323606",
    "logsBloom": "0x
    "blockHash": "0x36d46b2c9d50b4c78c5a80e8848a5b61944a67f330d239b2f23ce6d8a0973685",
    "transactionHash": "0xe6542fc8e2f2d8eed82a99ba9f7af31268fba1b28f1bf190d74c0e2d7543b90e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 117,
        "transactionHash": "0xe6542fc8e2f2d8eed82a99ba9f7af31268fba1b28f1bf190d74c0e2d7543b90e",
        "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x36d46b2c9d50b4c78c5a80e8848a5b61944a67f330d239b2f23ce6d8a0973685"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 117,
        "transactionHash": "0xe6542fc8e2f2d8eed82a99ba9f7af31268fba1b28f1bf190d74c0e2d7543b90e",
        "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
        "topics": [
          "0x6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5"
        ],
        "data": "0x000000000000000000000000c6ba8c3233ecf65b761049ef63466945c362edd2",
        "logIndex": 1,
        "blockHash": "0x36d46b2c9d50b4c78c5a80e8848a5b61944a67f330d239b2f23ce6d8a0973685"
      }
    ],
    "blockNumber": 117,
    "cumulativeGasUsed": "5323606",
    "status": 1,
    "byzantium": true
  },
  "args": [
    50109,
    "0xC6bA8C3233eCF65B761049ef63466945c362EdD2",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "483627349c521129e59b207c5348a8fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_blockedLib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_altToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposedMessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ComposedMessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeOrAltTokenFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LayerZeroTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveLibrary\",\"type\":\"address\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PacketReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"altFeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockedLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"}],\"name\":\"composedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"defaultConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"deliverComposedMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiveLib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deliverable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComposeContext\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"getInboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"getNextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReceiveContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"hasPayloadHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComposingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_actualReceiveLib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_callerParams\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_callerParams\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInLzToken\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"resetConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFee\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_altTokenFee\",\"type\":\"uint256\"}],\"name\":\"sendWithAlt\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpoint.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct IMessageLibManager.ConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroToken\",\"type\":\"address\"}],\"name\":\"setLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"snapshotConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliverable((uint32,bytes32,uint64),address,address)\":{\"notice\":\"check if a message is deliverable. if false, the message is delivered. otherwise, it is deliverable.\"},\"recoverToken(address,address,uint256)\":{\"notice\":\"recover the token sent to this contract by mistake\"},\"setSendLibrary(uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Endpoint.sol\":\"Endpoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Endpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./libs/SafeCall.sol\\\";\\n\\nimport \\\"./MessagingChannel.sol\\\";\\nimport \\\"./MessagingFeeHandler.sol\\\";\\nimport \\\"./MessagingComposer.sol\\\";\\nimport \\\"./MessageLibManager.sol\\\";\\n\\ncontract Endpoint is ILayerZeroEndpoint, MessagingChannel, MessageLibManager, MessagingFeeHandler, MessagingComposer {\\n    using SafeERC20 for IERC20;\\n    using SafeCall for address;\\n\\n    uint32 public immutable eid;\\n    uint private constant _NOT_ENTERED = 1;\\n\\n    // uint32 + address\\n    uint private _sendContext = _NOT_ENTERED;\\n    // uint32 + address\\n    uint private _receiveContext = _NOT_ENTERED;\\n\\n    constructor(\\n        uint32 _eid,\\n        address _blockedLib,\\n        address _altToken\\n    ) MessageLibManager(_blockedLib) MessagingFeeHandler(_altToken) {\\n        eid = _eid;\\n    }\\n\\n    modifier sendContext(uint32 _dstEid, address _sender) {\\n        require(_sendContext == _NOT_ENTERED, \\\"LZ30001\\\");\\n        _sendContext = (uint(_dstEid) << 160) | uint160(_sender);\\n        _;\\n        _sendContext = _NOT_ENTERED;\\n    }\\n\\n    modifier receiveContext(uint32 _srcEid, address _receiver) {\\n        require(_receiveContext == _NOT_ENTERED, \\\"LZ30002\\\");\\n        _receiveContext = (uint(_srcEid) << 160) | uint160(_receiver);\\n        _;\\n        _receiveContext = _NOT_ENTERED;\\n    }\\n\\n    function layerZeroToken() public view returns (address) {\\n        return lzToken;\\n    }\\n\\n    function setLayerZeroToken(address _layerZeroToken) external onlyOwner {\\n        _setLayerZeroToken(_layerZeroToken);\\n        emit LayerZeroTokenSet(_layerZeroToken);\\n    }\\n\\n    /// recover the token sent to this contract by mistake\\n    function recoverToken(address _token, address _to, uint _amount) external onlyOwner {\\n        if (_token == address(0)) {\\n            payable(_to).transfer(_amount);\\n        } else {\\n            IERC20(_token).safeTransfer(_to, _amount);\\n        }\\n    }\\n\\n    function altFeeToken() public view returns (address) {\\n        return altToken;\\n    }\\n\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory) {\\n        require(!_payInLzToken || lzToken != address(0x0), \\\"LZD0003\\\");\\n\\n        (address sendLibrary, ) = getSendLibrary(_sender, _dstEid);\\n        IPacket.PacketForQuote memory packet = IPacket.PacketForQuote({\\n            sender: _sender,\\n            dstEid: _dstEid,\\n            message: _message\\n        });\\n        return IMessageLib(sendLibrary).quote(packet, _payInLzToken, _options);\\n    }\\n\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        uint _altTokenFee\\n    ) external sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFee);\\n\\n        // handle fees\\n        _payAltToken(sender, receipt.fee.nativeFee, _altTokenFee, payable(sendLibrary));\\n        _payLayerZeroToken(sender, receipt.fee.lzTokenFee, _lzTokenFee, sendLibrary);\\n        emit FeePaid(sender, receipt.fee.nativeFee, receipt.fee.lzTokenFee);\\n\\n        return receipt;\\n    }\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        address payable _refundAddress\\n    ) external payable sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFee);\\n\\n        // handle fees\\n        _payNative(receipt.fee.nativeFee, msg.value, payable(sendLibrary), _refundAddress);\\n        _payLayerZeroToken(sender, receipt.fee.lzTokenFee, _lzTokenFee, sendLibrary);\\n        emit FeePaid(sender, receipt.fee.nativeFee, receipt.fee.lzTokenFee);\\n\\n        return receipt;\\n    }\\n\\n    function _send(\\n        address _sender,\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee\\n    ) internal returns (MessagingReceipt memory, address) {\\n        uint64 nonce = _outbound(_sender, _params.dstEid, _params.receiver);\\n        (address sendLibrary, ) = getSendLibrary(_sender, _params.dstEid);\\n\\n        IPacket.Packet memory packet = IPacket.Packet({\\n            nonce: nonce,\\n            srcEid: eid,\\n            sender: _sender,\\n            dstEid: _params.dstEid,\\n            receiver: _params.receiver,\\n            guid: _getGuid(nonce, _sender, _params.dstEid, _params.receiver),\\n            message: _params.message\\n        });\\n\\n        bool payInLzToken = _lzTokenFee > 0;\\n\\n        (MessagingReceipt memory receipt, bytes memory encodedPacket, bytes memory options) = IMessageLib(sendLibrary)\\n            .send(packet, _params.options, payInLzToken);\\n        emit PacketSent(encodedPacket, options, sendLibrary);\\n        return (receipt, sendLibrary);\\n    }\\n\\n    function getNextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32) {\\n        uint64 nextNonce = outboundNonce[_sender][_dstEid][_receiver] + 1;\\n        return _getGuid(nextNonce, _sender, _dstEid, _receiver);\\n    }\\n\\n    function _getGuid(\\n        uint64 _nonce,\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes32 _receiver\\n    ) internal view returns (bytes32 guid) {\\n        bytes memory path = abi.encodePacked(eid, bytes32(uint(uint160(_sender))), _dstEid, _receiver);\\n        guid = keccak256(abi.encodePacked(_nonce, path));\\n    }\\n\\n    function deliver(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) external {\\n        if (!isValidReceiveLibrary(_receiver, _origin.srcEid, msg.sender)) {\\n            revert(\\\"LZ50000\\\");\\n        }\\n        _inbound(_origin, _receiver, _payloadHash);\\n        emit PacketDelivered(_origin, _receiver, _payloadHash, msg.sender);\\n    }\\n\\n    /// @notice check if a message is deliverable. if false, the message is delivered. otherwise, it is deliverable.\\n    function deliverable(\\n        MessageOrigin calldata _origin,\\n        address _receiveLib,\\n        address _receiver\\n    ) external view returns (bool) {\\n        if (!isValidReceiveLibrary(_receiver, _origin.srcEid, _receiveLib)) {\\n            revert(\\\"LZ50000\\\");\\n        }\\n        return _inboundDeliverable(_origin, _receiver);\\n    }\\n\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams\\n    ) external payable receiveContext(_origin.srcEid, _receiver) returns (bool success, bytes memory reason) {\\n        {\\n            bytes memory callData = abi.encodeWithSelector(\\n                ILayerZeroReceiver.lzReceive.selector,\\n                _origin,\\n                _guid,\\n                _message,\\n                msg.sender,\\n                _callerParams\\n            );\\n            (success, reason) = _receiver.safeCall(gasleft(), msg.value, 150, callData);\\n        }\\n\\n        if (success) {\\n            bytes memory payload = abi.encodePacked(_guid, _message);\\n            _clearPayload(_origin, _receiver, payload);\\n            emit PacketReceived(_origin, _receiver, msg.sender);\\n        } else {\\n            if (msg.value > 0) {\\n                (bool sent, ) = msg.sender.call{value: msg.value}(\\\"\\\");\\n                require(sent, \\\"LZ30000\\\"); // todo: new error code?\\n            }\\n            emit LzReceiveFailed(_origin, _receiver, msg.sender, reason);\\n        }\\n    }\\n\\n    function clear(\\n        MessageOrigin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message\\n    ) external returns (bytes32 payloadHash) {\\n        bytes memory payload = abi.encodePacked(_guid, _message);\\n        payloadHash = _clearPayload(_origin, msg.sender, payload);\\n        emit PacketReceived(_origin, msg.sender, msg.sender);\\n    }\\n\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external {\\n        _skipInboundNonce(msg.sender, _srcEid, _sender, _nonce);\\n        emit InboundNonceSkipped(_srcEid, _sender, msg.sender, _nonce);\\n    }\\n\\n    function getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64) {\\n        return _getInboundNonce(_receiver, _srcEid, _sender);\\n    }\\n\\n    function getOutboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64) {\\n        return outboundNonce[_sender][_dstEid][_receiver];\\n    }\\n\\n    function getInboundPayloadHash(MessageOrigin calldata _origin, address _receiver) external view returns (bytes32) {\\n        return inboundPayloadHash[_receiver][_origin.srcEid][_origin.sender][_origin.nonce];\\n    }\\n\\n    function hasPayloadHash(MessageOrigin calldata _origin, address _receiver) external view returns (bool) {\\n        return _hasPayload(_receiver, _origin.srcEid, _origin.sender, _origin.nonce);\\n    }\\n\\n    function isSendingMessage() public view returns (bool) {\\n        return _sendContext != _NOT_ENTERED;\\n    }\\n\\n    function getSendContext() external view returns (uint32, address) {\\n        return isSendingMessage() ? (uint32(_sendContext >> 160), address(uint160(_sendContext))) : (0, address(0));\\n    }\\n\\n    function isReceivingMessage() public view returns (bool) {\\n        return _receiveContext != _NOT_ENTERED;\\n    }\\n\\n    function getReceiveContext() external view returns (uint32, address) {\\n        return\\n            isReceivingMessage()\\n                ? (uint32(_receiveContext >> 160), address(uint160(_receiveContext)))\\n                : (0, address(0));\\n    }\\n}\\n\",\"keccak256\":\"0x0fc71a06540861b5b707c096022cf89b7c10f2646a21f88f6e87712fe8623547\",\"license\":\"BUSL-1.1\"},\"contracts/MessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IMessageLib.sol\\\";\\nimport \\\"./interfaces/IMessageLibManager.sol\\\";\\n\\ncontract MessageLibManager is Ownable, IMessageLibManager {\\n    address private constant _DEFAULT_LIB = address(0);\\n\\n    address public immutable blockedLibrary;\\n\\n    address[] internal registeredLibraries;\\n    mapping(address lib => bool) public isRegisteredLibrary;\\n\\n    mapping(address sender => mapping(uint32 dstEid => address lib)) internal sendLibrary;\\n    mapping(address receiver => mapping(uint32 srcEid => address lib)) internal receiveLibrary;\\n    mapping(address receiver => mapping(uint32 srcEid => Timeout)) public receiveLibraryTimeout;\\n\\n    mapping(uint32 dstEid => address lib) public defaultSendLibrary;\\n    mapping(uint32 srcEid => address lib) public defaultReceiveLibrary;\\n    mapping(uint32 srcEid => Timeout) public defaultReceiveLibraryTimeout;\\n\\n    modifier onlyRegistered(address _lib) {\\n        require(isRegisteredLibrary[_lib], \\\"LZ10001\\\");\\n        _;\\n    }\\n\\n    modifier onlyRegisteredOrDefault(address _lib) {\\n        require(isRegisteredLibrary[_lib] || _lib == _DEFAULT_LIB, \\\"LZ10002\\\");\\n        _;\\n    }\\n\\n    modifier onlySupportedEid(address _lib, uint32 _eid) {\\n        if (_lib != _DEFAULT_LIB) {\\n            require(IMessageLib(_lib).isSupportedEid(_eid), \\\"LZ10008\\\");\\n        }\\n        _;\\n    }\\n\\n    constructor(address _blockedLib) {\\n        blockedLibrary = _blockedLib;\\n        registerLibrary(_blockedLib);\\n    }\\n\\n    function getRegisteredLibraries() external view returns (address[] memory) {\\n        return registeredLibraries;\\n    }\\n\\n    function getSendLibrary(address _sender, uint32 _dstEid) public view returns (address lib, bool isDefault) {\\n        lib = sendLibrary[_sender][_dstEid];\\n        if (lib == _DEFAULT_LIB) {\\n            lib = defaultSendLibrary[_dstEid];\\n            require(lib != address(0x0), \\\"LZD0004\\\");\\n            isDefault = true;\\n        }\\n    }\\n\\n    function getReceiveLibrary(address _receiver, uint32 _srcEid) public view returns (address lib, bool isDefault) {\\n        lib = receiveLibrary[_receiver][_srcEid];\\n        if (lib == _DEFAULT_LIB) {\\n            lib = defaultReceiveLibrary[_srcEid];\\n            require(lib != address(0x0), \\\"LZD0004\\\");\\n            isDefault = true;\\n        }\\n    }\\n\\n    function isValidReceiveLibrary(\\n        address _receiver,\\n        uint32 _srcEid,\\n        address _actualReceiveLib\\n    ) public view returns (bool) {\\n        (address expectedReceiveLib, bool isDefault) = getReceiveLibrary(_receiver, _srcEid);\\n        if (_actualReceiveLib == expectedReceiveLib) {\\n            return true;\\n        }\\n\\n        // if current library is default, use default configured timeout\\n        Timeout memory timeout = isDefault\\n            ? defaultReceiveLibraryTimeout[_srcEid]\\n            : receiveLibraryTimeout[_receiver][_srcEid];\\n\\n        if (timeout.lib == _actualReceiveLib && timeout.expiry > 0 && timeout.expiry > block.timestamp) {\\n            // timeout lib set and has not expired\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    //------- Owner interfaces\\n    function registerLibrary(address _lib) public onlyOwner {\\n        require(IERC165(_lib).supportsInterface(type(IMessageLib).interfaceId), \\\"LZC0001\\\");\\n        require(!isRegisteredLibrary[_lib], \\\"LZ80000\\\");\\n        isRegisteredLibrary[_lib] = true;\\n        registeredLibraries.push(_lib);\\n        emit LibraryRegistered(_lib);\\n    }\\n\\n    function setDefaultSendLibrary(\\n        uint32 _eid,\\n        address _newLib\\n    ) external onlyOwner onlyRegistered(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = defaultSendLibrary[_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n        defaultSendLibrary[_eid] = _newLib;\\n        emit DefaultSendLibrarySet(_eid, _newLib);\\n    }\\n\\n    function setDefaultReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyOwner onlyRegistered(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = defaultReceiveLibrary[_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n\\n        if (_gracePeriod > 0) {\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = oldLib;\\n            timeout.expiry = block.timestamp + _gracePeriod;\\n            emit DefaultReceiveLibraryTimeoutSet(_eid, oldLib, timeout.expiry);\\n        } else {\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        }\\n\\n        defaultReceiveLibrary[_eid] = _newLib;\\n        emit DefaultReceiveLibrarySet(_eid, oldLib, _newLib);\\n    }\\n\\n    function setDefaultReceiveLibraryTimeout(\\n        uint32 _eid,\\n        address _lib,\\n        uint _expiry\\n    ) external onlyRegistered(_lib) onlySupportedEid(_lib, _eid) onlyOwner {\\n        if (_expiry == 0) {\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        } else {\\n            require(_expiry > block.timestamp, \\\"LZ10000\\\");\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit DefaultReceiveLibraryTimeoutSet(_eid, _lib, _expiry);\\n    }\\n\\n    function defaultConfig(\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view onlyRegistered(_lib) onlySupportedEid(_lib, _eid) returns (bytes memory) {\\n        return IMessageLib(_lib).getDefaultConfig(_eid, _configType);\\n    }\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool) {\\n        return defaultSendLibrary[_eid] != address(0) && defaultReceiveLibrary[_eid] != address(0);\\n    }\\n\\n    //------- OApp interfaces\\n    function setSendLibrary(\\n        uint32 _eid,\\n        address _newLib\\n    ) external onlyRegisteredOrDefault(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = sendLibrary[msg.sender][_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n        sendLibrary[msg.sender][_eid] = _newLib;\\n        emit SendLibrarySet(msg.sender, _eid, _newLib);\\n    }\\n\\n    function setReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyRegisteredOrDefault(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = receiveLibrary[msg.sender][_eid];\\n        require(oldLib != _newLib, \\\"LZ10005\\\");\\n        receiveLibrary[msg.sender][_eid] = _newLib;\\n        emit ReceiveLibrarySet(msg.sender, _eid, oldLib, _newLib);\\n\\n        // if the new lib is default, it will use the default timeout configuration\\n        if (_gracePeriod > 0) {\\n            require(oldLib != _DEFAULT_LIB && _newLib != _DEFAULT_LIB, \\\"LZ10010\\\");\\n            Timeout memory timeout = Timeout({lib: oldLib, expiry: block.timestamp + _gracePeriod});\\n            receiveLibraryTimeout[msg.sender][_eid] = timeout;\\n            emit ReceiveLibraryTimoutSet(msg.sender, _eid, oldLib, timeout.expiry);\\n        } else {\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        }\\n    }\\n\\n    function setReceiveLibraryTimeout(\\n        uint32 _eid,\\n        address _lib,\\n        uint _expiry\\n    ) external onlyRegistered(_lib) onlySupportedEid(_lib, _eid) {\\n        (, bool isDefault) = getReceiveLibrary(msg.sender, _eid);\\n        require(!isDefault, \\\"LZ10010\\\"); // if current library is default, it cannot set timeout\\n\\n        if (_expiry == 0) {\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        } else {\\n            require(_expiry > block.timestamp, \\\"LZ10000\\\");\\n            Timeout storage timeout = receiveLibraryTimeout[msg.sender][_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit ReceiveLibraryTimoutSet(msg.sender, _eid, _lib, _expiry);\\n    }\\n\\n    function setConfig(address _lib, uint32 _eid, ConfigParam[] calldata _params) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).setConfig(msg.sender, _eid, _params);\\n    }\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view onlyRegistered(_lib) returns (bytes memory config, bool isDefault) {\\n        return IMessageLib(_lib).getConfig(_eid, _oapp, _configType);\\n    }\\n\\n    function snapshotConfig(address _lib, uint32[] calldata _eids) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).snapshotConfig(_eids, msg.sender);\\n    }\\n\\n    function resetConfig(address _lib, uint32[] calldata _eids) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).resetConfig(_eids, msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xf8d854e5c5771890d3a13d2c75a8b183d6cd2971dd4ee68f9f0cbfe708ad2958\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"./interfaces/IMessageOrigin.sol\\\";\\n\\ncontract MessagingChannel is IMessageOrigin {\\n    mapping(address receiver => mapping(uint32 srcEid => mapping(bytes32 sender => uint64 nonce)))\\n        internal lazyInboundNonce;\\n    mapping(address receiver => mapping(uint32 srcEid => mapping(bytes32 sender => mapping(uint64 inboundNonce => bytes32 payloadHash))))\\n        internal inboundPayloadHash;\\n    mapping(address sender => mapping(uint32 dstEid => mapping(bytes32 receiver => uint64 nonce)))\\n        internal outboundNonce;\\n\\n    function _outbound(address _sender, uint32 _dstEid, bytes32 _receiver) internal returns (uint64) {\\n        return ++outboundNonce[_sender][_dstEid][_receiver];\\n    }\\n\\n    function _inbound(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) internal {\\n        if (!_inboundDeliverable(_origin, _receiver)) {\\n            revert(\\\"LZ10004\\\");\\n        }\\n        inboundPayloadHash[_receiver][_origin.srcEid][_origin.sender][_origin.nonce] = _payloadHash;\\n    }\\n\\n    function _inboundDeliverable(MessageOrigin calldata _origin, address _receiver) internal view returns (bool) {\\n        // payload hashes can only be cleared in order, lazyInboundNonce is updated to the latest nonce cleared\\n        // when payload gets cleared it must have already been delivered\\n        // hence, as long as nonce > lazyInboundNonce, it has not been cleared and can be re/delivered\\n        return _origin.nonce > lazyInboundNonce[_receiver][_origin.srcEid][_origin.sender];\\n    }\\n\\n    function _hasPayload(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) internal view returns (bool) {\\n        return inboundPayloadHash[_receiver][_srcEid][_sender][_nonce] != bytes32(0);\\n    }\\n\\n    // this is an emergency function if a message can not be delivered for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function _skipInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender, uint64 _nextNonce) internal {\\n        require(_nextNonce == _getInboundNonce(_receiver, _srcEid, _sender) + 1, \\\"LZ10004\\\");\\n        lazyInboundNonce[_receiver][_srcEid][_sender] = _nextNonce;\\n    }\\n\\n    function _clearPayload(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes memory _payload\\n    ) internal returns (bytes32 actualHash) {\\n        uint32 srcEid = _origin.srcEid;\\n        bytes32 sender = _origin.sender;\\n        uint64 nonce = _origin.nonce;\\n        // require the _nonce to be no greater than the inboundNonce\\n        uint64 currentNonce = lazyInboundNonce[_receiver][srcEid][sender];\\n        if (nonce > currentNonce) {\\n            // try to lazily update the inboundNonce till the _nonce\\n            for (uint64 i = currentNonce + 1; i <= nonce; ++i) {\\n                require(_hasPayload(_receiver, srcEid, sender, i), \\\"LZ10004\\\");\\n            }\\n            lazyInboundNonce[_receiver][srcEid][sender] = nonce;\\n        }\\n\\n        // check hash\\n        actualHash = keccak256(_payload);\\n        bytes32 expectedHash = inboundPayloadHash[_receiver][srcEid][sender][nonce];\\n        require(expectedHash == actualHash, \\\"LZ60000\\\");\\n        // remove it from the storage\\n        delete inboundPayloadHash[_receiver][srcEid][sender][nonce];\\n    }\\n\\n    function _getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) internal view returns (uint64) {\\n        uint64 nonceCursor = lazyInboundNonce[_receiver][_srcEid][_sender];\\n        // find the effective inbound currentNonce\\n        while (_hasPayload(_receiver, _srcEid, _sender, nonceCursor + 1)) {\\n            ++nonceCursor;\\n        }\\n        return nonceCursor;\\n    }\\n}\\n\",\"keccak256\":\"0x1071e867dbc050bf1818e7386c0d7f6fef5a9f77565f9235083652c868f92ccd\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"./interfaces/IMessagingComposer.sol\\\";\\nimport \\\"./interfaces/ILayerZeroComposer.sol\\\";\\nimport \\\"./libs/SafeCall.sol\\\";\\n\\ncontract MessagingComposer is IMessagingComposer {\\n    using SafeCall for address;\\n\\n    // receiver -> composer -> guid -> message hash\\n    bytes32 private constant _NO_MESSAGE_HASH = bytes32(0);\\n    bytes32 private constant _RECEIVED_MESSAGE_HASH = bytes32(uint(1));\\n    address private constant _NOT_ENTERED_ADDR = address(1);\\n\\n    mapping(address receiver => mapping(address composer => mapping(bytes32 guid => bytes32 messageHash)))\\n        public composedMessages;\\n    address private _composeContext = _NOT_ENTERED_ADDR;\\n\\n    modifier composeContext(address _receiver) {\\n        require(_composeContext == _NOT_ENTERED_ADDR, \\\"LZ30003\\\");\\n        _composeContext = _receiver;\\n        _;\\n        _composeContext = _NOT_ENTERED_ADDR;\\n    }\\n\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external {\\n        require(composedMessages[msg.sender][_composer][_guid] == _NO_MESSAGE_HASH, \\\"LZ80000\\\");\\n        composedMessages[msg.sender][_composer][_guid] = keccak256(_message);\\n        emit ComposedMessageDelivered(msg.sender, _composer, _guid, _message);\\n    }\\n\\n    function lzCompose(\\n        address _receiver,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams\\n    ) external payable composeContext(_receiver) returns (bool success, bytes memory reason) {\\n        bytes32 expectedHash = composedMessages[_receiver][_composer][_guid];\\n        require(expectedHash == keccak256(_message), \\\"LZ60000\\\");\\n        {\\n            bytes memory callData = abi.encodeWithSelector(\\n                ILayerZeroComposer.lzCompose.selector,\\n                _receiver,\\n                _guid,\\n                _message,\\n                msg.sender,\\n                _callerParams\\n            );\\n            (success, reason) = _composer.safeCall(gasleft(), msg.value, 150, callData);\\n        }\\n\\n        if (success) {\\n            composedMessages[_receiver][_composer][_guid] = _RECEIVED_MESSAGE_HASH;\\n            emit ComposedMessageReceived(_receiver, _composer, _guid, expectedHash, msg.sender);\\n        } else {\\n            if (msg.value > 0) {\\n                (bool sent, ) = msg.sender.call{value: msg.value}(\\\"\\\");\\n                require(sent, \\\"LZ30000\\\");\\n            }\\n            emit LzComposeFailed(_receiver, _composer, _guid, expectedHash, msg.sender, reason);\\n        }\\n    }\\n\\n    function isComposingMessage() public view override returns (bool) {\\n        return _composeContext != _NOT_ENTERED_ADDR;\\n    }\\n\\n    function getComposeContext() external view override returns (address) {\\n        return isComposingMessage() ? _composeContext : address(0);\\n    }\\n}\\n\",\"keccak256\":\"0xba0e0dacf693e543a11ac6ef4ead48ff9e66a307605d04eef418ddfa58aa3b2a\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingFeeHandler.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract MessagingFeeHandler {\\n    using SafeERC20 for IERC20;\\n\\n    address internal immutable altToken; // alternative fee token instead of native\\n    address internal lzToken;\\n\\n    constructor(address _altToken) {\\n        altToken = _altToken;\\n    }\\n\\n    function _setLayerZeroToken(address _lzToken) internal {\\n        lzToken = _lzToken;\\n    }\\n\\n    function _payLayerZeroToken(address _sender, uint _required, uint _supplied, address _sendLibrary) internal {\\n        if (_required == 0) return;\\n\\n        address token = lzToken; // save one SLOAD\\n        require(token != address(0x0), \\\"LZD0003\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        IERC20(token).safeTransferFrom(_sender, _sendLibrary, _required);\\n    }\\n\\n    function _payAltToken(address _sender, uint _required, uint _supplied, address _sendLibrary) internal {\\n        if (_required == 0) return;\\n\\n        require(altToken != address(0x0), \\\"LZD0002\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        IERC20(altToken).safeTransferFrom(_sender, _sendLibrary, _required);\\n    }\\n\\n    function _payNative(\\n        uint _required,\\n        uint _supplied,\\n        address payable _sendLibrary,\\n        address payable _refundAddress\\n    ) internal {\\n        require(altToken == address(0x0), \\\"LZD0001\\\");\\n        require(_required <= _supplied, \\\"LZ10003\\\");\\n        if (_required > 0) {\\n            (bool success, ) = _sendLibrary.call{value: _required}(\\\"\\\");\\n            require(success, \\\"LZ30000\\\");\\n        }\\n        if (_required < _supplied) {\\n            // refund the excess\\n            (bool success, ) = _refundAddress.call{value: _supplied - _required}(\\\"\\\");\\n            require(success, \\\"LZ30000\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x44348e1f9ef8da15c5cf574121ea5903c93aba06419ca107c0e839d443af7313\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroComposer {\\n    function lzCompose(\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _caller,\\n        bytes calldata _callerParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x6d6c8228020e75f08e2c4d4fb3e3e270eedf7508e9371955a971bec9f3e6f6c1\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IMessageLibManager.sol\\\";\\nimport \\\"./IMessagingComposer.sol\\\";\\nimport \\\"./IMessageOrigin.sol\\\";\\n\\ninterface ILayerZeroEndpoint is IMessageLibManager, IMessagingComposer, IMessageOrigin {\\n    struct MessagingParams {\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes message;\\n        bytes options;\\n    }\\n\\n    struct MessagingReceipt {\\n        bytes32 guid;\\n        uint64 nonce;\\n        MessagingFee fee;\\n    }\\n\\n    struct MessagingFee {\\n        uint nativeFee;\\n        uint lzTokenFee;\\n    }\\n\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketDelivered(MessageOrigin origin, address receiver, bytes32 payloadHash, address receiveLibrary);\\n\\n    event PacketReceived(MessageOrigin origin, address receiver, address caller);\\n\\n    event LzReceiveFailed(MessageOrigin origin, address receiver, address caller, bytes reason);\\n\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n\\n    event FeePaid(address sender, uint nativeOrAltTokenFee, uint lzTokenFee);\\n\\n    event LayerZeroTokenSet(address token);\\n\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        address payable _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        uint _altTokenFee\\n    ) external returns (MessagingReceipt memory);\\n\\n    function deliver(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function deliverable(\\n        MessageOrigin calldata _origin,\\n        address _receiveLib,\\n        address _receiver\\n    ) external view returns (bool);\\n\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams\\n    ) external payable returns (bool, bytes memory);\\n\\n    function clear(\\n        MessageOrigin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message\\n    ) external returns (bytes32 payloadHash);\\n\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function eid() external view returns (uint32);\\n\\n    function setLayerZeroToken(address _layerZeroToken) external;\\n\\n    function layerZeroToken() external view returns (address);\\n\\n    function altFeeToken() external view returns (address);\\n\\n    function getNextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function getInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function getOutboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function getInboundPayloadHash(MessageOrigin calldata _origin, address _receiver) external view returns (bytes32);\\n\\n    function hasPayloadHash(MessageOrigin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32, address);\\n\\n    function isReceivingMessage() external view returns (bool);\\n\\n    function getReceiveContext() external view returns (uint32, address);\\n}\\n\",\"keccak256\":\"0xe82a83b86167d6887a26f9b4845a4982deb3696b38c70dfc94350d9a9bdcd3e8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IMessageOrigin.sol\\\";\\n\\ninterface ILayerZeroReceiver is IMessageOrigin {\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        bytes32 _guid,\\n        bytes memory _message,\\n        address _executor,\\n        bytes calldata _callerParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x58ea323bb3427ff6477b9a3d05c310b0de72abf6c6d2d22588e504c110887d53\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"./ILayerZeroEndpoint.sol\\\";\\nimport \\\"./IPacket.sol\\\";\\n\\ninterface IMessageLib is IERC165, IPacket {\\n    function send(\\n        Packet calldata _packet,\\n        bytes calldata _options,\\n        bool _payInLzToken\\n    ) external returns (ILayerZeroEndpoint.MessagingReceipt memory, bytes memory encodedPacket, bytes memory options);\\n\\n    function quote(\\n        PacketForQuote calldata _packet,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (ILayerZeroEndpoint.MessagingFee memory);\\n\\n    function setTreasury(address _treasury) external;\\n\\n    function treasury() external view returns (address);\\n\\n    function setConfig(address _oapp, uint32 _eid, ILayerZeroEndpoint.ConfigParam[] calldata _config) external;\\n\\n    function snapshotConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function resetConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function getConfig(\\n        uint32 _eid,\\n        address _oapp,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function getDefaultConfig(uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function withdrawFee(address _to, uint _amount) external;\\n\\n    function withdrawLzTokenFee(address _lzToken, address _to, uint _amount) external;\\n\\n    // message libs of same major version are compatible\\n    function version() external view returns (uint64 major, uint8 minor, uint8 endpointVersion);\\n}\\n\",\"keccak256\":\"0x43278b68e093df053a5250d42c41eb2f476dee6121303156c54f7ed1509926d8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageLibManager {\\n    struct ConfigParam {\\n        uint32 configType;\\n        bytes config;\\n    }\\n\\n    struct Timeout {\\n        address lib;\\n        uint expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address oldLib, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address oldLib, address newLib);\\n    event ReceiveLibraryTimoutSet(address receiver, uint32 eid, address oldLib, uint timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint _timeout) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function defaultConfig(address _lib, uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibrary(uint32 _eid, address _newLib, uint _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(uint32 _eid, address _lib, uint _gracePeriod) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function setConfig(address _lib, uint32 _eid, ConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function snapshotConfig(address _lib, uint32[] calldata _eids) external;\\n\\n    function resetConfig(address _lib, uint32[] calldata _eids) external;\\n}\\n\",\"keccak256\":\"0xc2d05f29b61149338ef9f022a4f9e30fdd16d769c43b3f996c9d0cc6c305ebed\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageOrigin.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageOrigin {\\n    struct MessageOrigin {\\n        uint32 srcEid;\\n        bytes32 sender;\\n        uint64 nonce;\\n    }\\n}\\n\",\"keccak256\":\"0x17fe98500a8ff512f22020c5a9522b676af101e6fc11a073ebf162ea02aa2f47\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposedMessageDelivered(address receiver, address composer, bytes32 guid, bytes message);\\n    event ComposedMessageReceived(\\n        address receiver,\\n        address composer,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller\\n    );\\n    event LzComposeFailed(\\n        address sender,\\n        address receiver,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller,\\n        bytes reason\\n    );\\n\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _receiver,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _callerParams\\n    ) external payable returns (bool, bytes memory);\\n\\n    function isComposingMessage() external view returns (bool);\\n\\n    function getComposeContext() external view returns (address);\\n}\\n\",\"keccak256\":\"0x03226d4dbd9dea1b894eb2c5fe3f057ee14cb8940b28db5dd7bf531e088ffe4a\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPacket.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.7.0;\\n\\ninterface IPacket {\\n    struct PacketForQuote {\\n        address sender;\\n        uint32 dstEid;\\n        bytes message;\\n    }\\n\\n    struct Packet {\\n        uint64 nonce;\\n        uint32 srcEid;\\n        address sender;\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes32 guid;\\n        bytes message;\\n    }\\n}\\n\",\"keccak256\":\"0xbd3e8b8c5b192323007fc4f647d3dc1a259ce62a57596955c7f9fb5add709e35\",\"license\":\"BUSL-1.1\"},\"contracts/libs/SafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nlibrary SafeCall {\\n    /// @notice calls a contract with a specified gas limit and value and captures the return data\\n    /// @dev copied from https://github.com/nomad-xyz/ExcessivelySafeCall/blob/main/src/ExcessivelySafeCall.sol.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _value The value in wei to send to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function safeCall(\\n        address _target,\\n        uint256 _gas,\\n        uint256 _value,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                _value, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n}\\n\",\"keccak256\":\"0x287e3e6d40b3aae00ecf5e853ba4d19c31d3fd4fd950fbaadd024cd88b6dd8d0\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60e0604052600e80546001600160a01b0319166001908117909155600f8190556010553480156200002f57600080fd5b506040516200608d3803806200608d833981016040819052620000529162000309565b80826200005f3362000095565b6001600160a01b0381166080526200007781620000e5565b506001600160a01b031660a052505063ffffffff1660c05262000388565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000ef6200028e565b6040516301ffc9a760e01b8152635c61fbbf60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200013b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016191906200035d565b6200019d5760405162461bcd60e51b81526020600482015260076024820152664c5a433030303160c81b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526005602052604090205460ff1615620001f25760405162461bcd60e51b815260206004820152600760248201526604c5a38303030360cc1b604482015260640162000194565b6001600160a01b0381166000818152600560209081526040808320805460ff191660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180546001600160a01b0319168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910160405180910390a150565b6000546001600160a01b03163314620002ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000194565b565b80516001600160a01b03811681146200030457600080fd5b919050565b6000806000606084860312156200031f57600080fd5b835163ffffffff811681146200033457600080fd5b92506200034460208501620002ec565b91506200035460408501620002ec565b90509250925092565b6000602082840312156200037057600080fd5b815180151581146200038157600080fd5b9392505050565b60805160a05160c051615cb2620003db600039600081816104f3015281816138ee0152613f8d015260008181610b7f015281816141600152818161423101526143ed015260006107050152615cb26000f3fe6080604052600436106103495760003560e01c80639132e5c3116101bb578063b96a277f116100f7578063ef57458d11610095578063f405c8591161006f578063f405c85914610b27578063f64be4c714610b3a578063f936112b14610b70578063fd894a5314610ba357600080fd5b8063ef57458d14610a99578063ef667aa114610abc578063f2fde38b14610b0757600080fd5b8063dc706a62116100d1578063dc706a6214610a09578063e16f964d14610a39578063e8964e8114610a59578063eaeacd6314610a7957600080fd5b8063b96a277f146109a9578063ce3cac0e146109c9578063d4b4ec8f146109e957600080fd5b80639e7fffcc11610164578063aafea3121161013e578063aafea31214610936578063aca1b45a14610956578063b8007ff614610969578063b8849ac91461098957600080fd5b80639e7fffcc146108d6578063a718531b146108f6578063a7229fd91461091657600080fd5b80639b86cb4d116101955780639b86cb4d1461081a5780639c9dd91d146108785780639d7f9775146108b657600080fd5b80639132e5c3146107ab578063965183d4146107cd5780639731526b146107ed57600080fd5b806351c85b6b1161028a5780636f50a80311610233578063754d3b9c1161020d578063754d3b9c1461072757806379624ca91461074757806383c47559146107605780638da5cb5b1461078d57600080fd5b80636f50a803146106a8578063715018a6146106de57806373318091146106f357600080fd5b80636750cd4c116102645780636750cd4c1461061057806369e55fb8146106305780636e83f5bb1461064957600080fd5b806351c85b6b146105a357806352d3b500146105d057806366bf43d6146105f057600080fd5b80632b3197b9116102f7578063416ecebf116102d1578063416ecebf146104e1578063418ba3511461052a578063447605761461054a57806345c6dcc41461058357600080fd5b80632b3197b91461045f5780633fa446751461048d578063402f8468146104a257600080fd5b806307b9ca7c1161032857806307b9ca7c146103d35780630c0c389e1461040557806314f651a91461042657600080fd5b80624afd471461034e57806303719a84146103815780630678327f146103b1575b600080fd5b34801561035a57600080fd5b5061036e610369366004614a2b565b610bb8565b6040519081526020015b60405180910390f35b34801561038d57600080fd5b506103a161039c366004614a81565b610c1a565b6040519015158152602001610378565b3480156103bd57600080fd5b506103d16103cc366004614afe565b610c99565b005b3480156103df57600080fd5b50600c546001600160a01b03165b6040516001600160a01b039091168152602001610378565b610418610413366004614b95565b610d89565b604051610378929190614ca1565b34801561043257600080fd5b5061043b611067565b6040805163ffffffff90931683526001600160a01b03909116602083015201610378565b34801561046b57600080fd5b5061047f61047a366004614cbc565b611096565b604051610378929190614d14565b34801561049957600080fd5b506103ed6111cc565b3480156104ae57600080fd5b506104c26104bd366004614d38565b6111fe565b604080516001600160a01b039093168352901515602083015201610378565b3480156104ed57600080fd5b506105157f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610378565b34801561053657600080fd5b506103a1610545366004614d6d565b6112ab565b34801561055657600080fd5b5061056a610565366004614a2b565b611322565b60405167ffffffffffffffff9091168152602001610378565b34801561058f57600080fd5b506103d161059e366004614db7565b61132f565b3480156105af57600080fd5b506105c36105be366004614df7565b6113df565b6040516103789190614e3c565b3480156105dc57600080fd5b506103d16105eb366004614e4f565b6115ec565b3480156105fc57600080fd5b506103d161060b366004614e6c565b611667565b34801561061c57600080fd5b506103a161062b366004614eab565b611972565b34801561063c57600080fd5b50601054600114156103a1565b34801561065557600080fd5b50610689610664366004614eab565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610378565b3480156106b457600080fd5b506103ed6106c3366004614eab565b600a602052600090815260409020546001600160a01b031681565b3480156106ea57600080fd5b506103d16119be565b3480156106ff57600080fd5b506103ed7f000000000000000000000000000000000000000000000000000000000000000081565b34801561073357600080fd5b506103d1610742366004614ec6565b6119d2565b34801561075357600080fd5b50600f54600114156103a1565b34801561076c57600080fd5b5061078061077b366004614f30565b611ad2565b6040516103789190614fb8565b34801561079957600080fd5b506000546001600160a01b03166103ed565b3480156107b757600080fd5b506107c0611c54565b6040516103789190614fcf565b3480156107d957600080fd5b5061036e6107e836600461501c565b611cb6565b3480156107f957600080fd5b5061080d610808366004615071565b611d30565b60405161037891906150bf565b34801561082657600080fd5b5061056a610835366004614a2b565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915290205467ffffffffffffffff169392505050565b34801561088457600080fd5b5061036e610893366004615102565b600d60209081526000938452604080852082529284528284209052825290205481565b3480156108c257600080fd5b506103a16108d1366004615122565b611e64565b3480156108e257600080fd5b506103d16108f1366004614afe565b611f4e565b34801561090257600080fd5b506103d1610911366004614e6c565b612001565b34801561092257600080fd5b506103d1610931366004615102565b612345565b34801561094257600080fd5b506103d1610951366004615160565b6123b0565b61080d61096436600461518c565b612602565b34801561097557600080fd5b506103d16109843660046151dc565b6126be565b34801561099557600080fd5b506103d16109a4366004614e6c565b6127ac565b3480156109b557600080fd5b506104c26109c4366004614d38565b612bc6565b3480156109d557600080fd5b5061036e6109e4366004614a81565b612c68565b3480156109f557600080fd5b506103d1610a04366004614e6c565b612cf7565b348015610a1557600080fd5b506103a1610a24366004614e4f565b60056020526000908152604090205460ff1681565b348015610a4557600080fd5b506103d1610a54366004615160565b612f81565b348015610a6557600080fd5b506103d1610a74366004614e4f565b6131ef565b348015610a8557600080fd5b506103d1610a94366004615249565b613419565b348015610aa557600080fd5b506103a1600e546001600160a01b03166001141590565b348015610ac857600080fd5b50610689610ad7366004614d38565b6008602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b348015610b1357600080fd5b506103d1610b22366004614e4f565b61347b565b610418610b3536600461527e565b61350b565b348015610b4657600080fd5b506103ed610b55366004614eab565b6009602052600090815260409020546001600160a01b031681565b348015610b7c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103ed565b348015610baf57600080fd5b5061043b61389f565b6001600160a01b038316600090815260036020908152604080832063ffffffff8616845282528083208484529091528120548190610c019067ffffffffffffffff16600161532c565b9050610c0f818686866138c8565b9150505b9392505050565b6000610c9082610c2d6020860186614eab565b6020860135610c42606088016040890161534d565b6001600160a01b038416600090815260026020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff851684529091529020541515949350505050565b90505b92915050565b6001600160a01b038316600090815260056020526040902054839060ff16610d085760405162461bcd60e51b815260206004820152600760248201527f4c5a31303030310000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517f1c63e3b60000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c63e3b690610d519086908690339060040161536a565b600060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050565b60006060610d9a60208a018a614eab565b88600160105414610ded5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303032000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b038216176010556040516000907f13137d650000000000000000000000000000000000000000000000000000000090610e5c908e908d908d908d9033908e908e9060240161544c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050610ef35a6001600160a01b038d169034609685613985565b9095509350508315610f74576000898989604051602001610f1693929190615495565b6040516020818303038152906040529050610f328c8c83613a10565b507f9808b7d96088a8872d5a22ac23ef6914c35f2f0c2393266f8d5aed00c5f166068c8c33604051610f66939291906154af565b60405180910390a150611052565b341561101457604051600090339034908381818185875af1925050503d8060008114610fbc576040519150601f19603f3d011682016040523d82523d6000602084013e610fc1565b606091505b50509050806110125760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b7f5f36cc57ed48e4b998e0ae0107830e550ebfd81dff305f8ab5c1ca624464f1f28b8b338660405161104994939291906154de565b60405180910390a15b50506001601055909890975095505050505050565b600080611077600f546001141590565b6110835760008061108e565b60a0600f54901c600f545b915091509091565b6001600160a01b03831660009081526005602052604081205460609190859060ff166111045760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517f9c33abf700000000000000000000000000000000000000000000000000000000815263ffffffff80871660048301526001600160a01b0389811660248401529086166044830152871690639c33abf790606401600060405180830381865afa158015611178573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111be91908101906155ec565b925092505094509492505050565b60006111e4600e546001600160a01b03166001141590565b6111ee5750600090565b50600e546001600160a01b031690565b6001600160a01b03808316600090815260076020908152604080832063ffffffff8616845290915281205490911690816112a45763ffffffff83166000908152600a60205260409020546001600160a01b03169150816112a05760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610cff565b5060015b9250929050565b60006112c4826112be6020870187614eab565b85611e64565b6113105760405162461bcd60e51b815260206004820152600760248201527f4c5a3530303030000000000000000000000000000000000000000000000000006044820152606401610cff565b61131a8483613ca8565b949350505050565b600061131a848484613d27565b611346826113406020860186614eab565b33611e64565b6113925760405162461bcd60e51b815260206004820152600760248201527f4c5a3530303030000000000000000000000000000000000000000000000000006044820152606401610cff565b61139d838383613d8a565b7f6f3339aff819ce511cfb1094545c3db99dc7f490fe40518933c129a17c538322838383336040516113d29493929190615633565b60405180910390a1505050565b6001600160a01b038316600090815260056020526040902054606090849060ff1661144c5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b84846001600160a01b03821615611530576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e49190615669565b6115305760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517f690c655500000000000000000000000000000000000000000000000000000000815263ffffffff8088166004830152861660248201526001600160a01b0388169063690c655590604401600060405180830381865afa15801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190615686565b979650505050505050565b6115f4613e6e565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556040516001600160a01b03821681527ff66b6c5fcba13210e695e203c62d584c85a4193f8a279598609bb6af760b17c1906020015b60405180910390a150565b6001600160a01b038216600090815260056020526040902054829060ff166116d15760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b038216156117b5576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015611745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117699190615669565b6117b55760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b60006117c133886111fe565b91505080156118125760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610cff565b846000036118695733600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155611910565b4285116118b85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260086020908152604080832063ffffffff8b168452909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161781556001018590555b6040805133815263ffffffff891660208201526001600160a01b03881691810191909152606081018690527f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e906080015b60405180910390a150505050505050565b63ffffffff81166000908152600960205260408120546001600160a01b031615801590610c9357505063ffffffff166000908152600a60205260409020546001600160a01b0316151590565b6119c6613e6e565b6119d06000613ec8565b565b336000908152600d602090815260408083206001600160a01b0388168452825280832086845290915290205415611a4b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610cff565b8181604051611a5b9291906156bb565b60408051918290038220336000818152600d60209081528482206001600160a01b038b1683528152848220898352905292909220557f7c0503be82d6ab0d4ea200b69f9930b82aec3c92ed138ed1a28f60cd9c3626db91611ac4919087908790879087906156cb565b60405180910390a150505050565b6040805180820190915260008082526020820152831580611afd5750600c546001600160a01b031615155b611b495760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610cff565b6000611b558989612bc6565b509050600060405180606001604052808b6001600160a01b031681526020018a63ffffffff16815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517f07d7b2f90000000000000000000000000000000000000000000000000000000081529091506001600160a01b038316906307d7b2f990611c069084908a908a908a906004016156fe565b6040805180830381865afa158015611c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4691906157a9565b9a9950505050505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611cac57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c8e575b5050505050905090565b600080848484604051602001611cce93929190615495565b6040516020818303038152906040529050611cea863383613a10565b91507f9808b7d96088a8872d5a22ac23ef6914c35f2f0c2393266f8d5aed00c5f16606863333604051611d1f939291906154af565b60405180910390a150949350505050565b611d386149b5565b611d456020850185614eab565b336001600f5414611d985760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600f5533600080611dd4838a8a613f30565b91509150611dec838360400151600001518984614158565b611e00838360400151602001518a84614259565b604082810151805160209182015183516001600160a01b0388168152928301919091528183015290517ff3816d9cce3442fbfe3e4d36ad047b3362efdc9f2e283e77b0ecd768a0a01ef29181900360600190a1506001600f55979650505050505050565b6000806000611e7386866111fe565b91509150816001600160a01b0316846001600160a01b031603611e9b57600192505050610c13565b600081611ed0576001600160a01b038716600090815260086020908152604080832063ffffffff8a1684529091529020611ee6565b63ffffffff86166000908152600b602052604090205b6040805180820190915281546001600160a01b0390811680835260019093015460208301529092508616148015611f21575060008160200151115b8015611f305750428160200151115b15611f415760019350505050610c13565b5060009695505050505050565b6001600160a01b038316600090815260056020526040902054839060ff16611fb85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517fd2d287f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063d2d287f090610d519086908690339060040161536a565b612009613e6e565b6001600160a01b038216600090815260056020526040902054829060ff166120735760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b03821615612157576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156120e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210b9190615669565b6121575760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff86166000908152600a60205260409020546001600160a01b0390811690861681036121c95760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b841561227a5763ffffffff87166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617815561221f86426157c5565b600182018190556040805163ffffffff8b1681526001600160a01b038516602082015280820192909252517f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f89181900360600190a1506122ba565b63ffffffff87166000908152600b6020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b63ffffffff87166000818152600a602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b8116918217909255835194855290851691840191909152908201527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea590606001611961565b61234d613e6e565b6001600160a01b038316612397576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612391573d6000803e3d6000fd5b50505050565b6123ab6001600160a01b0384168383614324565b505050565b6123b8613e6e565b6001600160a01b038116600090815260056020526040902054819060ff166124225760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b81836001600160a01b03821615612506576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ba9190615669565b6125065760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff85166000908152600960205260409020546001600160a01b0390811690851681036125785760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff861660008181526009602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a169081179091558251938452908301527f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f591015b60405180910390a1505050505050565b61260a6149b5565b6126176020850185614eab565b336001600f541461266a5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600f55336000806126a6838a8a613f30565b91509150611dec82604001516000015134838a6143eb565b6001600160a01b038416600090815260056020526040902054849060ff166127285760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517fb8007ff60000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063b8007ff6906127739033908890889088906004016157d8565b600060405180830381600087803b15801561278d57600080fd5b505af11580156127a1573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038216600090815260056020526040902054829060ff16806127dc57506001600160a01b038116155b6128285760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b0382161561290c576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa15801561289c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c09190615669565b61290c5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260076020908152604080832063ffffffff8a1684529091529020546001600160a01b0390811690861681036129895760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b33600081815260076020908152604080832063ffffffff8c168085529083529281902080546001600160a01b038c81167fffffffffffffffffffffffff00000000000000000000000000000000000000009092168217909255825195865292850193909352918416838301526060830152517fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa9181900360800190a18415612b72576001600160a01b03811615801590612a4b57506001600160a01b03861615155b612a975760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610cff565b60006040518060400160405280836001600160a01b031681526020018742612abf91906157c5565b905233600081815260086020908152604080832063ffffffff8e1680855290835292819020855181547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039182161782558684015160019092018290558251958652928501939093529086169083015260608201529091507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e9060800160405180910390a150612bbd565b33600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b50505050505050565b6001600160a01b03808316600090815260066020908152604080832063ffffffff8616845290915281205490911690816112a45763ffffffff83166000908152600960205260409020546001600160a01b03169150816112a05760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03811660009081526002602090815260408220908290612c9190860186614eab565b63ffffffff1663ffffffff1681526020019081526020016000206000846020013581526020019081526020016000206000846040016020810190612cd5919061534d565b67ffffffffffffffff1681526020810191909152604001600020549392505050565b6001600160a01b038216600090815260056020526040902054829060ff16612d615760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b03821615612e45576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612df99190615669565b612e455760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b612e4d613e6e565b83600003612e995763ffffffff86166000908152600b6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155612f35565b428411612ee85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff86166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387161781556001018490555b6040805163ffffffff881681526001600160a01b03871660208201529081018590527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8906060016125f2565b6001600160a01b038116600090815260056020526040902054819060ff1680612fb157506001600160a01b038116155b612ffd5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610cff565b81836001600160a01b038216156130e1576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015613071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130959190615669565b6130e15760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260066020908152604080832063ffffffff891684529091529020546001600160a01b03908116908516810361315e5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b33600081815260066020908152604080832063ffffffff8b168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b16908117909155815194855291840192909252908201527f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c906060016125f2565b6131f7613e6e565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fb8c3f77e0000000000000000000000000000000000000000000000000000000060048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015613274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132989190615669565b6132e45760405162461bcd60e51b815260206004820152600760248201527f4c5a4330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03811660009081526005602052604090205460ff161561334d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b038116600081815260056020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910161165c565b6134253384848461460d565b6040805163ffffffff8516815260208101849052339181019190915267ffffffffffffffff821660608201527f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48906080016113d2565b613483613e6e565b6001600160a01b0381166134ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610cff565b61350881613ec8565b50565b600e5460009060609089906001600160a01b031660011461356e5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303033000000000000000000000000000000000000000000000000006044820152606401610cff565b600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03838116919091179091558a81166000908152600d60209081526040808320938d1683529281528282208b835290528190205490516135dd90899089906156bb565b604051809103902081146136335760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610cff565b600063d0a1026060e01b8c8b8b8b338c8c60405160240161365a979695949392919061591e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506136f15a6001600160a01b038d169034609685613985565b9095509350508315613782576001600160a01b038b81166000818152600d60209081526040808320948f168084529482528083208e84528252918290206001905581519283528201929092529081018a9052606081018290523360808201527fe8de892dbb4fd705fc4c154fd784700f6f24789e8ffea6922947d082606887949060a00160405180910390a1613864565b341561382257604051600090339034908381818185875af1925050503d80600081146137ca576040519150601f19603f3d011682016040523d82523d6000602084013e6137cf565b606091505b50509050806138205760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b7f8054fc0b1a2df897569746b52a49553918b57ffcedcd0a35f0e8553d5ebba6768b8b8b84338860405161385b96959493929190615972565b60405180910390a15b5050600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001179055909890975095505050505050565b6000806138af6010546001141590565b6138bb5760008061108e565b505060105460a081901c91565b6040517fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060e090811b821660208401526001600160a01b038616602484015284901b166044820152604881018290526000908190606801604051602081830303815290604052905085816040516020016139649291906159be565b60405160208183030381529060405280519060200120915050949350505050565b6000606060008060008661ffff1667ffffffffffffffff8111156139ab576139ab615521565b6040519080825280601f01601f1916602001820160405280156139d5576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156139f6578692505b828152826000602083013e90999098509650505050505050565b600080613a206020860186614eab565b905060208501356000613a39606088016040890161534d565b6001600160a01b038716600090815260016020908152604080832063ffffffff88168452825280832086845290915290205490915067ffffffffffffffff908116908216811015613bb4576000613a9182600161532c565b90505b8267ffffffffffffffff168167ffffffffffffffff1611613b4f576001600160a01b038816600090815260026020908152604080832063ffffffff891684528252808320878452825280832067ffffffffffffffff85168452909152902054613b3f5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b613b4881615a09565b9050613a94565b506001600160a01b038716600090815260016020908152604080832063ffffffff881684528252808320868452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161790555b85516020808801919091206001600160a01b038916600090815260028352604080822063ffffffff891683528452808220878352845280822067ffffffffffffffff871683529093529190912054909550808614613c545760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610cff565b50506001600160a01b03909516600090815260026020908152604080832063ffffffff909516835293815283822092825291825282812067ffffffffffffffff909616815294905283209290925550919050565b6001600160a01b03811660009081526001602090815260408220908290613cd190860186614eab565b63ffffffff16815260208082019290925260409081016000908120868401358252909252908190205467ffffffffffffffff1690613d15906060860190860161534d565b67ffffffffffffffff16119392505050565b6001600160a01b038316600090815260016020908152604080832063ffffffff86168452825280832084845290915281205467ffffffffffffffff165b613d75858585610c4285600161532c565b1561131a57613d8381615a09565b9050613d64565b613d948383613ca8565b613de05760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b0382166000908152600260209081526040822083929091613e0a90870187614eab565b63ffffffff1663ffffffff1681526020019081526020016000206000856020013581526020019081526020016000206000856040016020810190613e4e919061534d565b67ffffffffffffffff168152602081019190915260400160002055505050565b6000546001600160a01b031633146119d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610cff565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613f386149b5565b600080613f5686613f4c6020880188614eab565b87602001356146f3565b90506000613f6b876109c46020890189614eab565b50905060006040518060e001604052808467ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001896001600160a01b03168152602001886000016020810190613fd99190614eab565b63ffffffff16815260200188602001358152602001614010858b8b60000160208101906140069190614eab565b8c602001356138c8565b815260200161402260408a018a615a30565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293508815159250905080806001600160a01b038616634389e58f8661408060608f018f615a30565b886040518563ffffffff1660e01b81526004016140a09493929190615a95565b6000604051808303816000875af11580156140bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526141059190810190615b46565b9250925092507f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f82828860405161413e93929190615c0e565b60405180910390a150909a93995092975050505050505050565b8215612391577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166141d45760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303032000000000000000000000000000000000000000000000000006044820152606401610cff565b818311156142245760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b6123916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016858386614769565b821561239157600c546001600160a01b0316806142b85760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610cff565b828411156143085760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b61431d6001600160a01b038216868487614769565b5050505050565b6040516001600160a01b0383166024820152604481018290526123ab9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526147ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156144625760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303031000000000000000000000000000000000000000000000000006044820152606401610cff565b828411156144b25760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b831561455d576000826001600160a01b03168560405160006040518083038185875af1925050503d8060008114614505576040519150601f19603f3d011682016040523d82523d6000602084013e61450a565b606091505b505090508061455b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b828410156123915760006001600160a01b03821661457b8686615c4d565b604051600081818185875af1925050503d80600081146145b7576040519150601f19603f3d011682016040523d82523d6000602084013e6145bc565b606091505b505090508061431d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b614618848484613d27565b61462390600161532c565b67ffffffffffffffff168167ffffffffffffffff16146146855760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03909316600090815260016020908152604080832063ffffffff90951683529381528382209282529190915220805467ffffffffffffffff9092167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909216919091179055565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915281208054829061473b9067ffffffffffffffff16615a09565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905590509392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526123919085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401614369565b600061480f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148a29092919063ffffffff16565b90508051600014806148305750808060200190518101906148309190615669565b6123ab5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610cff565b606061131a848460008585600080866001600160a01b031685876040516148c99190615c60565b60006040518083038185875af1925050503d8060008114614906576040519150601f19603f3d011682016040523d82523d6000602084013e61490b565b606091505b50915091506115e1878383876060831561498657825160000361497f576001600160a01b0385163b61497f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cff565b508161131a565b61131a838381511561499b5781518083602001fd5b8060405162461bcd60e51b8152600401610cff9190614e3c565b604051806060016040528060008019168152602001600067ffffffffffffffff1681526020016149f8604051806040016040528060008152602001600081525090565b905290565b6001600160a01b038116811461350857600080fd5b803563ffffffff81168114614a2657600080fd5b919050565b600080600060608486031215614a4057600080fd5b8335614a4b816149fd565b9250614a5960208501614a12565b9150604084013590509250925092565b600060608284031215614a7b57600080fd5b50919050565b60008060808385031215614a9457600080fd5b614a9e8484614a69565b91506060830135614aae816149fd565b809150509250929050565b60008083601f840112614acb57600080fd5b50813567ffffffffffffffff811115614ae357600080fd5b6020830191508360208260051b85010111156112a457600080fd5b600080600060408486031215614b1357600080fd5b8335614b1e816149fd565b9250602084013567ffffffffffffffff811115614b3a57600080fd5b614b4686828701614ab9565b9497909650939450505050565b60008083601f840112614b6557600080fd5b50813567ffffffffffffffff811115614b7d57600080fd5b6020830191508360208285010111156112a457600080fd5b600080600080600080600060e0888a031215614bb057600080fd5b614bba8989614a69565b96506060880135614bca816149fd565b95506080880135945060a088013567ffffffffffffffff80821115614bee57600080fd5b614bfa8b838c01614b53565b909650945060c08a0135915080821115614c1357600080fd5b50614c208a828b01614b53565b989b979a50959850939692959293505050565b60005b83811015614c4e578181015183820152602001614c36565b50506000910152565b60008151808452614c6f816020860160208601614c33565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b821515815260406020820152600061131a6040830184614c57565b60008060008060808587031215614cd257600080fd5b8435614cdd816149fd565b93506020850135614ced816149fd565b9250614cfb60408601614a12565b9150614d0960608601614a12565b905092959194509250565b604081526000614d276040830185614c57565b905082151560208301529392505050565b60008060408385031215614d4b57600080fd5b8235614d56816149fd565b9150614d6460208401614a12565b90509250929050565b600080600060a08486031215614d8257600080fd5b614d8c8585614a69565b92506060840135614d9c816149fd565b91506080840135614dac816149fd565b809150509250925092565b600080600060a08486031215614dcc57600080fd5b614dd68585614a69565b92506060840135614de6816149fd565b929592945050506080919091013590565b600080600060608486031215614e0c57600080fd5b8335614e17816149fd565b9250614e2560208501614a12565b9150614e3360408501614a12565b90509250925092565b602081526000610c906020830184614c57565b600060208284031215614e6157600080fd5b8135610c13816149fd565b600080600060608486031215614e8157600080fd5b614e8a84614a12565b92506020840135614e9a816149fd565b929592945050506040919091013590565b600060208284031215614ebd57600080fd5b610c9082614a12565b60008060008060608587031215614edc57600080fd5b8435614ee7816149fd565b935060208501359250604085013567ffffffffffffffff811115614f0a57600080fd5b614f1687828801614b53565b95989497509550505050565b801515811461350857600080fd5b600080600080600080600060a0888a031215614f4b57600080fd5b8735614f56816149fd565b9650614f6460208901614a12565b9550604088013567ffffffffffffffff80821115614f8157600080fd5b614f8d8b838c01614b53565b909750955060608a01359150614fa282614f22565b90935060808901359080821115614c1357600080fd5b815181526020808301519082015260408101610c93565b6020808252825182820181905260009190848201906040850190845b818110156150105783516001600160a01b031683529284019291840191600101614feb565b50909695505050505050565b60008060008060a0858703121561503257600080fd5b61503c8686614a69565b935060608501359250608085013567ffffffffffffffff811115614f0a57600080fd5b600060808284031215614a7b57600080fd5b60008060006060848603121561508657600080fd5b833567ffffffffffffffff81111561509d57600080fd5b6150a98682870161505f565b9660208601359650604090950135949350505050565b60006080820190508251825267ffffffffffffffff602084015116602083015260408301516150fb604084018280518252602090810151910152565b5092915050565b60008060006060848603121561511757600080fd5b8335614e8a816149fd565b60008060006060848603121561513757600080fd5b8335615142816149fd565b925061515060208501614a12565b91506040840135614dac816149fd565b6000806040838503121561517357600080fd5b61517c83614a12565b91506020830135614aae816149fd565b6000806000606084860312156151a157600080fd5b833567ffffffffffffffff8111156151b857600080fd5b6151c48682870161505f565b935050602084013591506040840135614dac816149fd565b600080600080606085870312156151f257600080fd5b84356151fd816149fd565b935061520b60208601614a12565b9250604085013567ffffffffffffffff81111561522757600080fd5b614f1687828801614ab9565b67ffffffffffffffff8116811461350857600080fd5b60008060006060848603121561525e57600080fd5b61526784614a12565b9250602084013591506040840135614dac81615233565b600080600080600080600060a0888a03121561529957600080fd5b87356152a4816149fd565b965060208801356152b4816149fd565b955060408801359450606088013567ffffffffffffffff808211156152d857600080fd5b6152e48b838c01614b53565b909650945060808a0135915080821115614c1357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff8181168382160190808211156150fb576150fb6152fd565b60006020828403121561535f57600080fd5b8135610c1381615233565b6040808252810183905260008460608301825b868110156153a85763ffffffff61539384614a12565b1682526020928301929091019060010161537d565b5080925050506001600160a01b0383166020830152949350505050565b63ffffffff6153d382614a12565b1682526020810135602083015260408101356153ee81615233565b67ffffffffffffffff81166040840152505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61545681896153c5565b86606082015260e06080820152600061547360e083018789615403565b6001600160a01b03861660a084015282810360c0840152611c46818587615403565b838152818360208301376000910160200190815292915050565b60a081016154bd82866153c5565b6001600160a01b038085166060840152808416608084015250949350505050565b6154e881866153c5565b60006001600160a01b03808616606084015280851660808401525060c060a083015261551760c0830184614c57565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261556157600080fd5b815167ffffffffffffffff8082111561557c5761557c615521565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156155c2576155c2615521565b816040528381528660208588010111156155db57600080fd5b615517846020830160208901614c33565b600080604083850312156155ff57600080fd5b825167ffffffffffffffff81111561561657600080fd5b61562285828601615550565b9250506020830151614aae81614f22565b60c0810161564182876153c5565b6001600160a01b03808616606084015284608084015280841660a08401525095945050505050565b60006020828403121561567b57600080fd5b8151610c1381614f22565b60006020828403121561569857600080fd5b815167ffffffffffffffff8111156156af57600080fd5b61131a84828501615550565b8183823760009101908152919050565b60006001600160a01b038088168352808716602084015250846040830152608060608301526115e1608083018486615403565b606081526001600160a01b03855116606082015263ffffffff602086015116608082015260006040860151606060a084015261573d60c0840182614c57565b9050851515602084015282810360408401526115e1818587615403565b60006040828403121561576c57600080fd5b6040516040810181811067ffffffffffffffff8211171561578f5761578f615521565b604052825181526020928301519281019290925250919050565b6000604082840312156157bb57600080fd5b610c90838361575a565b80820180821115610c9357610c936152fd565b6000606082016001600160a01b0387168352602063ffffffff8088168286015260406060818701528387855260808701905060808860051b88010194508860005b8981101561590d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8089880301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c360301811261587a57600080fd5b8b018561588682614a12565b168852868101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181126158bd57600080fd5b01868101903567ffffffffffffffff8111156158d857600080fd5b8036038213156158e757600080fd5b85888a01526158f9868a018284615403565b985050509185019190850190600101615819565b50949b9a5050505050505050505050565b60006001600160a01b03808a16835288602084015260a0604084015261594860a08401888a615403565b81871660608501528381036080850152615963818688615403565b9b9a5050505050505050505050565b60006001600160a01b038089168352808816602084015286604084015285606084015280851660808401525060c060a08301526159b260c0830184614c57565b98975050505050505050565b7fffffffffffffffff0000000000000000000000000000000000000000000000008360c01b168152600082516159fb816008850160208701614c33565b919091016008019392505050565b600067ffffffffffffffff808316818103615a2657615a266152fd565b6001019392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615a6557600080fd5b83018035915067ffffffffffffffff821115615a8057600080fd5b6020019150368190038213156112a457600080fd5b6060815267ffffffffffffffff855116606082015263ffffffff60208601511660808201526001600160a01b0360408601511660a082015260006060860151615ae660c084018263ffffffff169052565b50608086015160e083015260a086015161010083015260c086015160e0610120840152615b17610140840182614c57565b90508281036020840152615b2c818688615403565b915050615b3d604083018415159052565b95945050505050565b600080600083850360c0811215615b5c57600080fd5b6080811215615b6a57600080fd5b506040516060810167ffffffffffffffff8282108183111715615b8f57615b8f615521565b816040528651835260208701519150615ba782615233565b816020840152615bba886040890161575a565b6040840152608087015192955080831115615bd457600080fd5b615be088848901615550565b945060a0870151925080831115615bf657600080fd5b5050615c0486828701615550565b9150509250925092565b606081526000615c216060830186614c57565b8281036020840152615c338186614c57565b9150506001600160a01b0383166040830152949350505050565b81810381811115610c9357610c936152fd565b60008251615c72818460208701614c33565b919091019291505056fea26469706673582212209684b845f949f6267b62dbd062bb58a67cfbeaf5b5e1a09a941e6435cffb98ba64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106103495760003560e01c80639132e5c3116101bb578063b96a277f116100f7578063ef57458d11610095578063f405c8591161006f578063f405c85914610b27578063f64be4c714610b3a578063f936112b14610b70578063fd894a5314610ba357600080fd5b8063ef57458d14610a99578063ef667aa114610abc578063f2fde38b14610b0757600080fd5b8063dc706a62116100d1578063dc706a6214610a09578063e16f964d14610a39578063e8964e8114610a59578063eaeacd6314610a7957600080fd5b8063b96a277f146109a9578063ce3cac0e146109c9578063d4b4ec8f146109e957600080fd5b80639e7fffcc11610164578063aafea3121161013e578063aafea31214610936578063aca1b45a14610956578063b8007ff614610969578063b8849ac91461098957600080fd5b80639e7fffcc146108d6578063a718531b146108f6578063a7229fd91461091657600080fd5b80639b86cb4d116101955780639b86cb4d1461081a5780639c9dd91d146108785780639d7f9775146108b657600080fd5b80639132e5c3146107ab578063965183d4146107cd5780639731526b146107ed57600080fd5b806351c85b6b1161028a5780636f50a80311610233578063754d3b9c1161020d578063754d3b9c1461072757806379624ca91461074757806383c47559146107605780638da5cb5b1461078d57600080fd5b80636f50a803146106a8578063715018a6146106de57806373318091146106f357600080fd5b80636750cd4c116102645780636750cd4c1461061057806369e55fb8146106305780636e83f5bb1461064957600080fd5b806351c85b6b146105a357806352d3b500146105d057806366bf43d6146105f057600080fd5b80632b3197b9116102f7578063416ecebf116102d1578063416ecebf146104e1578063418ba3511461052a578063447605761461054a57806345c6dcc41461058357600080fd5b80632b3197b91461045f5780633fa446751461048d578063402f8468146104a257600080fd5b806307b9ca7c1161032857806307b9ca7c146103d35780630c0c389e1461040557806314f651a91461042657600080fd5b80624afd471461034e57806303719a84146103815780630678327f146103b1575b600080fd5b34801561035a57600080fd5b5061036e610369366004614a2b565b610bb8565b6040519081526020015b60405180910390f35b34801561038d57600080fd5b506103a161039c366004614a81565b610c1a565b6040519015158152602001610378565b3480156103bd57600080fd5b506103d16103cc366004614afe565b610c99565b005b3480156103df57600080fd5b50600c546001600160a01b03165b6040516001600160a01b039091168152602001610378565b610418610413366004614b95565b610d89565b604051610378929190614ca1565b34801561043257600080fd5b5061043b611067565b6040805163ffffffff90931683526001600160a01b03909116602083015201610378565b34801561046b57600080fd5b5061047f61047a366004614cbc565b611096565b604051610378929190614d14565b34801561049957600080fd5b506103ed6111cc565b3480156104ae57600080fd5b506104c26104bd366004614d38565b6111fe565b604080516001600160a01b039093168352901515602083015201610378565b3480156104ed57600080fd5b506105157f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610378565b34801561053657600080fd5b506103a1610545366004614d6d565b6112ab565b34801561055657600080fd5b5061056a610565366004614a2b565b611322565b60405167ffffffffffffffff9091168152602001610378565b34801561058f57600080fd5b506103d161059e366004614db7565b61132f565b3480156105af57600080fd5b506105c36105be366004614df7565b6113df565b6040516103789190614e3c565b3480156105dc57600080fd5b506103d16105eb366004614e4f565b6115ec565b3480156105fc57600080fd5b506103d161060b366004614e6c565b611667565b34801561061c57600080fd5b506103a161062b366004614eab565b611972565b34801561063c57600080fd5b50601054600114156103a1565b34801561065557600080fd5b50610689610664366004614eab565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610378565b3480156106b457600080fd5b506103ed6106c3366004614eab565b600a602052600090815260409020546001600160a01b031681565b3480156106ea57600080fd5b506103d16119be565b3480156106ff57600080fd5b506103ed7f000000000000000000000000000000000000000000000000000000000000000081565b34801561073357600080fd5b506103d1610742366004614ec6565b6119d2565b34801561075357600080fd5b50600f54600114156103a1565b34801561076c57600080fd5b5061078061077b366004614f30565b611ad2565b6040516103789190614fb8565b34801561079957600080fd5b506000546001600160a01b03166103ed565b3480156107b757600080fd5b506107c0611c54565b6040516103789190614fcf565b3480156107d957600080fd5b5061036e6107e836600461501c565b611cb6565b3480156107f957600080fd5b5061080d610808366004615071565b611d30565b60405161037891906150bf565b34801561082657600080fd5b5061056a610835366004614a2b565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915290205467ffffffffffffffff169392505050565b34801561088457600080fd5b5061036e610893366004615102565b600d60209081526000938452604080852082529284528284209052825290205481565b3480156108c257600080fd5b506103a16108d1366004615122565b611e64565b3480156108e257600080fd5b506103d16108f1366004614afe565b611f4e565b34801561090257600080fd5b506103d1610911366004614e6c565b612001565b34801561092257600080fd5b506103d1610931366004615102565b612345565b34801561094257600080fd5b506103d1610951366004615160565b6123b0565b61080d61096436600461518c565b612602565b34801561097557600080fd5b506103d16109843660046151dc565b6126be565b34801561099557600080fd5b506103d16109a4366004614e6c565b6127ac565b3480156109b557600080fd5b506104c26109c4366004614d38565b612bc6565b3480156109d557600080fd5b5061036e6109e4366004614a81565b612c68565b3480156109f557600080fd5b506103d1610a04366004614e6c565b612cf7565b348015610a1557600080fd5b506103a1610a24366004614e4f565b60056020526000908152604090205460ff1681565b348015610a4557600080fd5b506103d1610a54366004615160565b612f81565b348015610a6557600080fd5b506103d1610a74366004614e4f565b6131ef565b348015610a8557600080fd5b506103d1610a94366004615249565b613419565b348015610aa557600080fd5b506103a1600e546001600160a01b03166001141590565b348015610ac857600080fd5b50610689610ad7366004614d38565b6008602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b348015610b1357600080fd5b506103d1610b22366004614e4f565b61347b565b610418610b3536600461527e565b61350b565b348015610b4657600080fd5b506103ed610b55366004614eab565b6009602052600090815260409020546001600160a01b031681565b348015610b7c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103ed565b348015610baf57600080fd5b5061043b61389f565b6001600160a01b038316600090815260036020908152604080832063ffffffff8616845282528083208484529091528120548190610c019067ffffffffffffffff16600161532c565b9050610c0f818686866138c8565b9150505b9392505050565b6000610c9082610c2d6020860186614eab565b6020860135610c42606088016040890161534d565b6001600160a01b038416600090815260026020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff851684529091529020541515949350505050565b90505b92915050565b6001600160a01b038316600090815260056020526040902054839060ff16610d085760405162461bcd60e51b815260206004820152600760248201527f4c5a31303030310000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040517f1c63e3b60000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c63e3b690610d519086908690339060040161536a565b600060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050565b60006060610d9a60208a018a614eab565b88600160105414610ded5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303032000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b038216176010556040516000907f13137d650000000000000000000000000000000000000000000000000000000090610e5c908e908d908d908d9033908e908e9060240161544c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050610ef35a6001600160a01b038d169034609685613985565b9095509350508315610f74576000898989604051602001610f1693929190615495565b6040516020818303038152906040529050610f328c8c83613a10565b507f9808b7d96088a8872d5a22ac23ef6914c35f2f0c2393266f8d5aed00c5f166068c8c33604051610f66939291906154af565b60405180910390a150611052565b341561101457604051600090339034908381818185875af1925050503d8060008114610fbc576040519150601f19603f3d011682016040523d82523d6000602084013e610fc1565b606091505b50509050806110125760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b7f5f36cc57ed48e4b998e0ae0107830e550ebfd81dff305f8ab5c1ca624464f1f28b8b338660405161104994939291906154de565b60405180910390a15b50506001601055909890975095505050505050565b600080611077600f546001141590565b6110835760008061108e565b60a0600f54901c600f545b915091509091565b6001600160a01b03831660009081526005602052604081205460609190859060ff166111045760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517f9c33abf700000000000000000000000000000000000000000000000000000000815263ffffffff80871660048301526001600160a01b0389811660248401529086166044830152871690639c33abf790606401600060405180830381865afa158015611178573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111be91908101906155ec565b925092505094509492505050565b60006111e4600e546001600160a01b03166001141590565b6111ee5750600090565b50600e546001600160a01b031690565b6001600160a01b03808316600090815260076020908152604080832063ffffffff8616845290915281205490911690816112a45763ffffffff83166000908152600a60205260409020546001600160a01b03169150816112a05760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610cff565b5060015b9250929050565b60006112c4826112be6020870187614eab565b85611e64565b6113105760405162461bcd60e51b815260206004820152600760248201527f4c5a3530303030000000000000000000000000000000000000000000000000006044820152606401610cff565b61131a8483613ca8565b949350505050565b600061131a848484613d27565b611346826113406020860186614eab565b33611e64565b6113925760405162461bcd60e51b815260206004820152600760248201527f4c5a3530303030000000000000000000000000000000000000000000000000006044820152606401610cff565b61139d838383613d8a565b7f6f3339aff819ce511cfb1094545c3db99dc7f490fe40518933c129a17c538322838383336040516113d29493929190615633565b60405180910390a1505050565b6001600160a01b038316600090815260056020526040902054606090849060ff1661144c5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b84846001600160a01b03821615611530576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e49190615669565b6115305760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517f690c655500000000000000000000000000000000000000000000000000000000815263ffffffff8088166004830152861660248201526001600160a01b0388169063690c655590604401600060405180830381865afa15801561159b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526115e19190810190615686565b979650505050505050565b6115f4613e6e565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556040516001600160a01b03821681527ff66b6c5fcba13210e695e203c62d584c85a4193f8a279598609bb6af760b17c1906020015b60405180910390a150565b6001600160a01b038216600090815260056020526040902054829060ff166116d15760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b038216156117b5576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015611745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117699190615669565b6117b55760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b60006117c133886111fe565b91505080156118125760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610cff565b846000036118695733600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155611910565b4285116118b85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260086020908152604080832063ffffffff8b168452909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161781556001018590555b6040805133815263ffffffff891660208201526001600160a01b03881691810191909152606081018690527f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e906080015b60405180910390a150505050505050565b63ffffffff81166000908152600960205260408120546001600160a01b031615801590610c9357505063ffffffff166000908152600a60205260409020546001600160a01b0316151590565b6119c6613e6e565b6119d06000613ec8565b565b336000908152600d602090815260408083206001600160a01b0388168452825280832086845290915290205415611a4b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610cff565b8181604051611a5b9291906156bb565b60408051918290038220336000818152600d60209081528482206001600160a01b038b1683528152848220898352905292909220557f7c0503be82d6ab0d4ea200b69f9930b82aec3c92ed138ed1a28f60cd9c3626db91611ac4919087908790879087906156cb565b60405180910390a150505050565b6040805180820190915260008082526020820152831580611afd5750600c546001600160a01b031615155b611b495760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610cff565b6000611b558989612bc6565b509050600060405180606001604052808b6001600160a01b031681526020018a63ffffffff16815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517f07d7b2f90000000000000000000000000000000000000000000000000000000081529091506001600160a01b038316906307d7b2f990611c069084908a908a908a906004016156fe565b6040805180830381865afa158015611c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4691906157a9565b9a9950505050505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611cac57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c8e575b5050505050905090565b600080848484604051602001611cce93929190615495565b6040516020818303038152906040529050611cea863383613a10565b91507f9808b7d96088a8872d5a22ac23ef6914c35f2f0c2393266f8d5aed00c5f16606863333604051611d1f939291906154af565b60405180910390a150949350505050565b611d386149b5565b611d456020850185614eab565b336001600f5414611d985760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600f5533600080611dd4838a8a613f30565b91509150611dec838360400151600001518984614158565b611e00838360400151602001518a84614259565b604082810151805160209182015183516001600160a01b0388168152928301919091528183015290517ff3816d9cce3442fbfe3e4d36ad047b3362efdc9f2e283e77b0ecd768a0a01ef29181900360600190a1506001600f55979650505050505050565b6000806000611e7386866111fe565b91509150816001600160a01b0316846001600160a01b031603611e9b57600192505050610c13565b600081611ed0576001600160a01b038716600090815260086020908152604080832063ffffffff8a1684529091529020611ee6565b63ffffffff86166000908152600b602052604090205b6040805180820190915281546001600160a01b0390811680835260019093015460208301529092508616148015611f21575060008160200151115b8015611f305750428160200151115b15611f415760019350505050610c13565b5060009695505050505050565b6001600160a01b038316600090815260056020526040902054839060ff16611fb85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517fd2d287f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063d2d287f090610d519086908690339060040161536a565b612009613e6e565b6001600160a01b038216600090815260056020526040902054829060ff166120735760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b03821615612157576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156120e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210b9190615669565b6121575760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff86166000908152600a60205260409020546001600160a01b0390811690861681036121c95760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b841561227a5763ffffffff87166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617815561221f86426157c5565b600182018190556040805163ffffffff8b1681526001600160a01b038516602082015280820192909252517f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f89181900360600190a1506122ba565b63ffffffff87166000908152600b6020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b63ffffffff87166000818152600a602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b8116918217909255835194855290851691840191909152908201527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea590606001611961565b61234d613e6e565b6001600160a01b038316612397576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612391573d6000803e3d6000fd5b50505050565b6123ab6001600160a01b0384168383614324565b505050565b6123b8613e6e565b6001600160a01b038116600090815260056020526040902054819060ff166124225760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b81836001600160a01b03821615612506576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ba9190615669565b6125065760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff85166000908152600960205260409020546001600160a01b0390811690851681036125785760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff861660008181526009602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a169081179091558251938452908301527f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f591015b60405180910390a1505050505050565b61260a6149b5565b6126176020850185614eab565b336001600f541461266a5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b77ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600f55336000806126a6838a8a613f30565b91509150611dec82604001516000015134838a6143eb565b6001600160a01b038416600090815260056020526040902054849060ff166127285760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6040517fb8007ff60000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063b8007ff6906127739033908890889088906004016157d8565b600060405180830381600087803b15801561278d57600080fd5b505af11580156127a1573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038216600090815260056020526040902054829060ff16806127dc57506001600160a01b038116155b6128285760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b0382161561290c576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa15801561289c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c09190615669565b61290c5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260076020908152604080832063ffffffff8a1684529091529020546001600160a01b0390811690861681036129895760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b33600081815260076020908152604080832063ffffffff8c168085529083529281902080546001600160a01b038c81167fffffffffffffffffffffffff00000000000000000000000000000000000000009092168217909255825195865292850193909352918416838301526060830152517fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa9181900360800190a18415612b72576001600160a01b03811615801590612a4b57506001600160a01b03861615155b612a975760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303130000000000000000000000000000000000000000000000000006044820152606401610cff565b60006040518060400160405280836001600160a01b031681526020018742612abf91906157c5565b905233600081815260086020908152604080832063ffffffff8e1680855290835292819020855181547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039182161782558684015160019092018290558251958652928501939093529086169083015260608201529091507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e9060800160405180910390a150612bbd565b33600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b50505050505050565b6001600160a01b03808316600090815260066020908152604080832063ffffffff8616845290915281205490911690816112a45763ffffffff83166000908152600960205260409020546001600160a01b03169150816112a05760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03811660009081526002602090815260408220908290612c9190860186614eab565b63ffffffff1663ffffffff1681526020019081526020016000206000846020013581526020019081526020016000206000846040016020810190612cd5919061534d565b67ffffffffffffffff1681526020810191909152604001600020549392505050565b6001600160a01b038216600090815260056020526040902054829060ff16612d615760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303031000000000000000000000000000000000000000000000000006044820152606401610cff565b82846001600160a01b03821615612e45576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612df99190615669565b612e455760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b612e4d613e6e565b83600003612e995763ffffffff86166000908152600b6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155612f35565b428411612ee85760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303030000000000000000000000000000000000000000000000000006044820152606401610cff565b63ffffffff86166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387161781556001018490555b6040805163ffffffff881681526001600160a01b03871660208201529081018590527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8906060016125f2565b6001600160a01b038116600090815260056020526040902054819060ff1680612fb157506001600160a01b038116155b612ffd5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303032000000000000000000000000000000000000000000000000006044820152606401610cff565b81836001600160a01b038216156130e1576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015613071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130959190615669565b6130e15760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303038000000000000000000000000000000000000000000000000006044820152606401610cff565b33600090815260066020908152604080832063ffffffff891684529091529020546001600160a01b03908116908516810361315e5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303035000000000000000000000000000000000000000000000000006044820152606401610cff565b33600081815260066020908152604080832063ffffffff8b168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b16908117909155815194855291840192909252908201527f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c906060016125f2565b6131f7613e6e565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fb8c3f77e0000000000000000000000000000000000000000000000000000000060048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015613274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132989190615669565b6132e45760405162461bcd60e51b815260206004820152600760248201527f4c5a4330303031000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03811660009081526005602052604090205460ff161561334d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3830303030000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b038116600081815260056020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910161165c565b6134253384848461460d565b6040805163ffffffff8516815260208101849052339181019190915267ffffffffffffffff821660608201527f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48906080016113d2565b613483613e6e565b6001600160a01b0381166134ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610cff565b61350881613ec8565b50565b600e5460009060609089906001600160a01b031660011461356e5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303033000000000000000000000000000000000000000000000000006044820152606401610cff565b600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03838116919091179091558a81166000908152600d60209081526040808320938d1683529281528282208b835290528190205490516135dd90899089906156bb565b604051809103902081146136335760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610cff565b600063d0a1026060e01b8c8b8b8b338c8c60405160240161365a979695949392919061591e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506136f15a6001600160a01b038d169034609685613985565b9095509350508315613782576001600160a01b038b81166000818152600d60209081526040808320948f168084529482528083208e84528252918290206001905581519283528201929092529081018a9052606081018290523360808201527fe8de892dbb4fd705fc4c154fd784700f6f24789e8ffea6922947d082606887949060a00160405180910390a1613864565b341561382257604051600090339034908381818185875af1925050503d80600081146137ca576040519150601f19603f3d011682016040523d82523d6000602084013e6137cf565b606091505b50509050806138205760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b7f8054fc0b1a2df897569746b52a49553918b57ffcedcd0a35f0e8553d5ebba6768b8b8b84338860405161385b96959493929190615972565b60405180910390a15b5050600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001179055909890975095505050505050565b6000806138af6010546001141590565b6138bb5760008061108e565b505060105460a081901c91565b6040517fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060e090811b821660208401526001600160a01b038616602484015284901b166044820152604881018290526000908190606801604051602081830303815290604052905085816040516020016139649291906159be565b60405160208183030381529060405280519060200120915050949350505050565b6000606060008060008661ffff1667ffffffffffffffff8111156139ab576139ab615521565b6040519080825280601f01601f1916602001820160405280156139d5576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156139f6578692505b828152826000602083013e90999098509650505050505050565b600080613a206020860186614eab565b905060208501356000613a39606088016040890161534d565b6001600160a01b038716600090815260016020908152604080832063ffffffff88168452825280832086845290915290205490915067ffffffffffffffff908116908216811015613bb4576000613a9182600161532c565b90505b8267ffffffffffffffff168167ffffffffffffffff1611613b4f576001600160a01b038816600090815260026020908152604080832063ffffffff891684528252808320878452825280832067ffffffffffffffff85168452909152902054613b3f5760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b613b4881615a09565b9050613a94565b506001600160a01b038716600090815260016020908152604080832063ffffffff881684528252808320868452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161790555b85516020808801919091206001600160a01b038916600090815260028352604080822063ffffffff891683528452808220878352845280822067ffffffffffffffff871683529093529190912054909550808614613c545760405162461bcd60e51b815260206004820152600760248201527f4c5a3630303030000000000000000000000000000000000000000000000000006044820152606401610cff565b50506001600160a01b03909516600090815260026020908152604080832063ffffffff909516835293815283822092825291825282812067ffffffffffffffff909616815294905283209290925550919050565b6001600160a01b03811660009081526001602090815260408220908290613cd190860186614eab565b63ffffffff16815260208082019290925260409081016000908120868401358252909252908190205467ffffffffffffffff1690613d15906060860190860161534d565b67ffffffffffffffff16119392505050565b6001600160a01b038316600090815260016020908152604080832063ffffffff86168452825280832084845290915281205467ffffffffffffffff165b613d75858585610c4285600161532c565b1561131a57613d8381615a09565b9050613d64565b613d948383613ca8565b613de05760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b0382166000908152600260209081526040822083929091613e0a90870187614eab565b63ffffffff1663ffffffff1681526020019081526020016000206000856020013581526020019081526020016000206000856040016020810190613e4e919061534d565b67ffffffffffffffff168152602081019190915260400160002055505050565b6000546001600160a01b031633146119d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610cff565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613f386149b5565b600080613f5686613f4c6020880188614eab565b87602001356146f3565b90506000613f6b876109c46020890189614eab565b50905060006040518060e001604052808467ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001896001600160a01b03168152602001886000016020810190613fd99190614eab565b63ffffffff16815260200188602001358152602001614010858b8b60000160208101906140069190614eab565b8c602001356138c8565b815260200161402260408a018a615a30565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293508815159250905080806001600160a01b038616634389e58f8661408060608f018f615a30565b886040518563ffffffff1660e01b81526004016140a09493929190615a95565b6000604051808303816000875af11580156140bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526141059190810190615b46565b9250925092507f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f82828860405161413e93929190615c0e565b60405180910390a150909a93995092975050505050505050565b8215612391577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166141d45760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303032000000000000000000000000000000000000000000000000006044820152606401610cff565b818311156142245760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b6123916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016858386614769565b821561239157600c546001600160a01b0316806142b85760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303033000000000000000000000000000000000000000000000000006044820152606401610cff565b828411156143085760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b61431d6001600160a01b038216868487614769565b5050505050565b6040516001600160a01b0383166024820152604481018290526123ab9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526147ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156144625760405162461bcd60e51b815260206004820152600760248201527f4c5a4430303031000000000000000000000000000000000000000000000000006044820152606401610cff565b828411156144b25760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303033000000000000000000000000000000000000000000000000006044820152606401610cff565b831561455d576000826001600160a01b03168560405160006040518083038185875af1925050503d8060008114614505576040519150601f19603f3d011682016040523d82523d6000602084013e61450a565b606091505b505090508061455b5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b505b828410156123915760006001600160a01b03821661457b8686615c4d565b604051600081818185875af1925050503d80600081146145b7576040519150601f19603f3d011682016040523d82523d6000602084013e6145bc565b606091505b505090508061431d5760405162461bcd60e51b815260206004820152600760248201527f4c5a3330303030000000000000000000000000000000000000000000000000006044820152606401610cff565b614618848484613d27565b61462390600161532c565b67ffffffffffffffff168167ffffffffffffffff16146146855760405162461bcd60e51b815260206004820152600760248201527f4c5a3130303034000000000000000000000000000000000000000000000000006044820152606401610cff565b6001600160a01b03909316600090815260016020908152604080832063ffffffff90951683529381528382209282529190915220805467ffffffffffffffff9092167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909216919091179055565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915281208054829061473b9067ffffffffffffffff16615a09565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905590509392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526123919085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401614369565b600061480f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148a29092919063ffffffff16565b90508051600014806148305750808060200190518101906148309190615669565b6123ab5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610cff565b606061131a848460008585600080866001600160a01b031685876040516148c99190615c60565b60006040518083038185875af1925050503d8060008114614906576040519150601f19603f3d011682016040523d82523d6000602084013e61490b565b606091505b50915091506115e1878383876060831561498657825160000361497f576001600160a01b0385163b61497f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cff565b508161131a565b61131a838381511561499b5781518083602001fd5b8060405162461bcd60e51b8152600401610cff9190614e3c565b604051806060016040528060008019168152602001600067ffffffffffffffff1681526020016149f8604051806040016040528060008152602001600081525090565b905290565b6001600160a01b038116811461350857600080fd5b803563ffffffff81168114614a2657600080fd5b919050565b600080600060608486031215614a4057600080fd5b8335614a4b816149fd565b9250614a5960208501614a12565b9150604084013590509250925092565b600060608284031215614a7b57600080fd5b50919050565b60008060808385031215614a9457600080fd5b614a9e8484614a69565b91506060830135614aae816149fd565b809150509250929050565b60008083601f840112614acb57600080fd5b50813567ffffffffffffffff811115614ae357600080fd5b6020830191508360208260051b85010111156112a457600080fd5b600080600060408486031215614b1357600080fd5b8335614b1e816149fd565b9250602084013567ffffffffffffffff811115614b3a57600080fd5b614b4686828701614ab9565b9497909650939450505050565b60008083601f840112614b6557600080fd5b50813567ffffffffffffffff811115614b7d57600080fd5b6020830191508360208285010111156112a457600080fd5b600080600080600080600060e0888a031215614bb057600080fd5b614bba8989614a69565b96506060880135614bca816149fd565b95506080880135945060a088013567ffffffffffffffff80821115614bee57600080fd5b614bfa8b838c01614b53565b909650945060c08a0135915080821115614c1357600080fd5b50614c208a828b01614b53565b989b979a50959850939692959293505050565b60005b83811015614c4e578181015183820152602001614c36565b50506000910152565b60008151808452614c6f816020860160208601614c33565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b821515815260406020820152600061131a6040830184614c57565b60008060008060808587031215614cd257600080fd5b8435614cdd816149fd565b93506020850135614ced816149fd565b9250614cfb60408601614a12565b9150614d0960608601614a12565b905092959194509250565b604081526000614d276040830185614c57565b905082151560208301529392505050565b60008060408385031215614d4b57600080fd5b8235614d56816149fd565b9150614d6460208401614a12565b90509250929050565b600080600060a08486031215614d8257600080fd5b614d8c8585614a69565b92506060840135614d9c816149fd565b91506080840135614dac816149fd565b809150509250925092565b600080600060a08486031215614dcc57600080fd5b614dd68585614a69565b92506060840135614de6816149fd565b929592945050506080919091013590565b600080600060608486031215614e0c57600080fd5b8335614e17816149fd565b9250614e2560208501614a12565b9150614e3360408501614a12565b90509250925092565b602081526000610c906020830184614c57565b600060208284031215614e6157600080fd5b8135610c13816149fd565b600080600060608486031215614e8157600080fd5b614e8a84614a12565b92506020840135614e9a816149fd565b929592945050506040919091013590565b600060208284031215614ebd57600080fd5b610c9082614a12565b60008060008060608587031215614edc57600080fd5b8435614ee7816149fd565b935060208501359250604085013567ffffffffffffffff811115614f0a57600080fd5b614f1687828801614b53565b95989497509550505050565b801515811461350857600080fd5b600080600080600080600060a0888a031215614f4b57600080fd5b8735614f56816149fd565b9650614f6460208901614a12565b9550604088013567ffffffffffffffff80821115614f8157600080fd5b614f8d8b838c01614b53565b909750955060608a01359150614fa282614f22565b90935060808901359080821115614c1357600080fd5b815181526020808301519082015260408101610c93565b6020808252825182820181905260009190848201906040850190845b818110156150105783516001600160a01b031683529284019291840191600101614feb565b50909695505050505050565b60008060008060a0858703121561503257600080fd5b61503c8686614a69565b935060608501359250608085013567ffffffffffffffff811115614f0a57600080fd5b600060808284031215614a7b57600080fd5b60008060006060848603121561508657600080fd5b833567ffffffffffffffff81111561509d57600080fd5b6150a98682870161505f565b9660208601359650604090950135949350505050565b60006080820190508251825267ffffffffffffffff602084015116602083015260408301516150fb604084018280518252602090810151910152565b5092915050565b60008060006060848603121561511757600080fd5b8335614e8a816149fd565b60008060006060848603121561513757600080fd5b8335615142816149fd565b925061515060208501614a12565b91506040840135614dac816149fd565b6000806040838503121561517357600080fd5b61517c83614a12565b91506020830135614aae816149fd565b6000806000606084860312156151a157600080fd5b833567ffffffffffffffff8111156151b857600080fd5b6151c48682870161505f565b935050602084013591506040840135614dac816149fd565b600080600080606085870312156151f257600080fd5b84356151fd816149fd565b935061520b60208601614a12565b9250604085013567ffffffffffffffff81111561522757600080fd5b614f1687828801614ab9565b67ffffffffffffffff8116811461350857600080fd5b60008060006060848603121561525e57600080fd5b61526784614a12565b9250602084013591506040840135614dac81615233565b600080600080600080600060a0888a03121561529957600080fd5b87356152a4816149fd565b965060208801356152b4816149fd565b955060408801359450606088013567ffffffffffffffff808211156152d857600080fd5b6152e48b838c01614b53565b909650945060808a0135915080821115614c1357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff8181168382160190808211156150fb576150fb6152fd565b60006020828403121561535f57600080fd5b8135610c1381615233565b6040808252810183905260008460608301825b868110156153a85763ffffffff61539384614a12565b1682526020928301929091019060010161537d565b5080925050506001600160a01b0383166020830152949350505050565b63ffffffff6153d382614a12565b1682526020810135602083015260408101356153ee81615233565b67ffffffffffffffff81166040840152505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61545681896153c5565b86606082015260e06080820152600061547360e083018789615403565b6001600160a01b03861660a084015282810360c0840152611c46818587615403565b838152818360208301376000910160200190815292915050565b60a081016154bd82866153c5565b6001600160a01b038085166060840152808416608084015250949350505050565b6154e881866153c5565b60006001600160a01b03808616606084015280851660808401525060c060a083015261551760c0830184614c57565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261556157600080fd5b815167ffffffffffffffff8082111561557c5761557c615521565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156155c2576155c2615521565b816040528381528660208588010111156155db57600080fd5b615517846020830160208901614c33565b600080604083850312156155ff57600080fd5b825167ffffffffffffffff81111561561657600080fd5b61562285828601615550565b9250506020830151614aae81614f22565b60c0810161564182876153c5565b6001600160a01b03808616606084015284608084015280841660a08401525095945050505050565b60006020828403121561567b57600080fd5b8151610c1381614f22565b60006020828403121561569857600080fd5b815167ffffffffffffffff8111156156af57600080fd5b61131a84828501615550565b8183823760009101908152919050565b60006001600160a01b038088168352808716602084015250846040830152608060608301526115e1608083018486615403565b606081526001600160a01b03855116606082015263ffffffff602086015116608082015260006040860151606060a084015261573d60c0840182614c57565b9050851515602084015282810360408401526115e1818587615403565b60006040828403121561576c57600080fd5b6040516040810181811067ffffffffffffffff8211171561578f5761578f615521565b604052825181526020928301519281019290925250919050565b6000604082840312156157bb57600080fd5b610c90838361575a565b80820180821115610c9357610c936152fd565b6000606082016001600160a01b0387168352602063ffffffff8088168286015260406060818701528387855260808701905060808860051b88010194508860005b8981101561590d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8089880301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c360301811261587a57600080fd5b8b018561588682614a12565b168852868101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181126158bd57600080fd5b01868101903567ffffffffffffffff8111156158d857600080fd5b8036038213156158e757600080fd5b85888a01526158f9868a018284615403565b985050509185019190850190600101615819565b50949b9a5050505050505050505050565b60006001600160a01b03808a16835288602084015260a0604084015261594860a08401888a615403565b81871660608501528381036080850152615963818688615403565b9b9a5050505050505050505050565b60006001600160a01b038089168352808816602084015286604084015285606084015280851660808401525060c060a08301526159b260c0830184614c57565b98975050505050505050565b7fffffffffffffffff0000000000000000000000000000000000000000000000008360c01b168152600082516159fb816008850160208701614c33565b919091016008019392505050565b600067ffffffffffffffff808316818103615a2657615a266152fd565b6001019392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615a6557600080fd5b83018035915067ffffffffffffffff821115615a8057600080fd5b6020019150368190038213156112a457600080fd5b6060815267ffffffffffffffff855116606082015263ffffffff60208601511660808201526001600160a01b0360408601511660a082015260006060860151615ae660c084018263ffffffff169052565b50608086015160e083015260a086015161010083015260c086015160e0610120840152615b17610140840182614c57565b90508281036020840152615b2c818688615403565b915050615b3d604083018415159052565b95945050505050565b600080600083850360c0811215615b5c57600080fd5b6080811215615b6a57600080fd5b506040516060810167ffffffffffffffff8282108183111715615b8f57615b8f615521565b816040528651835260208701519150615ba782615233565b816020840152615bba886040890161575a565b6040840152608087015192955080831115615bd457600080fd5b615be088848901615550565b945060a0870151925080831115615bf657600080fd5b5050615c0486828701615550565b9150509250925092565b606081526000615c216060830186614c57565b8281036020840152615c338186614c57565b9150506001600160a01b0383166040830152949350505050565b81810381811115610c9357610c936152fd565b60008251615c72818460208701614c33565b919091019291505056fea26469706673582212209684b845f949f6267b62dbd062bb58a67cfbeaf5b5e1a09a941e6435cffb98ba64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deliverable((uint32,bytes32,uint64),address,address)": {
        "notice": "check if a message is deliverable. if false, the message is delivered. otherwise, it is deliverable."
      },
      "recoverToken(address,address,uint256)": {
        "notice": "recover the token sent to this contract by mistake"
      },
      "setSendLibrary(uint32,address)": {
        "notice": "------------------- OApp interfaces -------------------"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2875,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "lazyInboundNonce",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 2885,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "inboundPayloadHash",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))"
      },
      {
        "astId": 2893,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "outboundNonce",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 1981,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "registeredLibraries",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1985,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "isRegisteredLibrary",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1991,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "sendLibrary",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 1997,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "receiveLibrary",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 2004,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "receiveLibraryTimeout",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)4126_storage))"
      },
      {
        "astId": 2008,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultSendLibrary",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 2012,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultReceiveLibrary",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 2017,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "defaultReceiveLibraryTimeout",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint32,t_struct(Timeout)4126_storage)"
      },
      {
        "astId": 3463,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "lzToken",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 3229,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "composedMessages",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))"
      },
      {
        "astId": 3232,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_composeContext",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 1024,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_sendContext",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 1027,
        "contract": "contracts/Endpoint.sol:Endpoint",
        "label": "_receiveContext",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bytes32 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes32)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => uint64)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)4126_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => struct IMessageLibManager.Timeout))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_struct(Timeout)4126_storage)"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint64 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes32)"
      },
      "t_mapping(t_bytes32,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint32,t_address)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint64)"
      },
      "t_mapping(t_uint32,t_struct(Timeout)4126_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct IMessageLibManager.Timeout)",
        "numberOfBytes": "32",
        "value": "t_struct(Timeout)4126_storage"
      },
      "t_mapping(t_uint64,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_struct(Timeout)4126_storage": {
        "encoding": "inplace",
        "label": "struct IMessageLibManager.Timeout",
        "members": [
          {
            "astId": 4123,
            "contract": "contracts/Endpoint.sol:Endpoint",
            "label": "lib",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4125,
            "contract": "contracts/Endpoint.sol:Endpoint",
            "label": "expiry",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}