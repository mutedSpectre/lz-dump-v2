{
  "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_blockedLib",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_altToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "ComposedMessageDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ComposedMessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "DefaultReceiveLibraryTimeoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "DefaultSendLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nativeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lzTokenFee",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ILayerZeroEndpointV2.MessagingFee",
          "name": "fee",
          "type": "tuple"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "name": "InboundNonceSkipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LayerZeroTokenSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "LibraryRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzComposeFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "LzReceiveFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "PacketDelivered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "origin",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "PacketReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encodedPayload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sendLibrary",
          "type": "address"
        }
      ],
      "name": "PacketSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "ReceiveLibrarySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLib",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeout",
          "type": "uint256"
        }
      ],
      "name": "ReceiveLibraryTimoutSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "eid",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLib",
          "type": "address"
        }
      ],
      "name": "SendLibrarySet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "altFeeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockedLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "clear",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "guid",
          "type": "bytes32"
        }
      ],
      "name": "composedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "defaultConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "defaultReceiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstEid",
          "type": "uint32"
        }
      ],
      "name": "defaultSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_payloadHash",
          "type": "bytes32"
        }
      ],
      "name": "deliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "deliverComposedMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiveLib",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "deliverable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eid",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oapp",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_configType",
          "type": "uint32"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "config",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        }
      ],
      "name": "getReceiveLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDefault",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredLibraries",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSendContext",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        }
      ],
      "name": "getSendLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "hasPayloadHash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        }
      ],
      "name": "inboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "inboundNonce",
          "type": "uint64"
        }
      ],
      "name": "inboundPayloadHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payloadHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        }
      ],
      "name": "isDefaultSendLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        }
      ],
      "name": "isRegisteredLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSendingMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        }
      ],
      "name": "isSupportedEid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_actualReceiveLib",
          "type": "address"
        }
      ],
      "name": "isValidReceiveLibrary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_composer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "lzCompose",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "srcEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "sender",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ],
          "internalType": "struct IMessageOrigin.MessageOrigin",
          "name": "_origin",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_guid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_receiver",
          "type": "bytes32"
        }
      ],
      "name": "nextGuid",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "receiver",
          "type": "bytes32"
        }
      ],
      "name": "outboundNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_dstEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_payInLzToken",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_options",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nativeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lzTokenFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILayerZeroEndpointV2.MessagingFee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "srcEid",
          "type": "uint32"
        }
      ],
      "name": "receiveLibraryTimeout",
      "outputs": [
        {
          "internalType": "address",
          "name": "lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        }
      ],
      "name": "registerLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "resetConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpointV2.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFeeCap",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        }
      ],
      "name": "send",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpointV2.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpointV2.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "dstEid",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "receiver",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "internalType": "struct ILayerZeroEndpointV2.MessagingParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_lzTokenFeeCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_altTokenFeeCap",
          "type": "uint256"
        }
      ],
      "name": "sendWithAlt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "guid",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nativeFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lzTokenFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILayerZeroEndpointV2.MessagingFee",
              "name": "fee",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILayerZeroEndpointV2.MessagingReceipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "configType",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "config",
              "type": "bytes"
            }
          ],
          "internalType": "struct IMessageLibManager.SetConfigParam[]",
          "name": "_params",
          "type": "tuple[]"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setDefaultReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setDefaultSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroToken",
          "type": "address"
        }
      ],
      "name": "setLayerZeroToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "setReceiveLibraryTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_eid",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_newLib",
          "type": "address"
        }
      ],
      "name": "setSendLibrary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_srcEid",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lib",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "_eids",
          "type": "uint32[]"
        }
      ],
      "name": "snapshotConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5f6053ed8604b320590ef1d0f068d7ffb09ec35a0996eec814700e25b059ee6",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
    "transactionIndex": 0,
    "gasUsed": "5134743",
    "logsBloom": "0x00000000000000000002000000000000000000000200000020800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000808020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000040000000000000000000000020000000000000000000000008000000000001000000000000000000000000000000",
    "blockHash": "0x55cd8438519a59900aef025450d3e263fb4df710a0fd751a606dac92117228bd",
    "transactionHash": "0xe5f6053ed8604b320590ef1d0f068d7ffb09ec35a0996eec814700e25b059ee6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 131,
        "transactionHash": "0xe5f6053ed8604b320590ef1d0f068d7ffb09ec35a0996eec814700e25b059ee6",
        "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x55cd8438519a59900aef025450d3e263fb4df710a0fd751a606dac92117228bd"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 131,
        "transactionHash": "0xe5f6053ed8604b320590ef1d0f068d7ffb09ec35a0996eec814700e25b059ee6",
        "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
        "topics": [
          "0x6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5"
        ],
        "data": "0x000000000000000000000000c6ba8c3233ecf65b761049ef63466945c362edd2",
        "logIndex": 1,
        "blockHash": "0x55cd8438519a59900aef025450d3e263fb4df710a0fd751a606dac92117228bd"
      }
    ],
    "blockNumber": 131,
    "cumulativeGasUsed": "5134743",
    "status": 1,
    "byzantium": true
  },
  "args": [
    50109,
    "0xC6bA8C3233eCF65B761049ef63466945c362EdD2",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "a0962aea9626180b1c1dd40eb482a600",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_blockedLib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_altToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposedMessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ComposedMessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ILayerZeroEndpointV2.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LayerZeroTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"PacketReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"altFeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockedLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"}],\"name\":\"composedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"defaultConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"deliverComposedMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiveLib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deliverable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"hasPayloadHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"inboundNonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_actualReceiveLib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_composer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct IMessageOrigin.MessageOrigin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInLzToken\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"resetConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFeeCap\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_lzTokenFeeCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_altTokenFeeCap\",\"type\":\"uint256\"}],\"name\":\"sendWithAlt\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct ILayerZeroEndpointV2.MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct IMessageLibManager.SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroToken\",\"type\":\"address\"}],\"name\":\"setLayerZeroToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"_eids\",\"type\":\"uint32[]\"}],\"name\":\"snapshotConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"clear((uint32,bytes32,uint64),bytes32,bytes)\":{\"details\":\"Oapp uses this interface to clear a message.this is a PULL mode versus the PUSH mode of lzReceivethe cleared message can be ignored by the app (effectively burnt)cant reentrant because the payload is cleared before executionauthenticated by Oapp (msg.sender)\",\"params\":{\"_guid\":\"the guid of the message\",\"_message\":\"the message\",\"_origin\":\"the origin of the message\"}},\"deliver((uint32,bytes32,uint64),address,bytes32)\":{\"details\":\"MESSAGING STEP 2 - on the destination chainreceives a message from the configured receive library\",\"params\":{\"_origin\":\"the origin of the message\",\"_payloadHash\":\"the payload hash of the message\",\"_receiver\":\"the receiver of the message\"}},\"deliverComposedMessage(address,bytes32,bytes)\":{\"details\":\"the Oapp delivers the lzCompose message to the endpointthe composer MUST assert the sender because anyone can delivery msg with this functionwith the same GUID, the Oapp can deliver to multiple _composer at the same timeauthenticated by the msg.sender\",\"params\":{\"_composer\":\"the composer address\",\"_guid\":\"the message guid\",\"_message\":\"the message\"}},\"deliverable((uint32,bytes32,uint64),address,address)\":{\"details\":\"check if a message is deliverable.reverts if the receiveLibrary is not valid\",\"returns\":{\"_0\":\"reverts if the msglib check fails. returns true if the message is deliverable. false if it has been delivered\"}},\"getConfig(address,address,uint32,uint32)\":{\"details\":\"a view function to query the current configuration of the oapp\"},\"getReceiveLibrary(address,uint32)\":{\"details\":\"the receiveLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero\"},\"getSendContext()\":{\"details\":\"returns (eid, sender) if sending message, (0, 0) otherwise\"},\"getSendLibrary(address,uint32)\":{\"details\":\"the sendLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero\"},\"hasPayloadHash(address,uint32,bytes32,uint64)\":{\"details\":\"simply checking if the storage slot is not initialized. assuming the payload can be not hashed to 0\"},\"inboundNonce(address,uint32,bytes32)\":{\"details\":\"returns the effective inbound nonce which has all its prior messages deliveredit starts from the lazyInboundNonce (last checkpoint) and iteratively check if the next nonce has been deliveredin extreme cases where there are a lot of messages, this function can OOG. but it can be trivially fixed by just clearing some prior messagesif the app can not receive any of the queued message, the app is most likely broken\"},\"isSendingMessage()\":{\"details\":\"returns true if sending message\"},\"isSupportedEid(uint32)\":{\"details\":\"returns true only if both the default send/receive libraries are set\"},\"isValidReceiveLibrary(address,uint32,address)\":{\"details\":\"called when the endpoint checks if the msglib attempting to delever the msg is the configured msglib of the Oappthis check provides the ability for Oapp to lock in a trusted msglibit will fist check if the msglib is the currently configured one. then check if the msglib is the one in grace period of msglib versioning upgrade\"},\"lzCompose(address,address,bytes32,bytes,bytes)\":{\"details\":\"execute a composed messages from the sender to the composer (receiver)the execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraDatacan not re-entrant\",\"params\":{\"_composer\":\"the composer address\",\"_extraData\":\"the extra data provided by the executor. this data is untrusted and should be validated.\",\"_guid\":\"the message guid\",\"_message\":\"the message\",\"_sender\":\"the sender address. in most cases, it is the Oapp's address.\"}},\"lzReceive((uint32,bytes32,uint64),address,bytes32,bytes,bytes)\":{\"details\":\"MESSAGING STEP 3 - the last stepexecute a delivered message to the designated receiverthe execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraDatacant reentrant because the payload is cleared before execution\",\"params\":{\"_extraData\":\"the extra data provided by the executor. this data is untrusted and should be validated.\",\"_guid\":\"the guid of the message\",\"_message\":\"the message\",\"_origin\":\"the origin of the message\",\"_receiver\":\"the receiver of the message\"}},\"nextGuid(address,uint32,bytes32)\":{\"details\":\"returns the GUID for the next message given the paththe Oapp might want to include the GUID into the message in some cases\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quote(address,uint32,bytes,bool,bytes)\":{\"details\":\"MESSAGING STEP 0quotes the messaging fee given the parameters\",\"params\":{\"_dstEid\":\"the destination endpoint id\",\"_message\":\"the message to be sent\",\"_options\":\"the messaging options to be used (e.g. lzReceive gas limit, etc)\",\"_payInLzToken\":\"whether the protocol fee should be paid in lz token or not\",\"_sender\":\"the sender of the message\"},\"returns\":{\"_0\":\"native fee and lz token fee. if altFeeToken is enalbed, the native fee is in the form of the altFeeToken\"}},\"recoverToken(address,address,uint256)\":{\"details\":\"recover the token sent to this contract by mistakeonly owner\",\"params\":{\"_amount\":\"the amount to send\",\"_to\":\"the address to send the token to\",\"_token\":\"the token to recover. if 0x0 then it is native token\"}},\"registerLibrary(address)\":{\"details\":\"all libraries have to implement the erc165 interface to prevent wrong configurationsonly owner\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resetConfig(address,uint32[])\":{\"details\":\"setting the Oapp's configuration to the default configurations of the provided eidsalmost like the reverse action to snapshotConfig()authenticated by the msg.sender\"},\"send((uint32,bytes32,bytes,bytes),uint256,address)\":{\"details\":\"MESSAGING STEP 1 - on chains with altFeeToken disabledsame as sendWithAlt but only accepts native tokens\",\"params\":{\"_lzTokenFeeCap\":\"the maximum lz token fee that the sender is willing to pay\",\"_params\":\"the messaging parameters\",\"_refundAddress\":\"the address to refund the native fee to\"}},\"sendWithAlt((uint32,bytes32,bytes,bytes),uint256,uint256)\":{\"details\":\"MESSAGING STEP 1 - on chains with altFeeToken enabledsends a message with the given parametersprotected by send non-enentrancy guardthe endpoint will settle the payment from the sender to the sendLibrary, which then settles the payment to the eventual receiverthis design provides a saparation of concern and users only need to approve endpoint instead of messaging libraries\",\"params\":{\"_altTokenFeeCap\":\"the maximum alt token fee that the sender is willing to pay\",\"_lzTokenFeeCap\":\"the maximum lz token fee that the sender is willing to pay\",\"_params\":\"the messaging parameters\"},\"returns\":{\"_0\":\"the messaging receipt, which includes the message guid, nonce and fee\"}},\"setConfig(address,uint32,(uint32,bytes)[])\":{\"details\":\"authenticated by the msg.sender\"},\"setDefaultReceiveLibrary(uint32,address,uint256)\":{\"details\":\"owner setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledin version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.only owner\"},\"setDefaultReceiveLibraryTimeout(uint32,address,uint256)\":{\"details\":\"owner setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledcan used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration\"},\"setDefaultSendLibrary(uint32,address)\":{\"details\":\"owner setting the defaultSendLibrarycan set to the blockedLibrary, which is a registered librarythe msglib must enable the support before they can be registered to the endpoint as the defaultonly owner\"},\"setLayerZeroToken(address)\":{\"details\":\"allows reconfiguration to recover from wrong configurationsusers should never approve the EndpointV2 contract to spend their non-layerzero tokensonly owner\",\"params\":{\"_layerZeroToken\":\"the new layer zero token address\"}},\"setReceiveLibrary(uint32,address,uint256)\":{\"details\":\"Oapp setting the receiveLibrarymust be a registered library (including blockLibrary) with the eid support enabledin version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.authenticated by the Oapp\"},\"setReceiveLibraryTimeout(uint32,address,uint256)\":{\"details\":\"Oapp setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledcan used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration\"},\"setSendLibrary(uint32,address)\":{\"details\":\"Oapp setting the sendLibrarymust be a registered library (including blockLibrary) with the eid support enabledauthenticated by the Oapp\"},\"skip(uint32,bytes32,uint64)\":{\"details\":\"the caller must provide _nonce to prevent skipping the unintended nonceit could happen in some race conditions, e.g. intent to skip nonce 3, but nonce 3 was consumed before this transaction was included in the blockNOTE: only allows skipping the next of the effective inbound nonce (from the inboundNonce() function). if the Oapp wants to skips a delivered message, it should call the clear() function and ignore the payload insteadafter skipping the lazyInboundNonce is set to the provided nonce, which makes the inboundNonce also the provided nonce\"},\"snapshotConfig(address,uint32[])\":{\"details\":\"lock-in the current configuration of the provided eids to the Oapp , e.g. copying the default configuration.it allows the Oapp to be not affected by Default configuration changes.authenticated by the msg.sender\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"altFeeToken\":{\"details\":\"the altFeeToken is used for fees when the native token has no valueimmutable for gas saving. only 1 endpoint for such chains\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EndpointV2.sol\":\"EndpointV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/EndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./libs/SafeCall.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\n\\nimport \\\"./MessagingChannel.sol\\\";\\nimport \\\"./MessagingComposer.sol\\\";\\nimport \\\"./MessageLibManager.sol\\\";\\nimport \\\"./MessagingContext.sol\\\";\\n\\ncontract EndpointV2 is ILayerZeroEndpointV2, MessagingChannel, MessageLibManager, MessagingComposer, MessagingContext {\\n    using SafeERC20 for IERC20;\\n    using SafeCall for address;\\n\\n    /// @dev the altFeeToken is used for fees when the native token has no value\\n    /// @dev immutable for gas saving. only 1 endpoint for such chains\\n    address public immutable altFeeToken;\\n\\n    address public layerZeroToken;\\n\\n    constructor(\\n        uint32 _eid,\\n        address _blockedLib,\\n        address _altToken\\n    ) MessageLibManager(_blockedLib) MessagingChannel(_eid) {\\n        altFeeToken = _altToken;\\n    }\\n\\n    /// @dev MESSAGING STEP 0\\n    /// @dev quotes the messaging fee given the parameters\\n    /// @return native fee and lz token fee. if altFeeToken is enalbed, the native fee is in the form of the altFeeToken\\n    /// @param _sender the sender of the message\\n    /// @param _dstEid the destination endpoint id\\n    /// @param _message the message to be sent\\n    /// @param _payInLzToken whether the protocol fee should be paid in lz token or not\\n    /// @param _options the messaging options to be used (e.g. lzReceive gas limit, etc)\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory) {\\n        if (_payInLzToken) {\\n            // layerZeroToken must be set to support _payInLzToken\\n            require(layerZeroToken != address(0x0), Errors.TOKEN_UNAVAILABLE);\\n        }\\n\\n        address sendLibrary = getSendLibrary(_sender, _dstEid);\\n        IPacket.PacketForQuote memory packet = IPacket.PacketForQuote({\\n            sender: _sender,\\n            dstEid: _dstEid,\\n            message: _message\\n        });\\n        return IMessageLib(sendLibrary).quote(packet, _payInLzToken, _options);\\n    }\\n\\n    /// @dev MESSAGING STEP 1 - on chains with altFeeToken enabled\\n    /// @dev sends a message with the given parameters\\n    /// @dev protected by send non-enentrancy guard\\n    /// @dev the endpoint will settle the payment from the sender to the sendLibrary, which then settles the payment to the eventual receiver\\n    /// @dev this design provides a saparation of concern and users only need to approve endpoint instead of messaging libraries\\n    /// @return the messaging receipt, which includes the message guid, nonce and fee\\n    /// @param _params the messaging parameters\\n    /// @param _lzTokenFeeCap the maximum lz token fee that the sender is willing to pay\\n    /// @param _altTokenFeeCap the maximum alt token fee that the sender is willing to pay\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFeeCap,\\n        uint _altTokenFeeCap\\n    ) external sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFeeCap);\\n\\n        // handle fees\\n        _payToken(altFeeToken, sender, receipt.fee.nativeFee, _altTokenFeeCap, sendLibrary);\\n        _payToken(layerZeroToken, sender, receipt.fee.lzTokenFee, _lzTokenFeeCap, sendLibrary);\\n        emit FeePaid(receipt.fee);\\n\\n        return receipt;\\n    }\\n\\n    /// @dev MESSAGING STEP 1 - on chains with altFeeToken disabled\\n    /// @dev same as sendWithAlt but only accepts native tokens\\n    /// @param _params the messaging parameters\\n    /// @param _lzTokenFeeCap the maximum lz token fee that the sender is willing to pay\\n    /// @param _refundAddress the address to refund the native fee to\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFeeCap,\\n        address payable _refundAddress\\n    ) external payable sendContext(_params.dstEid, msg.sender) returns (MessagingReceipt memory) {\\n        // send message\\n        address sender = msg.sender;\\n        (MessagingReceipt memory receipt, address sendLibrary) = _send(sender, _params, _lzTokenFeeCap);\\n\\n        // handle fees\\n        _payNative(receipt.fee.nativeFee, msg.value, sendLibrary, _refundAddress);\\n        _payToken(layerZeroToken, sender, receipt.fee.lzTokenFee, _lzTokenFeeCap, sendLibrary);\\n        emit FeePaid(receipt.fee);\\n\\n        return receipt;\\n    }\\n\\n    /// @dev internal function for sending the messages\\n    function _send(\\n        address _sender,\\n        MessagingParams calldata _params,\\n        uint _lzTokenFeeCap\\n    ) internal returns (MessagingReceipt memory, address) {\\n        // get the correct outbound nonce\\n        uint64 nonce = _outbound(_sender, _params.dstEid, _params.receiver);\\n\\n        // get the send library by sender and dst eid\\n        address sendLibrary = getSendLibrary(_sender, _params.dstEid);\\n\\n        // construct the packet with a GUID\\n        IPacket.Packet memory packet = IPacket.Packet({\\n            nonce: nonce,\\n            srcEid: eid,\\n            sender: _sender,\\n            dstEid: _params.dstEid,\\n            receiver: _params.receiver,\\n            guid: _getGuid(nonce, _sender, _params.dstEid, _params.receiver),\\n            message: _params.message\\n        });\\n\\n        // pay in lz token if lz token fee is > 0\\n        bool payInLzToken = _lzTokenFeeCap > 0;\\n\\n        // messagelib always returns encodedPacket with guid\\n        (MessagingReceipt memory receipt, bytes memory encodedPacket, bytes memory options) = IMessageLib(sendLibrary)\\n            .send(packet, _params.options, payInLzToken);\\n\\n        // emit the sent event with the necesssary informations\\n        emit PacketSent(encodedPacket, options, sendLibrary);\\n        return (receipt, sendLibrary);\\n    }\\n\\n    /// @dev MESSAGING STEP 2 - on the destination chain\\n    /// @dev receives a message from the configured receive library\\n    /// @param _origin the origin of the message\\n    /// @param _receiver the receiver of the message\\n    /// @param _payloadHash the payload hash of the message\\n    function deliver(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) external {\\n        require(isValidReceiveLibrary(_receiver, _origin.srcEid, msg.sender), Errors.PERMISSION_DENIED);\\n        // check if it is deliverable\\n        require(_inboundDeliverable(_origin, _receiver), Errors.INVALID_NONCE);\\n        // insert the message into the message channel\\n        _inbound(_origin, _receiver, _payloadHash);\\n        emit PacketDelivered(_origin, _receiver, _payloadHash);\\n    }\\n\\n    /// @dev check if a message is deliverable.\\n    /// @dev reverts if the receiveLibrary is not valid\\n    /// @return reverts if the msglib check fails. returns true if the message is deliverable. false if it has been delivered\\n    function deliverable(\\n        MessageOrigin calldata _origin,\\n        address _receiveLib,\\n        address _receiver\\n    ) external view returns (bool) {\\n        require(isValidReceiveLibrary(_receiver, _origin.srcEid, _receiveLib), Errors.PERMISSION_DENIED);\\n        return _inboundDeliverable(_origin, _receiver);\\n    }\\n\\n    /// @dev MESSAGING STEP 3 - the last step\\n    /// @dev execute a delivered message to the designated receiver\\n    /// @dev the execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraData\\n    /// @dev cant reentrant because the payload is cleared before execution\\n    /// @param _origin the origin of the message\\n    /// @param _receiver the receiver of the message\\n    /// @param _guid the guid of the message\\n    /// @param _message the message\\n    /// @param _extraData the extra data provided by the executor. this data is untrusted and should be validated.\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable returns (bool success, bytes memory reason) {\\n        // clear the payload first to prevent reentrancy, and then execute the message\\n        bytes32 payloadHash = _clearPayload(_origin, _receiver, abi.encodePacked(_guid, _message));\\n        (success, reason) = _safeCallLzReceive(_origin, _receiver, _guid, _message, _extraData);\\n\\n        if (success) {\\n            emit PacketReceived(_origin, _receiver);\\n        } else {\\n            // if the message fails, revert the clearing of the payload\\n            _inbound(_origin, _receiver, payloadHash);\\n\\n            // refund the native fee if the message fails to prevent the loss of fund\\n            if (msg.value > 0) {\\n                (bool sent, ) = msg.sender.call{value: msg.value}(\\\"\\\");\\n                require(sent, Errors.INVALID_STATE);\\n            }\\n            emit LzReceiveFailed(_origin, _receiver, reason);\\n        }\\n    }\\n\\n    /// @dev internal function for executing lzReceive() on the receiver\\n    function _safeCallLzReceive(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) internal returns (bool success, bytes memory reason) {\\n        bytes memory callData = abi.encodeWithSelector(\\n            ILayerZeroReceiver.lzReceive.selector,\\n            _origin,\\n            _guid,\\n            _message,\\n            msg.sender,\\n            _extraData\\n        );\\n        (success, reason) = _receiver.safeCall(gasleft(), msg.value, callData);\\n    }\\n\\n    /// @dev Oapp uses this interface to clear a message.\\n    /// @dev this is a PULL mode versus the PUSH mode of lzReceive\\n    /// @dev the cleared message can be ignored by the app (effectively burnt)\\n    /// @dev cant reentrant because the payload is cleared before execution\\n    /// @dev authenticated by Oapp (msg.sender)\\n    /// @param _origin the origin of the message\\n    /// @param _guid the guid of the message\\n    /// @param _message the message\\n    function clear(MessageOrigin calldata _origin, bytes32 _guid, bytes calldata _message) external {\\n        bytes memory payload = abi.encodePacked(_guid, _message);\\n        _clearPayload(_origin, msg.sender, payload);\\n        emit PacketReceived(_origin, msg.sender);\\n    }\\n\\n    /// @dev allows reconfiguration to recover from wrong configurations\\n    /// @dev users should never approve the EndpointV2 contract to spend their non-layerzero tokens\\n    /// @dev only owner\\n    /// @param _layerZeroToken the new layer zero token address\\n    function setLayerZeroToken(address _layerZeroToken) external onlyOwner {\\n        layerZeroToken = _layerZeroToken;\\n        emit LayerZeroTokenSet(_layerZeroToken);\\n    }\\n\\n    /// @dev recover the token sent to this contract by mistake\\n    /// @dev only owner\\n    /// @param _token the token to recover. if 0x0 then it is native token\\n    /// @param _to the address to send the token to\\n    /// @param _amount the amount to send\\n    function recoverToken(address _token, address _to, uint _amount) external onlyOwner {\\n        if (_token == address(0)) {\\n            payable(_to).transfer(_amount);\\n        } else {\\n            IERC20(_token).safeTransfer(_to, _amount);\\n        }\\n    }\\n\\n    /// @dev handling token payments on endpoint. the sender must approve the endpoint to spend the token\\n    /// @dev internal function\\n    /// @param _token the token to pay\\n    /// @param _sender the sender of the token\\n    /// @param _required the amount required\\n    /// @param _supplied the amount supplied\\n    /// @param _receiver the receiver of the token\\n    function _payToken(address _token, address _sender, uint _required, uint _supplied, address _receiver) internal {\\n        if (_required == 0) return;\\n        require(_token != address(0x0), Errors.TOKEN_UNAVAILABLE);\\n        require(_required <= _supplied, Errors.INVALID_AMOUNT);\\n        IERC20(_token).safeTransferFrom(_sender, _receiver, _required);\\n    }\\n\\n    /// @dev handling native token payments on endpoint\\n    /// @dev internal function\\n    /// @param _required the amount required\\n    /// @param _supplied the amount supplied\\n    /// @param _receiver the receiver of the native token\\n    /// @param _refundAddress the address to refund the excess to\\n    function _payNative(uint _required, uint _supplied, address _receiver, address _refundAddress) internal {\\n        // if altFeeToken is set, then native token is not available\\n        require(altFeeToken == address(0x0), Errors.NATIVE_COIN_UNAVAILABLE);\\n\\n        require(_required <= _supplied, Errors.INVALID_AMOUNT);\\n        if (_required > 0) {\\n            (bool success, ) = _receiver.call{value: _required}(\\\"\\\");\\n            require(success, Errors.INVALID_STATE);\\n        }\\n        if (_required < _supplied) {\\n            unchecked {\\n                // refund the excess\\n                (bool success, ) = _refundAddress.call{value: _supplied - _required}(\\\"\\\");\\n                require(success, Errors.INVALID_STATE);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xae615219fb7878ab48d9bdefb5b6a198649e0bc992bbcce8eb3505de458fe8e7\",\"license\":\"BUSL-1.1\"},\"contracts/MessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IMessageLib.sol\\\";\\nimport \\\"./interfaces/IMessageLibManager.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\n\\ncontract MessageLibManager is Ownable, IMessageLibManager {\\n    address private constant _DEFAULT_LIB = address(0);\\n    address private constant _UNSET_LIB = address(0);\\n\\n    // the library that reverts both on send and quote\\n    // must be configured on construction and be immutable\\n    address public immutable blockedLibrary;\\n\\n    // only registered libraries all valid libraries\\n    // the blockedLibrary will be registered on construction\\n    address[] internal registeredLibraries;\\n    mapping(address lib => bool) public isRegisteredLibrary;\\n\\n    // both sendLibrary and receiveLibrary config can be lazily resolved\\n    mapping(address sender => mapping(uint32 dstEid => address lib)) internal sendLibrary;\\n    mapping(address receiver => mapping(uint32 srcEid => address lib)) internal receiveLibrary;\\n    mapping(address receiver => mapping(uint32 srcEid => Timeout)) public receiveLibraryTimeout;\\n\\n    mapping(uint32 dstEid => address lib) public defaultSendLibrary;\\n    mapping(uint32 srcEid => address lib) public defaultReceiveLibrary;\\n    mapping(uint32 srcEid => Timeout) public defaultReceiveLibraryTimeout;\\n\\n    modifier onlyRegistered(address _lib) {\\n        require(isRegisteredLibrary[_lib], Errors.ONLY_REGISTERED);\\n        _;\\n    }\\n\\n    modifier onlyRegisteredOrDefault(address _lib) {\\n        require(isRegisteredLibrary[_lib] || _lib == _DEFAULT_LIB, Errors.ONLY_REGISTERED_OR_DEFAULT);\\n        _;\\n    }\\n\\n    /// @dev check if the library supported the eid.\\n    modifier onlySupportedEid(address _lib, uint32 _eid) {\\n        if (_lib != _DEFAULT_LIB) {\\n            require(IMessageLib(_lib).isSupportedEid(_eid), Errors.INVALID_EID);\\n        }\\n        _;\\n    }\\n\\n    constructor(address _blockedLib) {\\n        blockedLibrary = _blockedLib;\\n        registerLibrary(_blockedLib);\\n    }\\n\\n    function getRegisteredLibraries() external view returns (address[] memory) {\\n        return registeredLibraries;\\n    }\\n\\n    /// @dev the sendLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero\\n    function getSendLibrary(address _sender, uint32 _dstEid) public view returns (address lib) {\\n        lib = sendLibrary[_sender][_dstEid];\\n        if (lib == _DEFAULT_LIB) {\\n            lib = defaultSendLibrary[_dstEid];\\n            require(lib != _UNSET_LIB, Errors.DEFAULT_LIBRARY_UNAVAILABLE);\\n        }\\n    }\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _dstEid) public view returns (bool) {\\n        return sendLibrary[_sender][_dstEid] == _DEFAULT_LIB;\\n    }\\n\\n    /// @dev the receiveLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero\\n    function getReceiveLibrary(address _receiver, uint32 _srcEid) public view returns (address lib, bool isDefault) {\\n        lib = receiveLibrary[_receiver][_srcEid];\\n        if (lib == _DEFAULT_LIB) {\\n            lib = defaultReceiveLibrary[_srcEid];\\n            require(lib != _UNSET_LIB, Errors.DEFAULT_LIBRARY_UNAVAILABLE);\\n            isDefault = true;\\n        }\\n    }\\n\\n    /// @dev called when the endpoint checks if the msglib attempting to delever the msg is the configured msglib of the Oapp\\n    /// @dev this check provides the ability for Oapp to lock in a trusted msglib\\n    /// @dev it will fist check if the msglib is the currently configured one. then check if the msglib is the one in grace period of msglib versioning upgrade\\n    function isValidReceiveLibrary(\\n        address _receiver,\\n        uint32 _srcEid,\\n        address _actualReceiveLib\\n    ) public view returns (bool) {\\n        // early return true if the _actualReceiveLib is the currently configured one\\n        (address expectedReceiveLib, bool isDefault) = getReceiveLibrary(_receiver, _srcEid);\\n        if (_actualReceiveLib == expectedReceiveLib) {\\n            return true;\\n        }\\n\\n        // check the timeout condition otherwise\\n        // if the Oapp is using defaultReceiveLibrary, use the default Timeout config\\n        // otherwise, use the Timeout configured by the Oapp\\n        Timeout memory timeout = isDefault\\n            ? defaultReceiveLibraryTimeout[_srcEid]\\n            : receiveLibraryTimeout[_receiver][_srcEid];\\n\\n        // requires the _actualReceiveLib to be the same as the one in grace period and the grace period has not expired\\n        // block.timestamp is uint so timeout.expiry must > 0, which implies a non-ZERO value\\n        if (timeout.lib == _actualReceiveLib && timeout.expiry > block.timestamp) {\\n            // timeout lib set and has not expired\\n            return true;\\n        }\\n\\n        // returns false by default\\n        return false;\\n    }\\n\\n    //------- Owner interfaces\\n    /// @dev all libraries have to implement the erc165 interface to prevent wrong configurations\\n    /// @dev only owner\\n    function registerLibrary(address _lib) public onlyOwner {\\n        // must have the right interface\\n        require(IERC165(_lib).supportsInterface(type(IMessageLib).interfaceId), Errors.UNSUPPORTED_INTERFACE);\\n        // must have not been registered\\n        require(!isRegisteredLibrary[_lib], Errors.ALREADY_EXISTS);\\n\\n        // insert into both the map and the list\\n        isRegisteredLibrary[_lib] = true;\\n        registeredLibraries.push(_lib);\\n\\n        emit LibraryRegistered(_lib);\\n    }\\n\\n    /// @dev owner setting the defaultSendLibrary\\n    /// @dev can set to the blockedLibrary, which is a registered library\\n    /// @dev the msglib must enable the support before they can be registered to the endpoint as the default\\n    /// @dev only owner\\n    function setDefaultSendLibrary(\\n        uint32 _eid,\\n        address _newLib\\n    ) external onlyOwner onlyRegistered(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = defaultSendLibrary[_eid];\\n        // must provide a different value\\n        require(oldLib != _newLib, Errors.SAME_VALUE);\\n        defaultSendLibrary[_eid] = _newLib;\\n        emit DefaultSendLibrarySet(_eid, _newLib);\\n    }\\n\\n    /// @dev owner setting the defaultSendLibrary\\n    /// @dev must be a registered library (including blockLibrary) with the eid support enabled\\n    /// @dev in version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.\\n    /// @dev only owner\\n    function setDefaultReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyOwner onlyRegistered(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = defaultReceiveLibrary[_eid];\\n        // must provide a different value\\n        require(oldLib != _newLib, Errors.SAME_VALUE);\\n        defaultReceiveLibrary[_eid] = _newLib;\\n        emit DefaultReceiveLibrarySet(_eid, oldLib, _newLib);\\n\\n        if (_gracePeriod > 0) {\\n            // override the current default timeout to the [old_lib + new expiry]\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = oldLib;\\n            timeout.expiry = block.timestamp + _gracePeriod;\\n            emit DefaultReceiveLibraryTimeoutSet(_eid, oldLib, timeout.expiry);\\n        } else {\\n            // otherwise, remove the old configuration.\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        }\\n    }\\n\\n    /// @dev owner setting the defaultSendLibrary\\n    /// @dev must be a registered library (including blockLibrary) with the eid support enabled\\n    /// @dev can used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration\\n    function setDefaultReceiveLibraryTimeout(\\n        uint32 _eid,\\n        address _lib,\\n        uint _expiry\\n    ) external onlyRegistered(_lib) onlySupportedEid(_lib, _eid) onlyOwner {\\n        if (_expiry == 0) {\\n            // force remove the current configuration\\n            delete defaultReceiveLibraryTimeout[_eid];\\n        } else {\\n            // override it with new configuration\\n            require(_expiry > block.timestamp, Errors.INVALID_ARGUMENT);\\n            Timeout storage timeout = defaultReceiveLibraryTimeout[_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit DefaultReceiveLibraryTimeoutSet(_eid, _lib, _expiry);\\n    }\\n\\n    function defaultConfig(\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view onlyRegistered(_lib) onlySupportedEid(_lib, _eid) returns (bytes memory) {\\n        return IMessageLib(_lib).getDefaultConfig(_eid, _configType);\\n    }\\n\\n    /// @dev returns true only if both the default send/receive libraries are set\\n    function isSupportedEid(uint32 _eid) external view returns (bool) {\\n        return defaultSendLibrary[_eid] != address(0) && defaultReceiveLibrary[_eid] != address(0);\\n    }\\n\\n    //------- OApp interfaces\\n    /// @dev Oapp setting the sendLibrary\\n    /// @dev must be a registered library (including blockLibrary) with the eid support enabled\\n    /// @dev authenticated by the Oapp\\n    function setSendLibrary(\\n        uint32 _eid,\\n        address _newLib\\n    ) external onlyRegisteredOrDefault(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = sendLibrary[msg.sender][_eid];\\n        // must provide a different value\\n        require(oldLib != _newLib, Errors.SAME_VALUE);\\n        sendLibrary[msg.sender][_eid] = _newLib;\\n        emit SendLibrarySet(msg.sender, _eid, _newLib);\\n    }\\n\\n    /// @dev Oapp setting the receiveLibrary\\n    /// @dev must be a registered library (including blockLibrary) with the eid support enabled\\n    /// @dev in version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.\\n    /// @dev authenticated by the Oapp\\n    function setReceiveLibrary(\\n        uint32 _eid,\\n        address _newLib,\\n        uint _gracePeriod\\n    ) external onlyRegisteredOrDefault(_newLib) onlySupportedEid(_newLib, _eid) {\\n        address oldLib = receiveLibrary[msg.sender][_eid];\\n        // must provide new values\\n        require(oldLib != _newLib, Errors.SAME_VALUE);\\n        receiveLibrary[msg.sender][_eid] = _newLib;\\n        emit ReceiveLibrarySet(msg.sender, _eid, oldLib, _newLib);\\n\\n        if (_gracePeriod > 0) {\\n            // to simplify the logic, we only allow to set timeout if neither the new lib or old lib is DEFAULT_LIB, which would should read the defaultTime configurations\\n            // (1) if the Oapp wants to fall back to the DEFAULT, then set the newlib to DEFAULT with grace period == 0\\n            // (2) if the Oapp wants to change to a non DEFAULT from DEFAULT, then set the new lib to non default with _gracePeriod == 0, then use setReceiveLibraryTimeout() interface\\n            require(oldLib != _DEFAULT_LIB && _newLib != _DEFAULT_LIB, Errors.ONLY_NON_DEFAULT);\\n\\n            // write to storage\\n            Timeout memory timeout = Timeout({lib: oldLib, expiry: block.timestamp + _gracePeriod});\\n            receiveLibraryTimeout[msg.sender][_eid] = timeout;\\n            emit ReceiveLibraryTimoutSet(msg.sender, _eid, oldLib, timeout.expiry);\\n        } else {\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        }\\n    }\\n\\n    /// @dev Oapp setting the defaultSendLibrary\\n    /// @dev must be a registered library (including blockLibrary) with the eid support enabled\\n    /// @dev can used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration\\n    function setReceiveLibraryTimeout(\\n        uint32 _eid,\\n        address _lib,\\n        uint _expiry\\n    ) external onlyRegistered(_lib) onlySupportedEid(_lib, _eid) {\\n        (, bool isDefault) = getReceiveLibrary(msg.sender, _eid);\\n        // if current library is DEFAULT, Oapp cant set the timeout\\n        require(!isDefault, Errors.ONLY_NON_DEFAULT);\\n\\n        if (_expiry == 0) {\\n            // force remove the current configuration\\n            delete receiveLibraryTimeout[msg.sender][_eid];\\n        } else {\\n            // override it with new configuration\\n            require(_expiry > block.timestamp, Errors.INVALID_ARGUMENT);\\n            Timeout storage timeout = receiveLibraryTimeout[msg.sender][_eid];\\n            timeout.lib = _lib;\\n            timeout.expiry = _expiry;\\n        }\\n        emit ReceiveLibraryTimoutSet(msg.sender, _eid, _lib, _expiry);\\n    }\\n\\n    //------- library config setter/getter. all pass-through functions to the msglib\\n\\n    /// @dev authenticated by the msg.sender\\n    function setConfig(address _lib, uint32 _eid, SetConfigParam[] calldata _params) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).setConfig(msg.sender, _eid, _params);\\n    }\\n\\n    /// @dev a view function to query the current configuration of the oapp\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view onlyRegistered(_lib) returns (bytes memory config, bool isDefault) {\\n        return IMessageLib(_lib).getConfig(_eid, _oapp, _configType);\\n    }\\n\\n    /// @dev lock-in the current configuration of the provided eids to the Oapp , e.g. copying the default configuration.\\n    /// @dev it allows the Oapp to be not affected by Default configuration changes.\\n    /// @dev authenticated by the msg.sender\\n    function snapshotConfig(address _lib, uint32[] calldata _eids) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).snapshotConfig(_eids, msg.sender);\\n    }\\n\\n    /// @dev setting the Oapp's configuration to the default configurations of the provided eids\\n    /// @dev almost like the reverse action to snapshotConfig()\\n    /// @dev authenticated by the msg.sender\\n    function resetConfig(address _lib, uint32[] calldata _eids) external onlyRegistered(_lib) {\\n        IMessageLib(_lib).resetConfig(_eids, msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xb7e2de731dd2af895057e75d3ebc036a8f659738d072e37307e599258b1e23eb\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/IMessagingChannel.sol\\\";\\nimport \\\"./interfaces/IMessageOrigin.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\nimport \\\"./libs/AddressCast.sol\\\";\\n\\ncontract MessagingChannel is IMessagingChannel, IMessageOrigin {\\n    using AddressCast for address;\\n\\n    uint32 public immutable eid;\\n\\n    mapping(address receiver => mapping(uint32 srcEid => mapping(bytes32 sender => uint64 nonce)))\\n        internal lazyInboundNonce;\\n    mapping(address receiver => mapping(uint32 srcEid => mapping(bytes32 sender => mapping(uint64 inboundNonce => bytes32 payloadHash))))\\n        public inboundPayloadHash;\\n    mapping(address sender => mapping(uint32 dstEid => mapping(bytes32 receiver => uint64 nonce))) public outboundNonce;\\n\\n    constructor(uint32 _eid) {\\n        eid = _eid;\\n    }\\n\\n    /// @dev increase and return the next outbound nonce\\n    function _outbound(address _sender, uint32 _dstEid, bytes32 _receiver) internal returns (uint64 nonce) {\\n        unchecked {\\n            nonce = ++outboundNonce[_sender][_dstEid][_receiver];\\n        }\\n    }\\n\\n    /// @dev inbound wont update the nonce eagerly to allow unordered delivery\\n    /// @dev instead, it will update the nonce lazily when the message is received\\n    /// @dev messages can only be cleared in order to preserve censorship-resistance\\n    function _inbound(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) internal {\\n        inboundPayloadHash[_receiver][_origin.srcEid][_origin.sender][_origin.nonce] = _payloadHash;\\n    }\\n\\n    /// @dev as long as nonce > lazyInboundNonce, the nonce has not be received and it can be re/delivered.\\n    /// @dev for honest msglibs, redelivering the same message is idempotent\\n    /// @dev for malicious/buggy msglibs, in the extreme cases, allowing redelivery provide the ability to recover from the failure if the message was not received (can be rejected by the app by some forms of time-lock window)\\n    function _inboundDeliverable(MessageOrigin calldata _origin, address _receiver) internal view returns (bool) {\\n        return _origin.nonce > lazyInboundNonce[_receiver][_origin.srcEid][_origin.sender];\\n    }\\n\\n    /// @dev returns the effective inbound nonce which has all its prior messages delivered\\n    /// @dev it starts from the lazyInboundNonce (last checkpoint) and iteratively check if the next nonce has been delivered\\n    /// @dev in extreme cases where there are a lot of messages, this function can OOG. but it can be trivially fixed by just clearing some prior messages\\n    /// @dev if the app can not receive any of the queued message, the app is most likely broken\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) public view returns (uint64) {\\n        uint64 nonceCursor = lazyInboundNonce[_receiver][_srcEid][_sender];\\n        // find the effective inbound currentNonce\\n        unchecked {\\n            while (hasPayloadHash(_receiver, _srcEid, _sender, nonceCursor + 1)) {\\n                ++nonceCursor;\\n            }\\n        }\\n        return nonceCursor;\\n    }\\n\\n    /// @dev simply checking if the storage slot is not initialized. assuming the payload can be not hashed to 0\\n    function hasPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) public view returns (bool) {\\n        return inboundPayloadHash[_receiver][_srcEid][_sender][_nonce] != bytes32(0);\\n    }\\n\\n    /// @dev the caller must provide _nonce to prevent skipping the unintended nonce\\n    /// @dev it could happen in some race conditions, e.g. intent to skip nonce 3, but nonce 3 was consumed before this transaction was included in the block\\n    /// @dev NOTE: only allows skipping the next of the effective inbound nonce (from the inboundNonce() function). if the Oapp wants to skips a delivered message, it should call the clear() function and ignore the payload instead\\n    /// @dev after skipping the lazyInboundNonce is set to the provided nonce, which makes the inboundNonce also the provided nonce\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external {\\n        require(_nonce == inboundNonce(msg.sender, _srcEid, _sender) + 1, Errors.INVALID_NONCE);\\n        lazyInboundNonce[msg.sender][_srcEid][_sender] = _nonce;\\n        emit InboundNonceSkipped(_srcEid, _sender, msg.sender, _nonce);\\n    }\\n\\n    /// @dev calling this function will clear the stored message and increment the lazyInboundNonce to the provided nonce\\n    /// @dev if a lot of messages are queued, the messages can be cleared with a smaller step size to prevent OOG\\n    /// @dev NOTE: this function does not change inboundNonce, it only changes the lazyInboundNonce up to the provided nonce\\n    function _clearPayload(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes memory _payload\\n    ) internal returns (bytes32 actualHash) {\\n        uint32 srcEid = _origin.srcEid;\\n        bytes32 sender = _origin.sender;\\n        uint64 nonce = _origin.nonce;\\n        // require the _nonce to be no greater than the inboundNonce\\n        uint64 currentNonce = lazyInboundNonce[_receiver][srcEid][sender];\\n        if (nonce > currentNonce) {\\n            // try to lazily update the inboundNonce till the _nonce\\n            unchecked {\\n                for (uint64 i = currentNonce + 1; i <= nonce; ++i) {\\n                    require(hasPayloadHash(_receiver, srcEid, sender, i), Errors.INVALID_NONCE);\\n                }\\n            }\\n            lazyInboundNonce[_receiver][srcEid][sender] = nonce;\\n        }\\n\\n        // check hash\\n        actualHash = keccak256(_payload);\\n        bytes32 expectedHash = inboundPayloadHash[_receiver][srcEid][sender][nonce];\\n        require(expectedHash == actualHash, Errors.NOT_FOUND);\\n        // remove it from the storage\\n        delete inboundPayloadHash[_receiver][srcEid][sender][nonce];\\n    }\\n\\n    /// @dev returns the GUID for the next message given the path\\n    /// @dev the Oapp might want to include the GUID into the message in some cases\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32) {\\n        uint64 nextNonce = outboundNonce[_sender][_dstEid][_receiver] + 1;\\n        return _getGuid(nextNonce, _sender, _dstEid, _receiver);\\n    }\\n\\n    function _getGuid(\\n        uint64 _nonce,\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes32 _receiver\\n    ) internal view returns (bytes32 guid) {\\n        bytes memory path = abi.encodePacked(eid, _sender.toBytes32(), _dstEid, _receiver);\\n        guid = keccak256(abi.encodePacked(_nonce, path));\\n    }\\n}\\n\",\"keccak256\":\"0x0467a8cf2aa7e2347af16d21eca515dc8b3c2132d85409c09696a543e4f9b550\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/IMessagingComposer.sol\\\";\\nimport \\\"./interfaces/ILayerZeroComposer.sol\\\";\\nimport \\\"./libs/SafeCall.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\n\\ncontract MessagingComposer is IMessagingComposer {\\n    using SafeCall for address;\\n\\n    bytes32 private constant _NO_MESSAGE_HASH = bytes32(0);\\n    bytes32 private constant _RECEIVED_MESSAGE_HASH = bytes32(uint(1));\\n\\n    mapping(address receiver => mapping(address composer => mapping(bytes32 guid => bytes32 messageHash)))\\n        public composedMessages;\\n\\n    /// @dev the Oapp delivers the lzCompose message to the endpoint\\n    /// @dev the composer MUST assert the sender because anyone can delivery msg with this function\\n    /// @dev with the same GUID, the Oapp can deliver to multiple _composer at the same time\\n    /// @dev authenticated by the msg.sender\\n    /// @param _composer the composer address\\n    /// @param _guid the message guid\\n    /// @param _message the message\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external {\\n        // must have not be delivered before\\n        require(composedMessages[msg.sender][_composer][_guid] == _NO_MESSAGE_HASH, Errors.ALREADY_EXISTS);\\n        composedMessages[msg.sender][_composer][_guid] = keccak256(_message);\\n        emit ComposedMessageDelivered(msg.sender, _composer, _guid, _message);\\n    }\\n\\n    /// @dev execute a composed messages from the sender to the composer (receiver)\\n    /// @dev the execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraData\\n    /// @dev can not re-entrant\\n    /// @param _sender the sender address. in most cases, it is the Oapp's address.\\n    /// @param _composer the composer address\\n    /// @param _guid the message guid\\n    /// @param _message the message\\n    /// @param _extraData the extra data provided by the executor. this data is untrusted and should be validated.\\n    function lzCompose(\\n        address _sender,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable returns (bool success, bytes memory reason) {\\n        // assert the validity\\n        bytes32 expectedHash = composedMessages[_sender][_composer][_guid];\\n        require(expectedHash == keccak256(_message), Errors.NOT_FOUND);\\n\\n        // mark the message as received. prevent reentrancy\\n        // can not just delete the value. otherwise, the message can be redelivered and could result in some undefined behaviour\\n        // even though the sender is implicitly fully trusted by the composer. for example, the sender may not even realize it has such a bug\\n        composedMessages[_sender][_composer][_guid] = _RECEIVED_MESSAGE_HASH;\\n\\n        {\\n            bytes memory callData = abi.encodeWithSelector(\\n                ILayerZeroComposer.lzCompose.selector,\\n                _sender,\\n                _guid,\\n                _message,\\n                msg.sender,\\n                _extraData\\n            );\\n            (success, reason) = _composer.safeCall(gasleft(), msg.value, callData);\\n        }\\n\\n        if (success) {\\n            emit ComposedMessageReceived(_sender, _composer, _guid, expectedHash, msg.sender);\\n        } else {\\n            // if the message fails, revert the state\\n            composedMessages[_sender][_composer][_guid] = expectedHash;\\n\\n            // refund the native fee if the message fails to prevent the loss of fund\\n            if (msg.value > 0) {\\n                (bool sent, ) = msg.sender.call{value: msg.value}(\\\"\\\");\\n                require(sent, Errors.INVALID_STATE);\\n            }\\n            emit LzComposeFailed(_sender, _composer, _guid, expectedHash, msg.sender, reason);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa35532488c7f44f43a5565bfd88ceabe338c06614c9a31be3bce97dc9a0762c6\",\"license\":\"BUSL-1.1\"},\"contracts/MessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/IMessagingContext.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\n\\n/// this contract acts as a non-reentrancy guard and a source of messaging context\\n/// the context includes the remote eid and the sender/receiver address\\n/// it separates the send and receive context to allow messaging receipts (send back on receive())\\ncontract MessagingContext is IMessagingContext {\\n    uint private constant _NOT_ENTERED = 1;\\n    uint private _sendContext = _NOT_ENTERED;\\n\\n    /// @dev the sendContext is set to 8 bytes 0s + 4 bytes eid + 20 bytes sender\\n    modifier sendContext(uint32 _dstEid, address _sender) {\\n        require(_sendContext == _NOT_ENTERED, Errors.SEND_REENTRANCY);\\n        _sendContext = (uint(_dstEid) << 160) | uint160(_sender);\\n        _;\\n        _sendContext = _NOT_ENTERED;\\n    }\\n\\n    /// @dev returns true if sending message\\n    function isSendingMessage() public view returns (bool) {\\n        return _sendContext != _NOT_ENTERED;\\n    }\\n\\n    /// @dev returns (eid, sender) if sending message, (0, 0) otherwise\\n    function getSendContext() external view returns (uint32, address) {\\n        return isSendingMessage() ? (uint32(_sendContext >> 160), address(uint160(_sendContext))) : (0, address(0));\\n    }\\n}\\n\",\"keccak256\":\"0xebdbdcff9a89741e45d74adf6462eed265a2f93ae402941f848916851e3884d8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroComposer {\\n    function lzCompose(\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _caller,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x3e7e7e659a2e469eb7b0961d5bc36884a284e0a7b6b66230db7b72217b65f5df\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IMessageLibManager.sol\\\";\\nimport \\\"./IMessagingComposer.sol\\\";\\nimport \\\"./IMessagingChannel.sol\\\";\\nimport \\\"./IMessagingContext.sol\\\";\\nimport \\\"./IMessageOrigin.sol\\\";\\n\\ninterface ILayerZeroEndpointV2 is\\n    IMessageLibManager,\\n    IMessagingComposer,\\n    IMessagingChannel,\\n    IMessagingContext,\\n    IMessageOrigin\\n{\\n    struct MessagingParams {\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes message;\\n        bytes options;\\n    }\\n\\n    struct MessagingReceipt {\\n        bytes32 guid;\\n        uint64 nonce;\\n        MessagingFee fee;\\n    }\\n\\n    struct MessagingFee {\\n        uint nativeFee;\\n        uint lzTokenFee;\\n    }\\n\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketDelivered(MessageOrigin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketReceived(MessageOrigin origin, address receiver);\\n\\n    event LzReceiveFailed(MessageOrigin origin, address receiver, bytes reason);\\n\\n    event FeePaid(MessagingFee fee);\\n\\n    event LayerZeroTokenSet(address token);\\n\\n    function quote(\\n        address _sender,\\n        uint32 _dstEid,\\n        bytes calldata _message,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        address payable _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function sendWithAlt(\\n        MessagingParams calldata _params,\\n        uint _lzTokenFee,\\n        uint _altTokenFee\\n    ) external returns (MessagingReceipt memory);\\n\\n    function deliver(MessageOrigin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function deliverable(\\n        MessageOrigin calldata _origin,\\n        address _receiveLib,\\n        address _receiver\\n    ) external view returns (bool);\\n\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable returns (bool, bytes memory);\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are delivered in order\\n    function clear(MessageOrigin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLayerZeroToken(address _layerZeroToken) external;\\n\\n    function layerZeroToken() external view returns (address);\\n\\n    function altFeeToken() external view returns (address);\\n}\\n\",\"keccak256\":\"0x93a91a12df3614cabdd1964097718da66cb8487964ad7f013a6f5f2dd507f768\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IMessageOrigin.sol\\\";\\n\\ninterface ILayerZeroReceiver is IMessageOrigin {\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        MessageOrigin calldata _origin,\\n        bytes32 _guid,\\n        bytes memory _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xe1e716f2016fe17aeeed4b41a37b6ce9a163e719a5c8e1c5e6be41d64fb701ee\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport \\\"./ILayerZeroEndpointV2.sol\\\";\\nimport \\\"./IPacket.sol\\\";\\n\\ninterface IMessageLib is IERC165, IPacket {\\n    function send(\\n        Packet calldata _packet,\\n        bytes calldata _options,\\n        bool _payInLzToken\\n    ) external returns (ILayerZeroEndpointV2.MessagingReceipt memory, bytes memory encodedPacket, bytes memory options);\\n\\n    function quote(\\n        PacketForQuote calldata _packet,\\n        bool _payInLzToken,\\n        bytes calldata _options\\n    ) external view returns (ILayerZeroEndpointV2.MessagingFee memory);\\n\\n    function setTreasury(address _treasury) external;\\n\\n    function setConfig(address _oapp, uint32 _eid, ILayerZeroEndpointV2.SetConfigParam[] calldata _config) external;\\n\\n    function snapshotConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function resetConfig(uint32[] calldata _eids, address _oapp) external;\\n\\n    function getConfig(\\n        uint32 _eid,\\n        address _oapp,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function getDefaultConfig(uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function withdrawFee(address _to, uint _amount) external;\\n\\n    function withdrawLzTokenFee(address _lzToken, address _to, uint _amount) external;\\n\\n    // message libs of same major version are compatible\\n    function version() external view returns (uint64 major, uint8 minor, uint8 endpointVersion);\\n}\\n\",\"keccak256\":\"0xbb4357dfe2f9783e888f9731b85611c440d1028fd17669064cde56acd1cdf8e5\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageLibManager {\\n    struct SetConfigParam {\\n        uint32 configType;\\n        bytes config;\\n    }\\n\\n    struct Timeout {\\n        address lib;\\n        uint expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address oldLib, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address oldLib, address newLib);\\n    event ReceiveLibraryTimoutSet(address receiver, uint32 eid, address oldLib, uint timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint _timeout) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function defaultConfig(address _lib, uint32 _eid, uint32 _configType) external view returns (bytes memory);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(uint32 _eid, address _newLib, uint _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(uint32 _eid, address _lib, uint _gracePeriod) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint expiry);\\n\\n    function setConfig(address _lib, uint32 _eid, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config, bool isDefault);\\n\\n    function snapshotConfig(address _lib, uint32[] calldata _eids) external;\\n\\n    function resetConfig(address _lib, uint32[] calldata _eids) external;\\n}\\n\",\"keccak256\":\"0xb013b61a9b8c4950aa5bfa966dc4876203dd8a3f55a890cd107f549edca41463\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessageOrigin.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageOrigin {\\n    struct MessageOrigin {\\n        uint32 srcEid;\\n        bytes32 sender;\\n        uint64 nonce;\\n    }\\n}\\n\",\"keccak256\":\"0x17fe98500a8ff512f22020c5a9522b676af101e6fc11a073ebf162ea02aa2f47\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message can not be delivered for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function hasPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe9c180ca201e8af11747079224729e0552addf70d65c60e7a61a4624a28d4e5c\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposedMessageDelivered(address receiver, address composer, bytes32 guid, bytes message);\\n    event ComposedMessageReceived(\\n        address receiver,\\n        address composer,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller\\n    );\\n    event LzComposeFailed(\\n        address sender,\\n        address receiver,\\n        bytes32 guid,\\n        bytes32 messageHash,\\n        address caller,\\n        bytes reason\\n    );\\n\\n    function deliverComposedMessage(address _composer, bytes32 _guid, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _receiver,\\n        address _composer,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable returns (bool, bytes memory);\\n}\\n\",\"keccak256\":\"0x3993726690a51a8660c2145d3d1483e03d93de7a578afc4130467bf6804f6896\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32, address);\\n}\\n\",\"keccak256\":\"0x6af87d5d41d060363fe554ff0ce9138f1ad8e20c1aaeec777d4132fc505e74e8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPacket.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface IPacket {\\n    struct PacketForQuote {\\n        address sender;\\n        uint32 dstEid;\\n        bytes message;\\n    }\\n\\n    struct Packet {\\n        uint64 nonce;\\n        uint32 srcEid;\\n        address sender;\\n        uint32 dstEid;\\n        bytes32 receiver;\\n        bytes32 guid;\\n        bytes message;\\n    }\\n}\\n\",\"keccak256\":\"0x592a61c0cab10494b72da5f4604f2288f5f965e2e941a1622797a9f2aaad597a\",\"license\":\"BUSL-1.1\"},\"contracts/libs/AddressCast.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Errors.sol\\\";\\n\\nlibrary AddressCast {\\n    function toBytes32(bytes calldata _addressBytes) internal pure returns (bytes32 result) {\\n        require(_addressBytes.length <= 32, Errors.INVALID_SIZE);\\n        result = bytes32(_addressBytes);\\n        unchecked {\\n            uint offset = 32 - _addressBytes.length;\\n            result = result >> (offset * 8);\\n        }\\n    }\\n\\n    function toBytes32(address _address) internal pure returns (bytes32 result) {\\n        result = bytes32(uint(uint160(_address)));\\n    }\\n\\n    function toBytes(bytes32 _addressBytes32, uint _size) internal pure returns (bytes memory result) {\\n        require(_size > 0 && _size <= 32, Errors.INVALID_SIZE);\\n        bytes memory data = abi.encodePacked(_addressBytes32); // copy to memory\\n        result = new bytes(_size);\\n        unchecked {\\n            uint offset = 64 - _size; // 32 + 32\\n            assembly {\\n                mstore(add(result, 32), mload(add(data, offset)))\\n            }\\n        }\\n    }\\n\\n    function toAddress(bytes32 _addressBytes32) internal pure returns (address result) {\\n        result = address(uint160(uint(_addressBytes32)));\\n    }\\n\\n    function toAddress(bytes calldata _addressBytes) internal pure returns (address result) {\\n        require(_addressBytes.length == 20, Errors.INVALID_SIZE);\\n        result = address(bytes20(_addressBytes));\\n    }\\n}\\n\",\"keccak256\":\"0xadbb76b8bf7515cfe6e9cf5c0d0345926dd504999494bf5b23200f505398790c\",\"license\":\"BUSL-1.1\"},\"contracts/libs/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Errors {\\n    // Invalid Argument (http: 400)\\n    string internal constant INVALID_ARGUMENT = \\\"LZ10000\\\";\\n    string internal constant ONLY_REGISTERED = \\\"LZ10001\\\";\\n    string internal constant ONLY_REGISTERED_OR_DEFAULT = \\\"LZ10002\\\";\\n    string internal constant INVALID_AMOUNT = \\\"LZ10003\\\";\\n    string internal constant INVALID_NONCE = \\\"LZ10004\\\";\\n    string internal constant SAME_VALUE = \\\"LZ10005\\\";\\n    string internal constant UNSORTED = \\\"LZ10006\\\";\\n    string internal constant INVALID_VERSION = \\\"LZ10007\\\";\\n    string internal constant INVALID_EID = \\\"LZ10008\\\";\\n    string internal constant INVALID_SIZE = \\\"LZ10009\\\";\\n    string internal constant ONLY_NON_DEFAULT = \\\"LZ10010\\\";\\n    string internal constant INVALID_VERIFIERS = \\\"LZ10011\\\";\\n    string internal constant DUPLICATED = \\\"LZ10012\\\";\\n    string internal constant INVALID_WORKER_ID = \\\"LZ10013\\\";\\n\\n    // Out of Range (http: 400)\\n    string internal constant OUT_OF_RANGE = \\\"LZ20000\\\";\\n\\n    // Invalid State (http: 400)\\n    string internal constant INVALID_STATE = \\\"LZ30000\\\";\\n    string internal constant SEND_REENTRANCY = \\\"LZ30001\\\";\\n    string internal constant RECEIVE_REENTRANCY = \\\"LZ30002\\\";\\n    string internal constant COMPOSE_REENTRANCY = \\\"LZ30003\\\";\\n\\n    // Permission Denied (http: 403)\\n    string internal constant PERMISSION_DENIED = \\\"LZ50000\\\";\\n\\n    // Not Found (http: 404)\\n    string internal constant NOT_FOUND = \\\"LZ60000\\\";\\n\\n    // Already Exists (http: 409)\\n    string internal constant ALREADY_EXISTS = \\\"LZ80000\\\";\\n\\n    // Not Implemented (http: 501)\\n    string internal constant NOT_IMPLEMENTED = \\\"LZC0000\\\";\\n    string internal constant UNSUPPORTED_INTERFACE = \\\"LZC0001\\\";\\n\\n    // Unavailable (http: 503)\\n    string internal constant UNAVAILABLE = \\\"LZD0000\\\";\\n    string internal constant NATIVE_COIN_UNAVAILABLE = \\\"LZD0001\\\";\\n    string internal constant TOKEN_UNAVAILABLE = \\\"LZD0002\\\";\\n    string internal constant DEFAULT_LIBRARY_UNAVAILABLE = \\\"LZD0003\\\";\\n    string internal constant VERIFIERS_UNAVAILABLE = \\\"LZD0004\\\";\\n}\\n\",\"keccak256\":\"0x00c68dee6968a14fa9a120a7447a3f568379c86f2a59d363e902128d4f361a6e\",\"license\":\"BUSL-1.1\"},\"contracts/libs/SafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\n\\nlibrary SafeCall {\\n    /// @notice calls a contract with a specified gas limit and value and captures the return data\\n    /// @dev copied from https://github.com/nomad-xyz/ExcessivelySafeCall/blob/main/src/ExcessivelySafeCall.sol.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _value The value in wei to send to the remote contract\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function safeCall(\\n        address _target,\\n        uint256 _gas,\\n        uint256 _value,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        uint16 _maxCopy = 100; // limits the copy size to be 100, 4+96, bytes\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                _value, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n}\\n\",\"keccak256\":\"0xbc2d453acff20fd33ac3a46635e9e70b77bf0b75b66287e3c4190cbd82d8f7a5\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60e06040526001600d553480156200001657600080fd5b5060405162005e2b38038062005e2b83398101604081905262000039916200030b565b818362000046336200007d565b63ffffffff166080526001600160a01b03811660a0526200006781620000cd565b506001600160a01b031660c05250620003da9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000d762000290565b6040516301ffc9a760e01b815263d913d0cd60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014991906200035f565b604051806040016040528060078152602001664c5a433030303160c81b81525090620001935760405162461bcd60e51b81526004016200018a91906200038a565b60405180910390fd5b506001600160a01b038116600090815260056020908152604091829020548251808401909352600783526604c5a38303030360cc1b9183019190915260ff1615620001f35760405162461bcd60e51b81526004016200018a91906200038a565b506001600160a01b0381166000818152600560209081526040808320805460ff191660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180546001600160a01b0319168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910160405180910390a150565b6000546001600160a01b03163314620002ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200018a565b565b80516001600160a01b03811681146200030657600080fd5b919050565b6000806000606084860312156200032157600080fd5b835163ffffffff811681146200033657600080fd5b92506200034660208501620002ee565b91506200035660408501620002ee565b90509250925092565b6000602082840312156200037257600080fd5b815180151581146200038357600080fd5b9392505050565b600060208083528351808285015260005b81811015620003b9578581018301518582016040015282016200039b565b506000604082860101526040601f19601f8301168501019250505092915050565b60805160a05160c051615a056200042660003960008181610b7401528181611c1a01526142920152600061063601526000818161046601528181613e3e01526141cb0152615a056000f3fe6080604052600436106103295760003560e01c80639c9dd91d116101a5578063c9fc7bcd116100ec578063e8964e8111610095578063f2fde38b1161006f578063f2fde38b14610af9578063f405c85914610b19578063f64be4c714610b2c578063f936112b14610b6257600080fd5b8063e8964e8114610a6e578063eaeacd6314610a8e578063ef667aa114610aae57600080fd5b8063dc93c8a2116100c6578063dc93c8a2146109e2578063e16f964d14610a2e578063e361b59c14610a4e57600080fd5b8063c9fc7bcd1461094b578063d4b4ec8f14610992578063dc706a62146109b257600080fd5b8063aafe5e071161014e578063b8007ff611610128578063b8007ff6146108eb578063b8849ac91461090b578063b96a277f1461092b57600080fd5b8063aafe5e0714610898578063aafea312146108b8578063aca1b45a146108d857600080fd5b8063a0dd43fc1161017f578063a0dd43fc14610838578063a718531b14610858578063a7229fd91461087857600080fd5b80639c9dd91d146107ac5780639d7f9775146107f85780639e7fffcc1461081857600080fd5b80636750cd4c1161027457806379624ca91161021d5780639132e5c3116101f75780639132e5c3146106dc578063965183d4146106fe5780639731526b1461071e5780639c6d73401461074b57600080fd5b806379624ca91461067857806383c47559146106915780638da5cb5b146106be57600080fd5b8063715018a61161024e578063715018a61461060f5780637331809114610624578063754d3b9c1461065857600080fd5b80636750cd4c1461055a5780636e83f5bb1461057a5780636f50a803146105d957600080fd5b8063416ecebf116102d657806351c85b6b116102b057806351c85b6b146104ed57806352d3b5001461051a57806366bf43d61461053a57600080fd5b8063416ecebf14610454578063418ba3511461049d57806345c6dcc4146104cd57600080fd5b806314f651a91161030757806314f651a9146103ae5780632b3197b9146103e7578063402f84681461041557600080fd5b80630678327f1461032e57806307b9ca7c146103505780630c0c389e1461038d575b600080fd5b34801561033a57600080fd5b5061034e6103493660046147f3565b610b96565b005b34801561035c57600080fd5b50600e54610370906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103a061039b3660046148a2565b610c95565b6040516103849291906149ae565b3480156103ba57600080fd5b506103c3610e20565b6040805163ffffffff90931683526001600160a01b03909116602083015201610384565b3480156103f357600080fd5b506104076104023660046149e2565b610e4f565b604051610384929190614a3a565b34801561042157600080fd5b50610435610430366004614a5e565b610f8f565b604080516001600160a01b039093168352901515602083015201610384565b34801561046057600080fd5b506104887f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610384565b3480156104a957600080fd5b506104bd6104b8366004614a93565b611047565b6040519015158152602001610384565b3480156104d957600080fd5b5061034e6104e8366004614add565b6110c9565b3480156104f957600080fd5b5061050d610508366004614b1d565b6111df565b6040516103849190614b62565b34801561052657600080fd5b5061034e610535366004614b75565b611400565b34801561054657600080fd5b5061034e610555366004614b92565b611475565b34801561056657600080fd5b506104bd610575366004614bd1565b61179f565b34801561058657600080fd5b506105ba610595366004614bd1565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610384565b3480156105e557600080fd5b506103706105f4366004614bd1565b600a602052600090815260409020546001600160a01b031681565b34801561061b57600080fd5b5061034e6117ef565b34801561063057600080fd5b506103707f000000000000000000000000000000000000000000000000000000000000000081565b34801561066457600080fd5b5061034e610673366004614bec565b611803565b34801561068457600080fd5b50600d54600114156104bd565b34801561069d57600080fd5b506106b16106ac366004614c56565b61190a565b6040516103849190614cde565b3480156106ca57600080fd5b506000546001600160a01b0316610370565b3480156106e857600080fd5b506106f1611a8e565b6040516103849190614cf5565b34801561070a57600080fd5b5061034e610719366004614d42565b611af0565b34801561072a57600080fd5b5061073e610739366004614d97565b611b64565b6040516103849190614de5565b34801561075757600080fd5b50610793610766366004614e21565b600360209081526000938452604080852082529284528284209052825290205467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610384565b3480156107b857600080fd5b506107ea6107c7366004614e5f565b600c60209081526000938452604080852082529284528284209052825290205481565b604051908152602001610384565b34801561080457600080fd5b506104bd610813366004614e7f565b611cb9565b34801561082457600080fd5b5061034e6108333660046147f3565b611d93565b34801561084457600080fd5b50610793610853366004614e21565b611e51565b34801561086457600080fd5b5061034e610873366004614b92565b611eaa565b34801561088457600080fd5b5061034e610893366004614e5f565b61221d565b3480156108a457600080fd5b506107ea6108b3366004614e21565b612288565b3480156108c457600080fd5b5061034e6108d3366004614ebd565b6122e8565b61073e6108e6366004614ef4565b61255a565b3480156108f757600080fd5b5061034e610906366004614f44565b61261f565b34801561091757600080fd5b5061034e610926366004614b92565b612718565b34801561093757600080fd5b50610370610946366004614a5e565b612b48565b34801561095757600080fd5b506107ea610966366004614fb1565b600260209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561099e57600080fd5b5061034e6109ad366004614b92565b612bf7565b3480156109be57600080fd5b506104bd6109cd366004614b75565b60056020526000908152604090205460ff1681565b3480156109ee57600080fd5b506104bd6109fd366004614a5e565b6001600160a01b03918216600090815260066020908152604080832063ffffffff9490941683529290522054161590565b348015610a3a57600080fd5b5061034e610a49366004614ebd565b612e9c565b348015610a5a57600080fd5b506104bd610a69366004614fb1565b613125565b348015610a7a57600080fd5b5061034e610a89366004614b75565b613174565b348015610a9a57600080fd5b5061034e610aa9366004615002565b6133b1565b348015610aba57600080fd5b506105ba610ac9366004614a5e565b6008602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b348015610b0557600080fd5b5061034e610b14366004614b75565b6134d5565b6103a0610b27366004615037565b613565565b348015610b3857600080fd5b50610370610b47366004614bd1565b6009602052600090815260409020546001600160a01b031681565b348015610b6e57600080fd5b506103707f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915284919060ff16610c135760405162461bcd60e51b8152600401610c0a9190614b62565b60405180910390fd5b506040517f1c63e3b60000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c63e3b690610c5d908690869033906004016150b6565b600060405180830381600087803b158015610c7757600080fd5b505af1158015610c8b573d6000803e3d6000fd5b5050505050505050565b600060606000610cc98a8a8a8a8a604051602001610cb593929190615111565b60405160208183030381529060405261387c565b9050610cda8a8a8a8a8a8a8a613ad7565b90935091508215610d23577f2d05fd3bd2a2620dfaf6174f2083d54fbfd9106a4ee93c81238ea5a5f731aede8a8a604051610d16929190615169565b60405180910390a1610e13565b610d2e8a8a83613ba8565b3415610dd757604051600090339034908381818185875af1925050503d8060008114610d76576040519150601f19603f3d011682016040523d82523d6000602084013e610d7b565b606091505b50509050806040518060400160405280600781526020017f4c5a33303030300000000000000000000000000000000000000000000000000081525090610dd45760405162461bcd60e51b8152600401610c0a9190614b62565b50505b7faf073b1a1dac00a30ce25289039781005b496fbf28cd561b69a2359f1dd07ed98a8a84604051610e0a9392919061518d565b60405180910390a15b5097509795505050505050565b600080610e30600d546001141590565b610e3c57600080610e47565b60a0600d54901c600d545b915091509091565b6001600160a01b0383166000908152600560209081526040808320548151808301909252600782527f4c5a313030303100000000000000000000000000000000000000000000000000928201929092526060929186919060ff16610ec65760405162461bcd60e51b8152600401610c0a9190614b62565b506040517f9c33abf700000000000000000000000000000000000000000000000000000000815263ffffffff80871660048301526001600160a01b0389811660248401529086166044830152871690639c33abf790606401600060405180830381865afa158015610f3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f819190810190615291565b925092505094509492505050565b6001600160a01b03808316600090815260076020908152604080832063ffffffff8616845290915281205490911690816110405763ffffffff83166000908152600a6020908152604091829020548251808401909352600783527f4c5a443030303300000000000000000000000000000000000000000000000000918301919091526001600160a01b031692508261103a5760405162461bcd60e51b8152600401610c0a9190614b62565b50600190505b9250929050565b60006110608261105a6020870187614bd1565b85611cb9565b6040518060400160405280600781526020017f4c5a353030303000000000000000000000000000000000000000000000000000815250906110b45760405162461bcd60e51b8152600401610c0a9190614b62565b506110bf8483613c36565b90505b9392505050565b6110e0826110da6020860186614bd1565b33611cb9565b6040518060400160405280600781526020017f4c5a353030303000000000000000000000000000000000000000000000000000815250906111345760405162461bcd60e51b8152600401610c0a9190614b62565b5061113f8383613c36565b6040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906111935760405162461bcd60e51b8152600401610c0a9190614b62565b5061119f838383613ba8565b7f3015b766371c496aa0ecdb272f6bf2fd695f317932333ad7a090f392a7c0ce398383836040516111d2939291906152d8565b60405180910390a1505050565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a31303030310000000000000000000000000000000000000000000000000091830191909152606091859160ff166112555760405162461bcd60e51b8152600401610c0a9190614b62565b5084846001600160a01b03821615611344576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906113425760405162461bcd60e51b8152600401610c0a9190614b62565b505b6040517f690c655500000000000000000000000000000000000000000000000000000000815263ffffffff8088166004830152861660248201526001600160a01b0388169063690c655590604401600060405180830381865afa1580156113af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113f5919081019061531d565b979650505050505050565b611408613cb5565b600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527ff66b6c5fcba13210e695e203c62d584c85a4193f8a279598609bb6af760b17c1906020015b60405180910390a150565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff166114e95760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b038216156115d8576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa15801561155e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115829190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906115d65760405162461bcd60e51b8152600401610c0a9190614b62565b505b60006115e43388610f8f565b91505080156040518060400160405280600781526020017f4c5a3130303130000000000000000000000000000000000000000000000000008152509061163d5760405162461bcd60e51b8152600401610c0a9190614b62565b50846000036116955733600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155611742565b60408051808201909152600781527f4c5a31303030300000000000000000000000000000000000000000000000000060208201524286116116e95760405162461bcd60e51b8152600401610c0a9190614b62565b5033600090815260086020908152604080832063ffffffff8b168452909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161781556001018590555b6040805133815263ffffffff891660208201526001600160a01b038816818301526060810187905290517f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e9181900360800190a150505050505050565b63ffffffff81166000908152600960205260408120546001600160a01b0316158015906117e9575063ffffffff82166000908152600a60205260409020546001600160a01b031615155b92915050565b6117f7613cb5565b6118016000613d0f565b565b336000908152600c602090815260408083206001600160a01b03881684528252808320868452825291829020548251808401909352600783527f4c5a38303030300000000000000000000000000000000000000000000000000091830191909152156118825760405162461bcd60e51b8152600401610c0a9190614b62565b508181604051611893929190615352565b60408051918290038220336000818152600c60209081528482206001600160a01b038b1683528152848220898352905292909220557f7c0503be82d6ab0d4ea200b69f9930b82aec3c92ed138ed1a28f60cd9c3626db916118fc919087908790879087906153ab565b60405180910390a150505050565b6040805180820190915260008082526020820152831561198457600e5460408051808201909152600781527f4c5a4430303032000000000000000000000000000000000000000000000000006020820152906001600160a01b03166119825760405162461bcd60e51b8152600401610c0a9190614b62565b505b60006119908989612b48565b9050600060405180606001604052808b6001600160a01b031681526020018a63ffffffff16815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517f07d7b2f90000000000000000000000000000000000000000000000000000000081529091506001600160a01b038316906307d7b2f990611a409084908a908a908a906004016153de565b6040805180830381865afa158015611a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a809190615489565b9a9950505050505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611ae657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ac8575b5050505050905090565b6000838383604051602001611b0793929190615111565b6040516020818303038152906040529050611b2385338361387c565b507f2d05fd3bd2a2620dfaf6174f2083d54fbfd9106a4ee93c81238ea5a5f731aede8533604051611b55929190615169565b60405180910390a15050505050565b611b6c614751565b611b796020850185614bd1565b336001600d54146040518060400160405280600781526020017f4c5a33303030310000000000000000000000000000000000000000000000000081525090611bd45760405162461bcd60e51b8152600401610c0a9190614b62565b5077ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600d5533600080611c11838a8a613d77565b91509150611c4a7f0000000000000000000000000000000000000000000000000000000000000000848460400151600001518a85614009565b600e54604083015160200151611c6d916001600160a01b03169085908b85614009565b7fa9c376cdc544fbd06d0cec76dc479eefc52962efcff2355b87cab1333fd352f28260400151604051611ca09190614cde565b60405180910390a1506001600d55979650505050505050565b6000806000611cc88686610f8f565b91509150816001600160a01b0316846001600160a01b031603611cf0576001925050506110c2565b600081611d25576001600160a01b038716600090815260086020908152604080832063ffffffff8a1684529091529020611d3b565b63ffffffff86166000908152600b602052604090205b6040805180820190915281546001600160a01b0390811680835260019093015460208301529092508616148015611d755750428160200151115b15611d8657600193505050506110c2565b5060009695505050505050565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915284919060ff16611e075760405162461bcd60e51b8152600401610c0a9190614b62565b506040517fd2d287f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063d2d287f090610c5d908690869033906004016150b6565b6001600160a01b038316600090815260016020908152604080832063ffffffff86168452825280832084845290915281205467ffffffffffffffff165b611e9d85858584600101613125565b156110bf57600101611e8e565b611eb2613cb5565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff16611f265760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b03821615612015576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015611f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbf9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906120135760405162461bcd60e51b8152600401610c0a9190614b62565b505b63ffffffff86166000908152600a6020908152604091829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190871682036120915760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff87166000818152600a602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b8116918217909255835194855290851691840191909152908201527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea59060600160405180910390a184156121d45763ffffffff87166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617815561217686426154d4565b600182018190556040805163ffffffff8b1681526001600160a01b0385166020820152908101919091527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8906060015b60405180910390a150612214565b63ffffffff87166000908152600b6020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b50505050505050565b612225613cb5565b6001600160a01b03831661226f576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612269573d6000803e3d6000fd5b50505050565b6122836001600160a01b03841683836140dd565b505050565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915281205481906122d19067ffffffffffffffff1660016154e7565b90506122df818686866141a4565b95945050505050565b6122f0613cb5565b6001600160a01b038116600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915282919060ff166123645760405162461bcd60e51b8152600401610c0a9190614b62565b5081836001600160a01b03821615612453576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156123d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fd9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906124515760405162461bcd60e51b8152600401610c0a9190614b62565b505b63ffffffff8516600090815260096020908152604091829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190861682036124cf5760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff861660008181526009602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a169081179091558251938452908301527f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f591015b60405180910390a1505050505050565b612562614751565b61256f6020850185614bd1565b336001600d54146040518060400160405280600781526020017f4c5a333030303100000000000000000000000000000000000000000000000000815250906125ca5760405162461bcd60e51b8152600401610c0a9190614b62565b5077ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600d5533600080612607838a8a613d77565b91509150611c4a82604001516000015134838a61425c565b6001600160a01b038416600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915285919060ff166126935760405162461bcd60e51b8152600401610c0a9190614b62565b506040517fb8007ff60000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063b8007ff6906126df903390889088908890600401615508565b600060405180830381600087803b1580156126f957600080fd5b505af115801561270d573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038216600090815260056020526040902054829060ff168061274857506001600160a01b038116155b6040518060400160405280600781526020017f4c5a3130303032000000000000000000000000000000000000000000000000008152509061279c5760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b0382161561288b576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128359190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906128895760405162461bcd60e51b8152600401610c0a9190614b62565b505b33600090815260076020818152604080842063ffffffff8b1685528252928390205483518085019094529183527f4c5a313030303500000000000000000000000000000000000000000000000000908301526001600160a01b0390811691908716820361290b5760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260076020908152604080832063ffffffff8c168085529083529281902080546001600160a01b038c81167fffffffffffffffffffffffff00000000000000000000000000000000000000009092168217909255825195865292850193909352918416838301526060830152517fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa9181900360800190a18415612af5576001600160a01b038116158015906129ce57506001600160a01b03861615155b6040518060400160405280600781526020017f4c5a31303031300000000000000000000000000000000000000000000000000081525090612a225760405162461bcd60e51b8152600401610c0a9190614b62565b5060006040518060400160405280836001600160a01b031681526020018742612a4b91906154d4565b905233600081815260086020908152604080832063ffffffff8e1680855290835292819020855181547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039182161782558684015160019092018290558251958652928501939093529086169083015260608201529091507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e906080016121c6565b33600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001681556001015550505050505050565b6001600160a01b03808316600090815260066020908152604080832063ffffffff8616845290915290205416806117e9575063ffffffff8116600090815260096020908152604091829020548251808401909352600783527f4c5a443030303300000000000000000000000000000000000000000000000000918301919091526001600160a01b03169081612bf05760405162461bcd60e51b8152600401610c0a9190614b62565b5092915050565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff16612c6b5760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b03821615612d5a576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d049190615300565b6040518060400160405280600781526020017f4c5a31303030380000000000000000000000000000000000000000000000000081525090612d585760405162461bcd60e51b8152600401610c0a9190614b62565b505b612d62613cb5565b83600003612dae5763ffffffff86166000908152600b6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155612e50565b60408051808201909152600781527f4c5a3130303030000000000000000000000000000000000000000000000000006020820152428511612e025760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff86166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387161781556001018490555b6040805163ffffffff881681526001600160a01b03871660208201529081018590527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f89060600161254a565b6001600160a01b038116600090815260056020526040902054819060ff1680612ecc57506001600160a01b038116155b6040518060400160405280600781526020017f4c5a31303030320000000000000000000000000000000000000000000000000081525090612f205760405162461bcd60e51b8152600401610c0a9190614b62565b5081836001600160a01b0382161561300f576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb99190615300565b6040518060400160405280600781526020017f4c5a3130303038000000000000000000000000000000000000000000000000008152509061300d5760405162461bcd60e51b8152600401610c0a9190614b62565b505b33600090815260066020908152604080832063ffffffff89168452825291829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190861682036130935760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260066020908152604080832063ffffffff8b168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b16908117909155815194855291840192909252908201527f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c9060600161254a565b6001600160a01b038416600090815260026020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff8516845290915290205415155b949350505050565b61317c613cb5565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd913d0cd0000000000000000000000000000000000000000000000000000000060048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156131f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321d9190615300565b6040518060400160405280600781526020017f4c5a433030303100000000000000000000000000000000000000000000000000815250906132715760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b038116600090815260056020908152604091829020548251808401909352600783527f4c5a3830303030000000000000000000000000000000000000000000000000009183019190915260ff16156132e45760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b038116600081815260056020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910161146a565b6133bc338484611e51565b6133c79060016154e7565b67ffffffffffffffff168167ffffffffffffffff16146040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906134315760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260016020908152604080832063ffffffff881680855290835281842087855283529281902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff8716908117909155815193845291830186905282019290925260608101919091527f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48906080016111d2565b6134dd613cb5565b6001600160a01b0381166135595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610c0a565b61356281613d0f565b50565b6001600160a01b038088166000908152600c60209081526040808320938a168352928152828220888352905281812054915190916060916135a99088908890615352565b60408051918290038220828201909152600782527f4c5a363030303000000000000000000000000000000000000000000000000000602083015282146136025760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b03808b166000908152600c60209081526040808320938d1683529281528282208b835290528181206001905590517fd0a102600000000000000000000000000000000000000000000000000000000090613674908d908c908c908c9033908d908d9060240161564e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506137095a6001600160a01b038c169034846144a0565b909450925050821561376a57604080516001600160a01b03808d1682528b166020820152908101899052606081018290523360808201527fe8de892dbb4fd705fc4c154fd784700f6f24789e8ffea6922947d082606887949060a001610d16565b6001600160a01b03808b166000908152600c60209081526040808320938d1683529281528282208b8352905220819055341561384357604051600090339034908381818185875af1925050503d80600081146137e2576040519150601f19603f3d011682016040523d82523d6000602084013e6137e7565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906138405760405162461bcd60e51b8152600401610c0a9190614b62565b50505b7f8054fc0b1a2df897569746b52a49553918b57ffcedcd0a35f0e8553d5ebba6768a8a8a843387604051610e0a969594939291906156a2565b60008061388c6020860186614bd1565b9050602085013560006138a560608801604089016156ee565b6001600160a01b038716600090815260016020908152604080832063ffffffff88168452825280832086845290915290205490915067ffffffffffffffff9081169082168110156139de57600181015b8267ffffffffffffffff168167ffffffffffffffff16116139795761391c88868684613125565b6040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906139705760405162461bcd60e51b8152600401610c0a9190614b62565b506001016138f5565b506001600160a01b038716600090815260016020908152604080832063ffffffff881684528252808320868452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161790555b85516020808801919091206001600160a01b038916600090815260028352604080822063ffffffff891683528452808220878352845280822067ffffffffffffffff87168352845290819020548151808301909252600782527f4c5a36303030300000000000000000000000000000000000000000000000000093820193909352909650818714613a825760405162461bcd60e51b8152600401610c0a9190614b62565b5050506001600160a01b03909516600090815260026020908152604080832063ffffffff909516835293815283822092825291825282812067ffffffffffffffff909616815294905283209290925550919050565b6000606060006313137d6560e01b8a898989338a8a604051602401613b02979695949392919061570b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050613b975a6001600160a01b038b169034846144a0565b909b909a5098505050505050505050565b6001600160a01b0382166000908152600260209081526040822083929091613bd290870187614bd1565b63ffffffff1663ffffffff1681526020019081526020016000206000856020013581526020019081526020016000206000856040016020810190613c1691906156ee565b67ffffffffffffffff168152602081019190915260400160002055505050565b6001600160a01b03811660009081526001602090815260408220908290613c5f90860186614bd1565b63ffffffff16815260208082019290925260409081016000908120868401358252909252908190205467ffffffffffffffff1690613ca390606086019086016156ee565b67ffffffffffffffff16119392505050565b6000546001600160a01b031633146118015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c0a565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613d7f614751565b600080613e0886613d936020880188614bd1565b6001600160a01b0391909116600090815260036020908152604080832063ffffffff949094168352928152828220818a0135835290522080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008116600167ffffffffffffffff928316019182161790915590565b90506000613e1d876109466020890189614bd1565b905060006040518060e001604052808467ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001896001600160a01b03168152602001886000016020810190613e8a9190614bd1565b63ffffffff16815260200188602001358152602001613ec1858b8b6000016020810190613eb79190614bd1565b8c602001356141a4565b8152602001613ed360408a018a615754565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293508815159250905080806001600160a01b038616634389e58f86613f3160608f018f615754565b886040518563ffffffff1660e01b8152600401613f5194939291906157b9565b6000604051808303816000875af1158015613f70573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613fb69190810190615861565b9250925092507f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f828288604051613fef93929190615929565b60405180910390a150909a93995092975050505050505050565b82156140d65760408051808201909152600781527f4c5a44303030320000000000000000000000000000000000000000000000000060208201526001600160a01b03861661406a5760405162461bcd60e51b8152600401610c0a9190614b62565b5060408051808201909152600781527f4c5a3130303033000000000000000000000000000000000000000000000000006020820152828411156140c05760405162461bcd60e51b8152600401610c0a9190614b62565b506140d66001600160a01b038616858386614505565b5050505050565b6040516001600160a01b0383166024820152604481018290526122839084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614556565b604080517fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060e090811b821660208401526001600160a01b038716602484015285901b166044820152604880820184905282518083039091018152606882019092526000919061423b9087908390608801615968565b60405160208183030381529060405280519060200120915050949350505050565b60408051808201909152600781527f4c5a44303030310000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156142d85760405162461bcd60e51b8152600401610c0a9190614b62565b5060408051808201909152600781527f4c5a31303030330000000000000000000000000000000000000000000000000060208201528385111561432e5760405162461bcd60e51b8152600401610c0a9190614b62565b5083156143e3576000826001600160a01b03168560405160006040518083038185875af1925050503d8060008114614382576040519150601f19603f3d011682016040523d82523d6000602084013e614387565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906143e05760405162461bcd60e51b8152600401610c0a9190614b62565b50505b82841015612269576000816001600160a01b031685850360405160006040518083038185875af1925050503d806000811461443a576040519150601f19603f3d011682016040523d82523d6000602084013e61443f565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906144985760405162461bcd60e51b8152600401610c0a9190614b62565b505050505050565b60408051606480825260a0820190925260009160609183918291829082602082018180368337019050509050600080885160208a018b8e8ef192503d9350818411156144ea578193505b838152836000602083013e9199919850909650505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526122699085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401614122565b60006145ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661463e9092919063ffffffff16565b90508051600014806145cc5750808060200190518101906145cc9190615300565b6122835760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c0a565b60606110bf848460008585600080866001600160a01b0316858760405161466591906159b3565b60006040518083038185875af1925050503d80600081146146a2576040519150601f19603f3d011682016040523d82523d6000602084013e6146a7565b606091505b50915091506113f5878383876060831561472257825160000361471b576001600160a01b0385163b61471b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c0a565b508161316c565b61316c83838151156147375781518083602001fd5b8060405162461bcd60e51b8152600401610c0a9190614b62565b604051806060016040528060008019168152602001600067ffffffffffffffff168152602001614794604051806040016040528060008152602001600081525090565b905290565b6001600160a01b038116811461356257600080fd5b60008083601f8401126147c057600080fd5b50813567ffffffffffffffff8111156147d857600080fd5b6020830191508360208260051b850101111561104057600080fd5b60008060006040848603121561480857600080fd5b833561481381614799565b9250602084013567ffffffffffffffff81111561482f57600080fd5b61483b868287016147ae565b9497909650939450505050565b60006060828403121561485a57600080fd5b50919050565b60008083601f84011261487257600080fd5b50813567ffffffffffffffff81111561488a57600080fd5b60208301915083602082850101111561104057600080fd5b600080600080600080600060e0888a0312156148bd57600080fd5b6148c78989614848565b965060608801356148d781614799565b95506080880135945060a088013567ffffffffffffffff808211156148fb57600080fd5b6149078b838c01614860565b909650945060c08a013591508082111561492057600080fd5b5061492d8a828b01614860565b989b979a50959850939692959293505050565b60005b8381101561495b578181015183820152602001614943565b50506000910152565b6000815180845261497c816020860160208601614940565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b82151581526040602082015260006110bf6040830184614964565b803563ffffffff811681146149dd57600080fd5b919050565b600080600080608085870312156149f857600080fd5b8435614a0381614799565b93506020850135614a1381614799565b9250614a21604086016149c9565b9150614a2f606086016149c9565b905092959194509250565b604081526000614a4d6040830185614964565b905082151560208301529392505050565b60008060408385031215614a7157600080fd5b8235614a7c81614799565b9150614a8a602084016149c9565b90509250929050565b600080600060a08486031215614aa857600080fd5b614ab28585614848565b92506060840135614ac281614799565b91506080840135614ad281614799565b809150509250925092565b600080600060a08486031215614af257600080fd5b614afc8585614848565b92506060840135614b0c81614799565b929592945050506080919091013590565b600080600060608486031215614b3257600080fd5b8335614b3d81614799565b9250614b4b602085016149c9565b9150614b59604085016149c9565b90509250925092565b6020815260006110c26020830184614964565b600060208284031215614b8757600080fd5b81356110c281614799565b600080600060608486031215614ba757600080fd5b614bb0846149c9565b92506020840135614bc081614799565b929592945050506040919091013590565b600060208284031215614be357600080fd5b6110c2826149c9565b60008060008060608587031215614c0257600080fd5b8435614c0d81614799565b935060208501359250604085013567ffffffffffffffff811115614c3057600080fd5b614c3c87828801614860565b95989497509550505050565b801515811461356257600080fd5b600080600080600080600060a0888a031215614c7157600080fd5b8735614c7c81614799565b9650614c8a602089016149c9565b9550604088013567ffffffffffffffff80821115614ca757600080fd5b614cb38b838c01614860565b909750955060608a01359150614cc882614c48565b9093506080890135908082111561492057600080fd5b8151815260208083015190820152604081016117e9565b6020808252825182820181905260009190848201906040850190845b81811015614d365783516001600160a01b031683529284019291840191600101614d11565b50909695505050505050565b60008060008060a08587031215614d5857600080fd5b614d628686614848565b935060608501359250608085013567ffffffffffffffff811115614c3057600080fd5b60006080828403121561485a57600080fd5b600080600060608486031215614dac57600080fd5b833567ffffffffffffffff811115614dc357600080fd5b614dcf86828701614d85565b9660208601359650604090950135949350505050565b60006080820190508251825267ffffffffffffffff60208401511660208301526040830151612bf0604084018280518252602090810151910152565b600080600060608486031215614e3657600080fd5b8335614e4181614799565b9250614e4f602085016149c9565b9150604084013590509250925092565b600080600060608486031215614e7457600080fd5b8335614bb081614799565b600080600060608486031215614e9457600080fd5b8335614e9f81614799565b9250614ead602085016149c9565b91506040840135614ad281614799565b60008060408385031215614ed057600080fd5b614ed9836149c9565b91506020830135614ee981614799565b809150509250929050565b600080600060608486031215614f0957600080fd5b833567ffffffffffffffff811115614f2057600080fd5b614f2c86828701614d85565b935050602084013591506040840135614ad281614799565b60008060008060608587031215614f5a57600080fd5b8435614f6581614799565b9350614f73602086016149c9565b9250604085013567ffffffffffffffff811115614f8f57600080fd5b614c3c878288016147ae565b67ffffffffffffffff8116811461356257600080fd5b60008060008060808587031215614fc757600080fd5b8435614fd281614799565b9350614fe0602086016149c9565b9250604085013591506060850135614ff781614f9b565b939692955090935050565b60008060006060848603121561501757600080fd5b615020846149c9565b9250602084013591506040840135614ad281614f9b565b600080600080600080600060a0888a03121561505257600080fd5b873561505d81614799565b9650602088013561506d81614799565b955060408801359450606088013567ffffffffffffffff8082111561509157600080fd5b61509d8b838c01614860565b909650945060808a013591508082111561492057600080fd5b6040808252810183905260008460608301825b868110156150f45763ffffffff6150df846149c9565b168252602092830192909101906001016150c9565b5080925050506001600160a01b0383166020830152949350505050565b838152818360208301376000910160200190815292915050565b63ffffffff615139826149c9565b16825260208101356020830152604081013561515481614f9b565b67ffffffffffffffff81166040840152505050565b60808101615177828561512b565b6001600160a01b03831660608301529392505050565b615197818561512b565b6001600160a01b038316606082015260a0608082015260006122df60a0830184614964565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126151fc57600080fd5b815167ffffffffffffffff80821115615217576152176151bc565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561525d5761525d6151bc565b8160405283815286602085880101111561527657600080fd5b615287846020830160208901614940565b9695505050505050565b600080604083850312156152a457600080fd5b825167ffffffffffffffff8111156152bb57600080fd5b6152c7858286016151eb565b9250506020830151614ee981614c48565b60a081016152e6828661512b565b6001600160a01b0393909316606082015260800152919050565b60006020828403121561531257600080fd5b81516110c281614c48565b60006020828403121561532f57600080fd5b815167ffffffffffffffff81111561534657600080fd5b61316c848285016151eb565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60006001600160a01b038088168352808716602084015250846040830152608060608301526113f5608083018486615362565b606081526001600160a01b03855116606082015263ffffffff602086015116608082015260006040860151606060a084015261541d60c0840182614964565b9050851515602084015282810360408401526113f5818587615362565b60006040828403121561544c57600080fd5b6040516040810181811067ffffffffffffffff8211171561546f5761546f6151bc565b604052825181526020928301519281019290925250919050565b60006040828403121561549b57600080fd5b6110c2838361543a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156117e9576117e96154a5565b67ffffffffffffffff818116838216019080821115612bf057612bf06154a5565b6000606082016001600160a01b0387168352602063ffffffff8088168286015260406060818701528387855260808701905060808860051b88010194508860005b8981101561563d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8089880301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c36030181126155aa57600080fd5b8b01856155b6826149c9565b168852868101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181126155ed57600080fd5b01868101903567ffffffffffffffff81111561560857600080fd5b80360382131561561757600080fd5b85888a0152615629868a018284615362565b985050509185019190850190600101615549565b50949b9a5050505050505050505050565b60006001600160a01b03808a16835288602084015260a0604084015261567860a08401888a615362565b81871660608501528381036080850152615693818688615362565b9b9a5050505050505050505050565b60006001600160a01b038089168352808816602084015286604084015285606084015280851660808401525060c060a08301526156e260c0830184614964565b98975050505050505050565b60006020828403121561570057600080fd5b81356110c281614f9b565b615715818961512b565b86606082015260e06080820152600061573260e083018789615362565b6001600160a01b03861660a084015282810360c0840152611a80818587615362565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261578957600080fd5b83018035915067ffffffffffffffff8211156157a457600080fd5b60200191503681900382131561104057600080fd5b6060815267ffffffffffffffff855116606082015263ffffffff60208601511660808201526001600160a01b0360408601511660a08201526000606086015161580a60c084018263ffffffff169052565b50608086015160e083015260a086015161010083015260c086015160e061012084015261583b610140840182614964565b90508281036020840152615850818688615362565b9150506122df604083018415159052565b600080600083850360c081121561587757600080fd5b608081121561588557600080fd5b506040516060810167ffffffffffffffff82821081831117156158aa576158aa6151bc565b8160405286518352602087015191506158c282614f9b565b8160208401526158d5886040890161543a565b60408401526080870151929550808311156158ef57600080fd5b6158fb888489016151eb565b945060a087015192508083111561591157600080fd5b505061591f868287016151eb565b9150509250925092565b60608152600061593c6060830186614964565b828103602084015261594e8186614964565b9150506001600160a01b0383166040830152949350505050565b7fffffffffffffffff0000000000000000000000000000000000000000000000008360c01b168152600082516159a5816008850160208701614940565b919091016008019392505050565b600082516159c5818460208701614940565b919091019291505056fea2646970667358221220af5a3fb6743a4933687c3a6cc5d20e4bdb03f715c813cfdcb754d94d2d678e6664736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106103295760003560e01c80639c9dd91d116101a5578063c9fc7bcd116100ec578063e8964e8111610095578063f2fde38b1161006f578063f2fde38b14610af9578063f405c85914610b19578063f64be4c714610b2c578063f936112b14610b6257600080fd5b8063e8964e8114610a6e578063eaeacd6314610a8e578063ef667aa114610aae57600080fd5b8063dc93c8a2116100c6578063dc93c8a2146109e2578063e16f964d14610a2e578063e361b59c14610a4e57600080fd5b8063c9fc7bcd1461094b578063d4b4ec8f14610992578063dc706a62146109b257600080fd5b8063aafe5e071161014e578063b8007ff611610128578063b8007ff6146108eb578063b8849ac91461090b578063b96a277f1461092b57600080fd5b8063aafe5e0714610898578063aafea312146108b8578063aca1b45a146108d857600080fd5b8063a0dd43fc1161017f578063a0dd43fc14610838578063a718531b14610858578063a7229fd91461087857600080fd5b80639c9dd91d146107ac5780639d7f9775146107f85780639e7fffcc1461081857600080fd5b80636750cd4c1161027457806379624ca91161021d5780639132e5c3116101f75780639132e5c3146106dc578063965183d4146106fe5780639731526b1461071e5780639c6d73401461074b57600080fd5b806379624ca91461067857806383c47559146106915780638da5cb5b146106be57600080fd5b8063715018a61161024e578063715018a61461060f5780637331809114610624578063754d3b9c1461065857600080fd5b80636750cd4c1461055a5780636e83f5bb1461057a5780636f50a803146105d957600080fd5b8063416ecebf116102d657806351c85b6b116102b057806351c85b6b146104ed57806352d3b5001461051a57806366bf43d61461053a57600080fd5b8063416ecebf14610454578063418ba3511461049d57806345c6dcc4146104cd57600080fd5b806314f651a91161030757806314f651a9146103ae5780632b3197b9146103e7578063402f84681461041557600080fd5b80630678327f1461032e57806307b9ca7c146103505780630c0c389e1461038d575b600080fd5b34801561033a57600080fd5b5061034e6103493660046147f3565b610b96565b005b34801561035c57600080fd5b50600e54610370906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103a061039b3660046148a2565b610c95565b6040516103849291906149ae565b3480156103ba57600080fd5b506103c3610e20565b6040805163ffffffff90931683526001600160a01b03909116602083015201610384565b3480156103f357600080fd5b506104076104023660046149e2565b610e4f565b604051610384929190614a3a565b34801561042157600080fd5b50610435610430366004614a5e565b610f8f565b604080516001600160a01b039093168352901515602083015201610384565b34801561046057600080fd5b506104887f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610384565b3480156104a957600080fd5b506104bd6104b8366004614a93565b611047565b6040519015158152602001610384565b3480156104d957600080fd5b5061034e6104e8366004614add565b6110c9565b3480156104f957600080fd5b5061050d610508366004614b1d565b6111df565b6040516103849190614b62565b34801561052657600080fd5b5061034e610535366004614b75565b611400565b34801561054657600080fd5b5061034e610555366004614b92565b611475565b34801561056657600080fd5b506104bd610575366004614bd1565b61179f565b34801561058657600080fd5b506105ba610595366004614bd1565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610384565b3480156105e557600080fd5b506103706105f4366004614bd1565b600a602052600090815260409020546001600160a01b031681565b34801561061b57600080fd5b5061034e6117ef565b34801561063057600080fd5b506103707f000000000000000000000000000000000000000000000000000000000000000081565b34801561066457600080fd5b5061034e610673366004614bec565b611803565b34801561068457600080fd5b50600d54600114156104bd565b34801561069d57600080fd5b506106b16106ac366004614c56565b61190a565b6040516103849190614cde565b3480156106ca57600080fd5b506000546001600160a01b0316610370565b3480156106e857600080fd5b506106f1611a8e565b6040516103849190614cf5565b34801561070a57600080fd5b5061034e610719366004614d42565b611af0565b34801561072a57600080fd5b5061073e610739366004614d97565b611b64565b6040516103849190614de5565b34801561075757600080fd5b50610793610766366004614e21565b600360209081526000938452604080852082529284528284209052825290205467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610384565b3480156107b857600080fd5b506107ea6107c7366004614e5f565b600c60209081526000938452604080852082529284528284209052825290205481565b604051908152602001610384565b34801561080457600080fd5b506104bd610813366004614e7f565b611cb9565b34801561082457600080fd5b5061034e6108333660046147f3565b611d93565b34801561084457600080fd5b50610793610853366004614e21565b611e51565b34801561086457600080fd5b5061034e610873366004614b92565b611eaa565b34801561088457600080fd5b5061034e610893366004614e5f565b61221d565b3480156108a457600080fd5b506107ea6108b3366004614e21565b612288565b3480156108c457600080fd5b5061034e6108d3366004614ebd565b6122e8565b61073e6108e6366004614ef4565b61255a565b3480156108f757600080fd5b5061034e610906366004614f44565b61261f565b34801561091757600080fd5b5061034e610926366004614b92565b612718565b34801561093757600080fd5b50610370610946366004614a5e565b612b48565b34801561095757600080fd5b506107ea610966366004614fb1565b600260209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561099e57600080fd5b5061034e6109ad366004614b92565b612bf7565b3480156109be57600080fd5b506104bd6109cd366004614b75565b60056020526000908152604090205460ff1681565b3480156109ee57600080fd5b506104bd6109fd366004614a5e565b6001600160a01b03918216600090815260066020908152604080832063ffffffff9490941683529290522054161590565b348015610a3a57600080fd5b5061034e610a49366004614ebd565b612e9c565b348015610a5a57600080fd5b506104bd610a69366004614fb1565b613125565b348015610a7a57600080fd5b5061034e610a89366004614b75565b613174565b348015610a9a57600080fd5b5061034e610aa9366004615002565b6133b1565b348015610aba57600080fd5b506105ba610ac9366004614a5e565b6008602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b348015610b0557600080fd5b5061034e610b14366004614b75565b6134d5565b6103a0610b27366004615037565b613565565b348015610b3857600080fd5b50610370610b47366004614bd1565b6009602052600090815260409020546001600160a01b031681565b348015610b6e57600080fd5b506103707f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915284919060ff16610c135760405162461bcd60e51b8152600401610c0a9190614b62565b60405180910390fd5b506040517f1c63e3b60000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c63e3b690610c5d908690869033906004016150b6565b600060405180830381600087803b158015610c7757600080fd5b505af1158015610c8b573d6000803e3d6000fd5b5050505050505050565b600060606000610cc98a8a8a8a8a604051602001610cb593929190615111565b60405160208183030381529060405261387c565b9050610cda8a8a8a8a8a8a8a613ad7565b90935091508215610d23577f2d05fd3bd2a2620dfaf6174f2083d54fbfd9106a4ee93c81238ea5a5f731aede8a8a604051610d16929190615169565b60405180910390a1610e13565b610d2e8a8a83613ba8565b3415610dd757604051600090339034908381818185875af1925050503d8060008114610d76576040519150601f19603f3d011682016040523d82523d6000602084013e610d7b565b606091505b50509050806040518060400160405280600781526020017f4c5a33303030300000000000000000000000000000000000000000000000000081525090610dd45760405162461bcd60e51b8152600401610c0a9190614b62565b50505b7faf073b1a1dac00a30ce25289039781005b496fbf28cd561b69a2359f1dd07ed98a8a84604051610e0a9392919061518d565b60405180910390a15b5097509795505050505050565b600080610e30600d546001141590565b610e3c57600080610e47565b60a0600d54901c600d545b915091509091565b6001600160a01b0383166000908152600560209081526040808320548151808301909252600782527f4c5a313030303100000000000000000000000000000000000000000000000000928201929092526060929186919060ff16610ec65760405162461bcd60e51b8152600401610c0a9190614b62565b506040517f9c33abf700000000000000000000000000000000000000000000000000000000815263ffffffff80871660048301526001600160a01b0389811660248401529086166044830152871690639c33abf790606401600060405180830381865afa158015610f3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f819190810190615291565b925092505094509492505050565b6001600160a01b03808316600090815260076020908152604080832063ffffffff8616845290915281205490911690816110405763ffffffff83166000908152600a6020908152604091829020548251808401909352600783527f4c5a443030303300000000000000000000000000000000000000000000000000918301919091526001600160a01b031692508261103a5760405162461bcd60e51b8152600401610c0a9190614b62565b50600190505b9250929050565b60006110608261105a6020870187614bd1565b85611cb9565b6040518060400160405280600781526020017f4c5a353030303000000000000000000000000000000000000000000000000000815250906110b45760405162461bcd60e51b8152600401610c0a9190614b62565b506110bf8483613c36565b90505b9392505050565b6110e0826110da6020860186614bd1565b33611cb9565b6040518060400160405280600781526020017f4c5a353030303000000000000000000000000000000000000000000000000000815250906111345760405162461bcd60e51b8152600401610c0a9190614b62565b5061113f8383613c36565b6040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906111935760405162461bcd60e51b8152600401610c0a9190614b62565b5061119f838383613ba8565b7f3015b766371c496aa0ecdb272f6bf2fd695f317932333ad7a090f392a7c0ce398383836040516111d2939291906152d8565b60405180910390a1505050565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a31303030310000000000000000000000000000000000000000000000000091830191909152606091859160ff166112555760405162461bcd60e51b8152600401610c0a9190614b62565b5084846001600160a01b03821615611344576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906113425760405162461bcd60e51b8152600401610c0a9190614b62565b505b6040517f690c655500000000000000000000000000000000000000000000000000000000815263ffffffff8088166004830152861660248201526001600160a01b0388169063690c655590604401600060405180830381865afa1580156113af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113f5919081019061531d565b979650505050505050565b611408613cb5565b600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527ff66b6c5fcba13210e695e203c62d584c85a4193f8a279598609bb6af760b17c1906020015b60405180910390a150565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff166114e95760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b038216156115d8576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa15801561155e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115829190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906115d65760405162461bcd60e51b8152600401610c0a9190614b62565b505b60006115e43388610f8f565b91505080156040518060400160405280600781526020017f4c5a3130303130000000000000000000000000000000000000000000000000008152509061163d5760405162461bcd60e51b8152600401610c0a9190614b62565b50846000036116955733600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155611742565b60408051808201909152600781527f4c5a31303030300000000000000000000000000000000000000000000000000060208201524286116116e95760405162461bcd60e51b8152600401610c0a9190614b62565b5033600090815260086020908152604080832063ffffffff8b168452909152902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161781556001018590555b6040805133815263ffffffff891660208201526001600160a01b038816818301526060810187905290517f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e9181900360800190a150505050505050565b63ffffffff81166000908152600960205260408120546001600160a01b0316158015906117e9575063ffffffff82166000908152600a60205260409020546001600160a01b031615155b92915050565b6117f7613cb5565b6118016000613d0f565b565b336000908152600c602090815260408083206001600160a01b03881684528252808320868452825291829020548251808401909352600783527f4c5a38303030300000000000000000000000000000000000000000000000000091830191909152156118825760405162461bcd60e51b8152600401610c0a9190614b62565b508181604051611893929190615352565b60408051918290038220336000818152600c60209081528482206001600160a01b038b1683528152848220898352905292909220557f7c0503be82d6ab0d4ea200b69f9930b82aec3c92ed138ed1a28f60cd9c3626db916118fc919087908790879087906153ab565b60405180910390a150505050565b6040805180820190915260008082526020820152831561198457600e5460408051808201909152600781527f4c5a4430303032000000000000000000000000000000000000000000000000006020820152906001600160a01b03166119825760405162461bcd60e51b8152600401610c0a9190614b62565b505b60006119908989612b48565b9050600060405180606001604052808b6001600160a01b031681526020018a63ffffffff16815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040517f07d7b2f90000000000000000000000000000000000000000000000000000000081529091506001600160a01b038316906307d7b2f990611a409084908a908a908a906004016153de565b6040805180830381865afa158015611a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a809190615489565b9a9950505050505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611ae657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ac8575b5050505050905090565b6000838383604051602001611b0793929190615111565b6040516020818303038152906040529050611b2385338361387c565b507f2d05fd3bd2a2620dfaf6174f2083d54fbfd9106a4ee93c81238ea5a5f731aede8533604051611b55929190615169565b60405180910390a15050505050565b611b6c614751565b611b796020850185614bd1565b336001600d54146040518060400160405280600781526020017f4c5a33303030310000000000000000000000000000000000000000000000000081525090611bd45760405162461bcd60e51b8152600401610c0a9190614b62565b5077ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600d5533600080611c11838a8a613d77565b91509150611c4a7f0000000000000000000000000000000000000000000000000000000000000000848460400151600001518a85614009565b600e54604083015160200151611c6d916001600160a01b03169085908b85614009565b7fa9c376cdc544fbd06d0cec76dc479eefc52962efcff2355b87cab1333fd352f28260400151604051611ca09190614cde565b60405180910390a1506001600d55979650505050505050565b6000806000611cc88686610f8f565b91509150816001600160a01b0316846001600160a01b031603611cf0576001925050506110c2565b600081611d25576001600160a01b038716600090815260086020908152604080832063ffffffff8a1684529091529020611d3b565b63ffffffff86166000908152600b602052604090205b6040805180820190915281546001600160a01b0390811680835260019093015460208301529092508616148015611d755750428160200151115b15611d8657600193505050506110c2565b5060009695505050505050565b6001600160a01b038316600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915284919060ff16611e075760405162461bcd60e51b8152600401610c0a9190614b62565b506040517fd2d287f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063d2d287f090610c5d908690869033906004016150b6565b6001600160a01b038316600090815260016020908152604080832063ffffffff86168452825280832084845290915281205467ffffffffffffffff165b611e9d85858584600101613125565b156110bf57600101611e8e565b611eb2613cb5565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff16611f265760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b03821615612015576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015611f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbf9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906120135760405162461bcd60e51b8152600401610c0a9190614b62565b505b63ffffffff86166000908152600a6020908152604091829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190871682036120915760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff87166000818152600a602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b8116918217909255835194855290851691840191909152908201527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea59060600160405180910390a184156121d45763ffffffff87166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831617815561217686426154d4565b600182018190556040805163ffffffff8b1681526001600160a01b0385166020820152908101919091527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8906060015b60405180910390a150612214565b63ffffffff87166000908152600b6020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101555b50505050505050565b612225613cb5565b6001600160a01b03831661226f576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612269573d6000803e3d6000fd5b50505050565b6122836001600160a01b03841683836140dd565b505050565b6001600160a01b038316600090815260036020908152604080832063ffffffff86168452825280832084845290915281205481906122d19067ffffffffffffffff1660016154e7565b90506122df818686866141a4565b95945050505050565b6122f0613cb5565b6001600160a01b038116600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915282919060ff166123645760405162461bcd60e51b8152600401610c0a9190614b62565b5081836001600160a01b03821615612453576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa1580156123d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fd9190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906124515760405162461bcd60e51b8152600401610c0a9190614b62565b505b63ffffffff8516600090815260096020908152604091829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190861682036124cf5760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff861660008181526009602090815260409182902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a169081179091558251938452908301527f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f591015b60405180910390a1505050505050565b612562614751565b61256f6020850185614bd1565b336001600d54146040518060400160405280600781526020017f4c5a333030303100000000000000000000000000000000000000000000000000815250906125ca5760405162461bcd60e51b8152600401610c0a9190614b62565b5077ffffffff000000000000000000000000000000000000000060a083901b166001600160a01b03821617600d5533600080612607838a8a613d77565b91509150611c4a82604001516000015134838a61425c565b6001600160a01b038416600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915285919060ff166126935760405162461bcd60e51b8152600401610c0a9190614b62565b506040517fb8007ff60000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063b8007ff6906126df903390889088908890600401615508565b600060405180830381600087803b1580156126f957600080fd5b505af115801561270d573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038216600090815260056020526040902054829060ff168061274857506001600160a01b038116155b6040518060400160405280600781526020017f4c5a3130303032000000000000000000000000000000000000000000000000008152509061279c5760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b0382161561288b576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128359190615300565b6040518060400160405280600781526020017f4c5a313030303800000000000000000000000000000000000000000000000000815250906128895760405162461bcd60e51b8152600401610c0a9190614b62565b505b33600090815260076020818152604080842063ffffffff8b1685528252928390205483518085019094529183527f4c5a313030303500000000000000000000000000000000000000000000000000908301526001600160a01b0390811691908716820361290b5760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260076020908152604080832063ffffffff8c168085529083529281902080546001600160a01b038c81167fffffffffffffffffffffffff00000000000000000000000000000000000000009092168217909255825195865292850193909352918416838301526060830152517fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa9181900360800190a18415612af5576001600160a01b038116158015906129ce57506001600160a01b03861615155b6040518060400160405280600781526020017f4c5a31303031300000000000000000000000000000000000000000000000000081525090612a225760405162461bcd60e51b8152600401610c0a9190614b62565b5060006040518060400160405280836001600160a01b031681526020018742612a4b91906154d4565b905233600081815260086020908152604080832063ffffffff8e1680855290835292819020855181547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039182161782558684015160019092018290558251958652928501939093529086169083015260608201529091507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e906080016121c6565b33600090815260086020908152604080832063ffffffff8b168452909152812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001681556001015550505050505050565b6001600160a01b03808316600090815260066020908152604080832063ffffffff8616845290915290205416806117e9575063ffffffff8116600090815260096020908152604091829020548251808401909352600783527f4c5a443030303300000000000000000000000000000000000000000000000000918301919091526001600160a01b03169081612bf05760405162461bcd60e51b8152600401610c0a9190614b62565b5092915050565b6001600160a01b038216600090815260056020908152604091829020548251808401909352600783527f4c5a3130303031000000000000000000000000000000000000000000000000009183019190915283919060ff16612c6b5760405162461bcd60e51b8152600401610c0a9190614b62565b5082846001600160a01b03821615612d5a576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d049190615300565b6040518060400160405280600781526020017f4c5a31303030380000000000000000000000000000000000000000000000000081525090612d585760405162461bcd60e51b8152600401610c0a9190614b62565b505b612d62613cb5565b83600003612dae5763ffffffff86166000908152600b6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560010155612e50565b60408051808201909152600781527f4c5a3130303030000000000000000000000000000000000000000000000000006020820152428511612e025760405162461bcd60e51b8152600401610c0a9190614b62565b5063ffffffff86166000908152600b6020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387161781556001018490555b6040805163ffffffff881681526001600160a01b03871660208201529081018590527f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f89060600161254a565b6001600160a01b038116600090815260056020526040902054819060ff1680612ecc57506001600160a01b038116155b6040518060400160405280600781526020017f4c5a31303030320000000000000000000000000000000000000000000000000081525090612f205760405162461bcd60e51b8152600401610c0a9190614b62565b5081836001600160a01b0382161561300f576040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff821660048201526001600160a01b03831690636750cd4c90602401602060405180830381865afa158015612f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb99190615300565b6040518060400160405280600781526020017f4c5a3130303038000000000000000000000000000000000000000000000000008152509061300d5760405162461bcd60e51b8152600401610c0a9190614b62565b505b33600090815260066020908152604080832063ffffffff89168452825291829020548251808401909352600783527f4c5a313030303500000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190861682036130935760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260066020908152604080832063ffffffff8b168085529083529281902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038b16908117909155815194855291840192909252908201527f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c9060600161254a565b6001600160a01b038416600090815260026020908152604080832063ffffffff871684528252808320858452825280832067ffffffffffffffff8516845290915290205415155b949350505050565b61317c613cb5565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd913d0cd0000000000000000000000000000000000000000000000000000000060048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156131f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321d9190615300565b6040518060400160405280600781526020017f4c5a433030303100000000000000000000000000000000000000000000000000815250906132715760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b038116600090815260056020908152604091829020548251808401909352600783527f4c5a3830303030000000000000000000000000000000000000000000000000009183019190915260ff16156132e45760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b038116600081815260056020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905590519182527f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5910161146a565b6133bc338484611e51565b6133c79060016154e7565b67ffffffffffffffff168167ffffffffffffffff16146040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906134315760405162461bcd60e51b8152600401610c0a9190614b62565b5033600081815260016020908152604080832063ffffffff881680855290835281842087855283529281902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff8716908117909155815193845291830186905282019290925260608101919091527f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48906080016111d2565b6134dd613cb5565b6001600160a01b0381166135595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610c0a565b61356281613d0f565b50565b6001600160a01b038088166000908152600c60209081526040808320938a168352928152828220888352905281812054915190916060916135a99088908890615352565b60408051918290038220828201909152600782527f4c5a363030303000000000000000000000000000000000000000000000000000602083015282146136025760405162461bcd60e51b8152600401610c0a9190614b62565b506001600160a01b03808b166000908152600c60209081526040808320938d1683529281528282208b835290528181206001905590517fd0a102600000000000000000000000000000000000000000000000000000000090613674908d908c908c908c9033908d908d9060240161564e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506137095a6001600160a01b038c169034846144a0565b909450925050821561376a57604080516001600160a01b03808d1682528b166020820152908101899052606081018290523360808201527fe8de892dbb4fd705fc4c154fd784700f6f24789e8ffea6922947d082606887949060a001610d16565b6001600160a01b03808b166000908152600c60209081526040808320938d1683529281528282208b8352905220819055341561384357604051600090339034908381818185875af1925050503d80600081146137e2576040519150601f19603f3d011682016040523d82523d6000602084013e6137e7565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906138405760405162461bcd60e51b8152600401610c0a9190614b62565b50505b7f8054fc0b1a2df897569746b52a49553918b57ffcedcd0a35f0e8553d5ebba6768a8a8a843387604051610e0a969594939291906156a2565b60008061388c6020860186614bd1565b9050602085013560006138a560608801604089016156ee565b6001600160a01b038716600090815260016020908152604080832063ffffffff88168452825280832086845290915290205490915067ffffffffffffffff9081169082168110156139de57600181015b8267ffffffffffffffff168167ffffffffffffffff16116139795761391c88868684613125565b6040518060400160405280600781526020017f4c5a313030303400000000000000000000000000000000000000000000000000815250906139705760405162461bcd60e51b8152600401610c0a9190614b62565b506001016138f5565b506001600160a01b038716600090815260016020908152604080832063ffffffff881684528252808320868452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161790555b85516020808801919091206001600160a01b038916600090815260028352604080822063ffffffff891683528452808220878352845280822067ffffffffffffffff87168352845290819020548151808301909252600782527f4c5a36303030300000000000000000000000000000000000000000000000000093820193909352909650818714613a825760405162461bcd60e51b8152600401610c0a9190614b62565b5050506001600160a01b03909516600090815260026020908152604080832063ffffffff909516835293815283822092825291825282812067ffffffffffffffff909616815294905283209290925550919050565b6000606060006313137d6560e01b8a898989338a8a604051602401613b02979695949392919061570b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050613b975a6001600160a01b038b169034846144a0565b909b909a5098505050505050505050565b6001600160a01b0382166000908152600260209081526040822083929091613bd290870187614bd1565b63ffffffff1663ffffffff1681526020019081526020016000206000856020013581526020019081526020016000206000856040016020810190613c1691906156ee565b67ffffffffffffffff168152602081019190915260400160002055505050565b6001600160a01b03811660009081526001602090815260408220908290613c5f90860186614bd1565b63ffffffff16815260208082019290925260409081016000908120868401358252909252908190205467ffffffffffffffff1690613ca390606086019086016156ee565b67ffffffffffffffff16119392505050565b6000546001600160a01b031633146118015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c0a565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613d7f614751565b600080613e0886613d936020880188614bd1565b6001600160a01b0391909116600090815260036020908152604080832063ffffffff949094168352928152828220818a0135835290522080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008116600167ffffffffffffffff928316019182161790915590565b90506000613e1d876109466020890189614bd1565b905060006040518060e001604052808467ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001896001600160a01b03168152602001886000016020810190613e8a9190614bd1565b63ffffffff16815260200188602001358152602001613ec1858b8b6000016020810190613eb79190614bd1565b8c602001356141a4565b8152602001613ed360408a018a615754565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293508815159250905080806001600160a01b038616634389e58f86613f3160608f018f615754565b886040518563ffffffff1660e01b8152600401613f5194939291906157b9565b6000604051808303816000875af1158015613f70573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052613fb69190810190615861565b9250925092507f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f828288604051613fef93929190615929565b60405180910390a150909a93995092975050505050505050565b82156140d65760408051808201909152600781527f4c5a44303030320000000000000000000000000000000000000000000000000060208201526001600160a01b03861661406a5760405162461bcd60e51b8152600401610c0a9190614b62565b5060408051808201909152600781527f4c5a3130303033000000000000000000000000000000000000000000000000006020820152828411156140c05760405162461bcd60e51b8152600401610c0a9190614b62565b506140d66001600160a01b038616858386614505565b5050505050565b6040516001600160a01b0383166024820152604481018290526122839084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614556565b604080517fffffffff000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060e090811b821660208401526001600160a01b038716602484015285901b166044820152604880820184905282518083039091018152606882019092526000919061423b9087908390608801615968565b60405160208183030381529060405280519060200120915050949350505050565b60408051808201909152600781527f4c5a44303030310000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156142d85760405162461bcd60e51b8152600401610c0a9190614b62565b5060408051808201909152600781527f4c5a31303030330000000000000000000000000000000000000000000000000060208201528385111561432e5760405162461bcd60e51b8152600401610c0a9190614b62565b5083156143e3576000826001600160a01b03168560405160006040518083038185875af1925050503d8060008114614382576040519150601f19603f3d011682016040523d82523d6000602084013e614387565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906143e05760405162461bcd60e51b8152600401610c0a9190614b62565b50505b82841015612269576000816001600160a01b031685850360405160006040518083038185875af1925050503d806000811461443a576040519150601f19603f3d011682016040523d82523d6000602084013e61443f565b606091505b50509050806040518060400160405280600781526020017f4c5a333030303000000000000000000000000000000000000000000000000000815250906144985760405162461bcd60e51b8152600401610c0a9190614b62565b505050505050565b60408051606480825260a0820190925260009160609183918291829082602082018180368337019050509050600080885160208a018b8e8ef192503d9350818411156144ea578193505b838152836000602083013e9199919850909650505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526122699085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401614122565b60006145ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661463e9092919063ffffffff16565b90508051600014806145cc5750808060200190518101906145cc9190615300565b6122835760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c0a565b60606110bf848460008585600080866001600160a01b0316858760405161466591906159b3565b60006040518083038185875af1925050503d80600081146146a2576040519150601f19603f3d011682016040523d82523d6000602084013e6146a7565b606091505b50915091506113f5878383876060831561472257825160000361471b576001600160a01b0385163b61471b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c0a565b508161316c565b61316c83838151156147375781518083602001fd5b8060405162461bcd60e51b8152600401610c0a9190614b62565b604051806060016040528060008019168152602001600067ffffffffffffffff168152602001614794604051806040016040528060008152602001600081525090565b905290565b6001600160a01b038116811461356257600080fd5b60008083601f8401126147c057600080fd5b50813567ffffffffffffffff8111156147d857600080fd5b6020830191508360208260051b850101111561104057600080fd5b60008060006040848603121561480857600080fd5b833561481381614799565b9250602084013567ffffffffffffffff81111561482f57600080fd5b61483b868287016147ae565b9497909650939450505050565b60006060828403121561485a57600080fd5b50919050565b60008083601f84011261487257600080fd5b50813567ffffffffffffffff81111561488a57600080fd5b60208301915083602082850101111561104057600080fd5b600080600080600080600060e0888a0312156148bd57600080fd5b6148c78989614848565b965060608801356148d781614799565b95506080880135945060a088013567ffffffffffffffff808211156148fb57600080fd5b6149078b838c01614860565b909650945060c08a013591508082111561492057600080fd5b5061492d8a828b01614860565b989b979a50959850939692959293505050565b60005b8381101561495b578181015183820152602001614943565b50506000910152565b6000815180845261497c816020860160208601614940565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b82151581526040602082015260006110bf6040830184614964565b803563ffffffff811681146149dd57600080fd5b919050565b600080600080608085870312156149f857600080fd5b8435614a0381614799565b93506020850135614a1381614799565b9250614a21604086016149c9565b9150614a2f606086016149c9565b905092959194509250565b604081526000614a4d6040830185614964565b905082151560208301529392505050565b60008060408385031215614a7157600080fd5b8235614a7c81614799565b9150614a8a602084016149c9565b90509250929050565b600080600060a08486031215614aa857600080fd5b614ab28585614848565b92506060840135614ac281614799565b91506080840135614ad281614799565b809150509250925092565b600080600060a08486031215614af257600080fd5b614afc8585614848565b92506060840135614b0c81614799565b929592945050506080919091013590565b600080600060608486031215614b3257600080fd5b8335614b3d81614799565b9250614b4b602085016149c9565b9150614b59604085016149c9565b90509250925092565b6020815260006110c26020830184614964565b600060208284031215614b8757600080fd5b81356110c281614799565b600080600060608486031215614ba757600080fd5b614bb0846149c9565b92506020840135614bc081614799565b929592945050506040919091013590565b600060208284031215614be357600080fd5b6110c2826149c9565b60008060008060608587031215614c0257600080fd5b8435614c0d81614799565b935060208501359250604085013567ffffffffffffffff811115614c3057600080fd5b614c3c87828801614860565b95989497509550505050565b801515811461356257600080fd5b600080600080600080600060a0888a031215614c7157600080fd5b8735614c7c81614799565b9650614c8a602089016149c9565b9550604088013567ffffffffffffffff80821115614ca757600080fd5b614cb38b838c01614860565b909750955060608a01359150614cc882614c48565b9093506080890135908082111561492057600080fd5b8151815260208083015190820152604081016117e9565b6020808252825182820181905260009190848201906040850190845b81811015614d365783516001600160a01b031683529284019291840191600101614d11565b50909695505050505050565b60008060008060a08587031215614d5857600080fd5b614d628686614848565b935060608501359250608085013567ffffffffffffffff811115614c3057600080fd5b60006080828403121561485a57600080fd5b600080600060608486031215614dac57600080fd5b833567ffffffffffffffff811115614dc357600080fd5b614dcf86828701614d85565b9660208601359650604090950135949350505050565b60006080820190508251825267ffffffffffffffff60208401511660208301526040830151612bf0604084018280518252602090810151910152565b600080600060608486031215614e3657600080fd5b8335614e4181614799565b9250614e4f602085016149c9565b9150604084013590509250925092565b600080600060608486031215614e7457600080fd5b8335614bb081614799565b600080600060608486031215614e9457600080fd5b8335614e9f81614799565b9250614ead602085016149c9565b91506040840135614ad281614799565b60008060408385031215614ed057600080fd5b614ed9836149c9565b91506020830135614ee981614799565b809150509250929050565b600080600060608486031215614f0957600080fd5b833567ffffffffffffffff811115614f2057600080fd5b614f2c86828701614d85565b935050602084013591506040840135614ad281614799565b60008060008060608587031215614f5a57600080fd5b8435614f6581614799565b9350614f73602086016149c9565b9250604085013567ffffffffffffffff811115614f8f57600080fd5b614c3c878288016147ae565b67ffffffffffffffff8116811461356257600080fd5b60008060008060808587031215614fc757600080fd5b8435614fd281614799565b9350614fe0602086016149c9565b9250604085013591506060850135614ff781614f9b565b939692955090935050565b60008060006060848603121561501757600080fd5b615020846149c9565b9250602084013591506040840135614ad281614f9b565b600080600080600080600060a0888a03121561505257600080fd5b873561505d81614799565b9650602088013561506d81614799565b955060408801359450606088013567ffffffffffffffff8082111561509157600080fd5b61509d8b838c01614860565b909650945060808a013591508082111561492057600080fd5b6040808252810183905260008460608301825b868110156150f45763ffffffff6150df846149c9565b168252602092830192909101906001016150c9565b5080925050506001600160a01b0383166020830152949350505050565b838152818360208301376000910160200190815292915050565b63ffffffff615139826149c9565b16825260208101356020830152604081013561515481614f9b565b67ffffffffffffffff81166040840152505050565b60808101615177828561512b565b6001600160a01b03831660608301529392505050565b615197818561512b565b6001600160a01b038316606082015260a0608082015260006122df60a0830184614964565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126151fc57600080fd5b815167ffffffffffffffff80821115615217576152176151bc565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561525d5761525d6151bc565b8160405283815286602085880101111561527657600080fd5b615287846020830160208901614940565b9695505050505050565b600080604083850312156152a457600080fd5b825167ffffffffffffffff8111156152bb57600080fd5b6152c7858286016151eb565b9250506020830151614ee981614c48565b60a081016152e6828661512b565b6001600160a01b0393909316606082015260800152919050565b60006020828403121561531257600080fd5b81516110c281614c48565b60006020828403121561532f57600080fd5b815167ffffffffffffffff81111561534657600080fd5b61316c848285016151eb565b8183823760009101908152919050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60006001600160a01b038088168352808716602084015250846040830152608060608301526113f5608083018486615362565b606081526001600160a01b03855116606082015263ffffffff602086015116608082015260006040860151606060a084015261541d60c0840182614964565b9050851515602084015282810360408401526113f5818587615362565b60006040828403121561544c57600080fd5b6040516040810181811067ffffffffffffffff8211171561546f5761546f6151bc565b604052825181526020928301519281019290925250919050565b60006040828403121561549b57600080fd5b6110c2838361543a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156117e9576117e96154a5565b67ffffffffffffffff818116838216019080821115612bf057612bf06154a5565b6000606082016001600160a01b0387168352602063ffffffff8088168286015260406060818701528387855260808701905060808860051b88010194508860005b8981101561563d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8089880301835281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c36030181126155aa57600080fd5b8b01856155b6826149c9565b168852868101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181126155ed57600080fd5b01868101903567ffffffffffffffff81111561560857600080fd5b80360382131561561757600080fd5b85888a0152615629868a018284615362565b985050509185019190850190600101615549565b50949b9a5050505050505050505050565b60006001600160a01b03808a16835288602084015260a0604084015261567860a08401888a615362565b81871660608501528381036080850152615693818688615362565b9b9a5050505050505050505050565b60006001600160a01b038089168352808816602084015286604084015285606084015280851660808401525060c060a08301526156e260c0830184614964565b98975050505050505050565b60006020828403121561570057600080fd5b81356110c281614f9b565b615715818961512b565b86606082015260e06080820152600061573260e083018789615362565b6001600160a01b03861660a084015282810360c0840152611a80818587615362565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261578957600080fd5b83018035915067ffffffffffffffff8211156157a457600080fd5b60200191503681900382131561104057600080fd5b6060815267ffffffffffffffff855116606082015263ffffffff60208601511660808201526001600160a01b0360408601511660a08201526000606086015161580a60c084018263ffffffff169052565b50608086015160e083015260a086015161010083015260c086015160e061012084015261583b610140840182614964565b90508281036020840152615850818688615362565b9150506122df604083018415159052565b600080600083850360c081121561587757600080fd5b608081121561588557600080fd5b506040516060810167ffffffffffffffff82821081831117156158aa576158aa6151bc565b8160405286518352602087015191506158c282614f9b565b8160208401526158d5886040890161543a565b60408401526080870151929550808311156158ef57600080fd5b6158fb888489016151eb565b945060a087015192508083111561591157600080fd5b505061591f868287016151eb565b9150509250925092565b60608152600061593c6060830186614964565b828103602084015261594e8186614964565b9150506001600160a01b0383166040830152949350505050565b7fffffffffffffffff0000000000000000000000000000000000000000000000008360c01b168152600082516159a5816008850160208701614940565b919091016008019392505050565b600082516159c5818460208701614940565b919091019291505056fea2646970667358221220af5a3fb6743a4933687c3a6cc5d20e4bdb03f715c813cfdcb754d94d2d678e6664736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "clear((uint32,bytes32,uint64),bytes32,bytes)": {
        "details": "Oapp uses this interface to clear a message.this is a PULL mode versus the PUSH mode of lzReceivethe cleared message can be ignored by the app (effectively burnt)cant reentrant because the payload is cleared before executionauthenticated by Oapp (msg.sender)",
        "params": {
          "_guid": "the guid of the message",
          "_message": "the message",
          "_origin": "the origin of the message"
        }
      },
      "deliver((uint32,bytes32,uint64),address,bytes32)": {
        "details": "MESSAGING STEP 2 - on the destination chainreceives a message from the configured receive library",
        "params": {
          "_origin": "the origin of the message",
          "_payloadHash": "the payload hash of the message",
          "_receiver": "the receiver of the message"
        }
      },
      "deliverComposedMessage(address,bytes32,bytes)": {
        "details": "the Oapp delivers the lzCompose message to the endpointthe composer MUST assert the sender because anyone can delivery msg with this functionwith the same GUID, the Oapp can deliver to multiple _composer at the same timeauthenticated by the msg.sender",
        "params": {
          "_composer": "the composer address",
          "_guid": "the message guid",
          "_message": "the message"
        }
      },
      "deliverable((uint32,bytes32,uint64),address,address)": {
        "details": "check if a message is deliverable.reverts if the receiveLibrary is not valid",
        "returns": {
          "_0": "reverts if the msglib check fails. returns true if the message is deliverable. false if it has been delivered"
        }
      },
      "getConfig(address,address,uint32,uint32)": {
        "details": "a view function to query the current configuration of the oapp"
      },
      "getReceiveLibrary(address,uint32)": {
        "details": "the receiveLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero"
      },
      "getSendContext()": {
        "details": "returns (eid, sender) if sending message, (0, 0) otherwise"
      },
      "getSendLibrary(address,uint32)": {
        "details": "the sendLibrary can be lazily resolved that if not set it will point to the default configured by LayerZero"
      },
      "hasPayloadHash(address,uint32,bytes32,uint64)": {
        "details": "simply checking if the storage slot is not initialized. assuming the payload can be not hashed to 0"
      },
      "inboundNonce(address,uint32,bytes32)": {
        "details": "returns the effective inbound nonce which has all its prior messages deliveredit starts from the lazyInboundNonce (last checkpoint) and iteratively check if the next nonce has been deliveredin extreme cases where there are a lot of messages, this function can OOG. but it can be trivially fixed by just clearing some prior messagesif the app can not receive any of the queued message, the app is most likely broken"
      },
      "isSendingMessage()": {
        "details": "returns true if sending message"
      },
      "isSupportedEid(uint32)": {
        "details": "returns true only if both the default send/receive libraries are set"
      },
      "isValidReceiveLibrary(address,uint32,address)": {
        "details": "called when the endpoint checks if the msglib attempting to delever the msg is the configured msglib of the Oappthis check provides the ability for Oapp to lock in a trusted msglibit will fist check if the msglib is the currently configured one. then check if the msglib is the one in grace period of msglib versioning upgrade"
      },
      "lzCompose(address,address,bytes32,bytes,bytes)": {
        "details": "execute a composed messages from the sender to the composer (receiver)the execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraDatacan not re-entrant",
        "params": {
          "_composer": "the composer address",
          "_extraData": "the extra data provided by the executor. this data is untrusted and should be validated.",
          "_guid": "the message guid",
          "_message": "the message",
          "_sender": "the sender address. in most cases, it is the Oapp's address."
        }
      },
      "lzReceive((uint32,bytes32,uint64),address,bytes32,bytes,bytes)": {
        "details": "MESSAGING STEP 3 - the last stepexecute a delivered message to the designated receiverthe execution provides the execution context (caller, extraData) to the receiver. the receiver can optionally assert the caller and validate the untrusted extraDatacant reentrant because the payload is cleared before execution",
        "params": {
          "_extraData": "the extra data provided by the executor. this data is untrusted and should be validated.",
          "_guid": "the guid of the message",
          "_message": "the message",
          "_origin": "the origin of the message",
          "_receiver": "the receiver of the message"
        }
      },
      "nextGuid(address,uint32,bytes32)": {
        "details": "returns the GUID for the next message given the paththe Oapp might want to include the GUID into the message in some cases"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "quote(address,uint32,bytes,bool,bytes)": {
        "details": "MESSAGING STEP 0quotes the messaging fee given the parameters",
        "params": {
          "_dstEid": "the destination endpoint id",
          "_message": "the message to be sent",
          "_options": "the messaging options to be used (e.g. lzReceive gas limit, etc)",
          "_payInLzToken": "whether the protocol fee should be paid in lz token or not",
          "_sender": "the sender of the message"
        },
        "returns": {
          "_0": "native fee and lz token fee. if altFeeToken is enalbed, the native fee is in the form of the altFeeToken"
        }
      },
      "recoverToken(address,address,uint256)": {
        "details": "recover the token sent to this contract by mistakeonly owner",
        "params": {
          "_amount": "the amount to send",
          "_to": "the address to send the token to",
          "_token": "the token to recover. if 0x0 then it is native token"
        }
      },
      "registerLibrary(address)": {
        "details": "all libraries have to implement the erc165 interface to prevent wrong configurationsonly owner"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "resetConfig(address,uint32[])": {
        "details": "setting the Oapp's configuration to the default configurations of the provided eidsalmost like the reverse action to snapshotConfig()authenticated by the msg.sender"
      },
      "send((uint32,bytes32,bytes,bytes),uint256,address)": {
        "details": "MESSAGING STEP 1 - on chains with altFeeToken disabledsame as sendWithAlt but only accepts native tokens",
        "params": {
          "_lzTokenFeeCap": "the maximum lz token fee that the sender is willing to pay",
          "_params": "the messaging parameters",
          "_refundAddress": "the address to refund the native fee to"
        }
      },
      "sendWithAlt((uint32,bytes32,bytes,bytes),uint256,uint256)": {
        "details": "MESSAGING STEP 1 - on chains with altFeeToken enabledsends a message with the given parametersprotected by send non-enentrancy guardthe endpoint will settle the payment from the sender to the sendLibrary, which then settles the payment to the eventual receiverthis design provides a saparation of concern and users only need to approve endpoint instead of messaging libraries",
        "params": {
          "_altTokenFeeCap": "the maximum alt token fee that the sender is willing to pay",
          "_lzTokenFeeCap": "the maximum lz token fee that the sender is willing to pay",
          "_params": "the messaging parameters"
        },
        "returns": {
          "_0": "the messaging receipt, which includes the message guid, nonce and fee"
        }
      },
      "setConfig(address,uint32,(uint32,bytes)[])": {
        "details": "authenticated by the msg.sender"
      },
      "setDefaultReceiveLibrary(uint32,address,uint256)": {
        "details": "owner setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledin version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.only owner"
      },
      "setDefaultReceiveLibraryTimeout(uint32,address,uint256)": {
        "details": "owner setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledcan used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration"
      },
      "setDefaultSendLibrary(uint32,address)": {
        "details": "owner setting the defaultSendLibrarycan set to the blockedLibrary, which is a registered librarythe msglib must enable the support before they can be registered to the endpoint as the defaultonly owner"
      },
      "setLayerZeroToken(address)": {
        "details": "allows reconfiguration to recover from wrong configurationsusers should never approve the EndpointV2 contract to spend their non-layerzero tokensonly owner",
        "params": {
          "_layerZeroToken": "the new layer zero token address"
        }
      },
      "setReceiveLibrary(uint32,address,uint256)": {
        "details": "Oapp setting the receiveLibrarymust be a registered library (including blockLibrary) with the eid support enabledin version migration, it can add a grace period to the old library. if the grace period is 0, it will delete the timeout configuration.authenticated by the Oapp"
      },
      "setReceiveLibraryTimeout(uint32,address,uint256)": {
        "details": "Oapp setting the defaultSendLibrarymust be a registered library (including blockLibrary) with the eid support enabledcan used to (1) extend the current configuration (2)  force remove the current configuration (3) change to a new configuration"
      },
      "setSendLibrary(uint32,address)": {
        "details": "Oapp setting the sendLibrarymust be a registered library (including blockLibrary) with the eid support enabledauthenticated by the Oapp"
      },
      "skip(uint32,bytes32,uint64)": {
        "details": "the caller must provide _nonce to prevent skipping the unintended nonceit could happen in some race conditions, e.g. intent to skip nonce 3, but nonce 3 was consumed before this transaction was included in the blockNOTE: only allows skipping the next of the effective inbound nonce (from the inboundNonce() function). if the Oapp wants to skips a delivered message, it should call the clear() function and ignore the payload insteadafter skipping the lazyInboundNonce is set to the provided nonce, which makes the inboundNonce also the provided nonce"
      },
      "snapshotConfig(address,uint32[])": {
        "details": "lock-in the current configuration of the provided eids to the Oapp , e.g. copying the default configuration.it allows the Oapp to be not affected by Default configuration changes.authenticated by the msg.sender"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "altFeeToken": {
        "details": "the altFeeToken is used for fees when the native token has no valueimmutable for gas saving. only 1 endpoint for such chains"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2712,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "lazyInboundNonce",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 2722,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "inboundPayloadHash",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))"
      },
      {
        "astId": 2730,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "outboundNonce",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))"
      },
      {
        "astId": 1776,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "registeredLibraries",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1780,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "isRegisteredLibrary",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1786,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "sendLibrary",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 1792,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "receiveLibrary",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_address))"
      },
      {
        "astId": 1799,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "receiveLibraryTimeout",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)3799_storage))"
      },
      {
        "astId": 1803,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "defaultSendLibrary",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 1807,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "defaultReceiveLibrary",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint32,t_address)"
      },
      {
        "astId": 1812,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "defaultReceiveLibraryTimeout",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint32,t_struct(Timeout)3799_storage)"
      },
      {
        "astId": 3151,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "composedMessages",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))"
      },
      {
        "astId": 3346,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "_sendContext",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1024,
        "contract": "contracts/EndpointV2.sol:EndpointV2",
        "label": "layerZeroToken",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bytes32 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes32)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => mapping(bytes32 => uint64)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_struct(Timeout)3799_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => struct IMessageLibManager.Timeout))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_struct(Timeout)3799_storage)"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(uint64 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes32)"
      },
      "t_mapping(t_bytes32,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint32,t_address)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => mapping(uint64 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_mapping(t_uint64,t_bytes32))"
      },
      "t_mapping(t_uint32,t_mapping(t_bytes32,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => mapping(bytes32 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint64)"
      },
      "t_mapping(t_uint32,t_struct(Timeout)3799_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct IMessageLibManager.Timeout)",
        "numberOfBytes": "32",
        "value": "t_struct(Timeout)3799_storage"
      },
      "t_mapping(t_uint64,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_struct(Timeout)3799_storage": {
        "encoding": "inplace",
        "label": "struct IMessageLibManager.Timeout",
        "members": [
          {
            "astId": 3796,
            "contract": "contracts/EndpointV2.sol:EndpointV2",
            "label": "lib",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3798,
            "contract": "contracts/EndpointV2.sol:EndpointV2",
            "label": "expiry",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}