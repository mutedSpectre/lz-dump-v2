{
  "address": "0x236B9303d513dDF3f4c4E93A640fB80A178872f1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleFeeLib",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "uint64",
          "name": "_quorum",
          "type": "uint64"
        },
        {
          "internalType": "address[]",
          "name": "_admins",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_uln",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_outboundBlockConfirmations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userApplication",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "AssignJob",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_callDataHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Execute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_gas",
          "type": "uint64"
        }
      ],
      "name": "SetDstGas",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeConfigUpdater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "SetFeeConfigUpdater",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "SetUln",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "UpdateAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "UpdateAllowlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "UpdateDenylist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oracleFeeLib",
          "type": "address"
        }
      ],
      "name": "UpdateOracleFeeLib",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "UpdatePriceFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "_multiplierBps",
          "type": "uint128"
        }
      ],
      "name": "UpdatePriceMultiplierBps",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_quorum",
          "type": "uint64"
        }
      ],
      "name": "UpdateQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "UpdateSigner",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowlist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowlistSize",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_outboundBlockConfirmation",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_userApplication",
          "type": "address"
        }
      ],
      "name": "assignJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "checkPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "denylist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "dstGasLookup",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        }
      ],
      "name": "dstPriceLookup",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "dstPriceRatio",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "dstGasPriceInWei",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signatures",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeConfigUpdaters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "feeConfigs",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "multiplier",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "floorMarginUSD",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_userApplication",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "hashCallData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiplierBps",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleFeeLib",
      "outputs": [
        {
          "internalType": "contract IOracleFeeLib",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract ILayerZeroPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userApplication",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userApplication",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_denied",
          "type": "bool"
        }
      ],
      "name": "setDenylist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_gas",
          "type": "uint64"
        }
      ],
      "name": "setDstGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeConfigUpdater",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "setFeeConfigUpdater",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "multiplier",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "floorMarginUSD",
              "type": "uint128"
            }
          ],
          "internalType": "struct MultiSigOracle.DstFeeConfig[]",
          "name": "_feeConfigs",
          "type": "tuple[]"
        }
      ],
      "name": "setFeeConfigs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleFeeLib",
          "type": "address"
        }
      ],
      "name": "setOracleFeeLib",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_multiplierBps",
          "type": "uint128"
        }
      ],
      "name": "setPriceMultiplierBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_quorum",
          "type": "uint64"
        }
      ],
      "name": "setQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uln",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setUln",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signerSize",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ulns",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "usedHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signatures",
          "type": "bytes"
        }
      ],
      "name": "verifySignatures",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFee",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uln",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFeeFromUlnV2Like",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x250902199b3a7fb936bcb6cc9ef338808291a316f3d73d0673e6a530cb6c5fb5",
  "receipt": {
    "to": null,
    "from": "0xc13b65f7c53Cd6db2EA205a4b574b4a0858720A6",
    "contractAddress": "0x236B9303d513dDF3f4c4E93A640fB80A178872f1",
    "transactionIndex": 0,
    "gasUsed": "2949128",
    "logsBloom": "0x
    "blockHash": "0x3927ecee2785700ca90bd1bcc1d80663c570a1533efa71c411f64fea5fae938d",
    "transactionHash": "0x250902199b3a7fb936bcb6cc9ef338808291a316f3d73d0673e6a530cb6c5fb5",
    "logs": [],
    "blockNumber": 120745,
    "cumulativeGasUsed": "2949128",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x91ec94dd5E949BdB2ecE3b91B9602EC5F7F59FFD",
    "0x0ac2924460A5b285fd205DeDB46738Ad46971061",
    [
      "0xb733B99F0f9b690C47004A835CA25e32992194DF",
      "0xbE25c1dd013979e10e6628CAeb707686DD1f73e3"
    ],
    2,
    [
      "0xc13b65f7c53Cd6db2EA205a4b574b4a0858720A6",
      "0xEb6304c9904DC04eF66D367B2EBc41525d1F231b",
      "0x0a66ad3CBF27De2F6252d166f38eA8e8245A8C41"
    ],
    "0xCEd04bDbe89441458398c7f9d228Ca9C62b8A8BA"
  ],
  "numDeployments": 1,
  "solcInputHash": "acd01353e7581e42c1d8932cb8f23fd3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleFeeLib\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_quorum\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_uln\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_outboundBlockConfirmations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"AssignJob\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_callDataHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_gas\",\"type\":\"uint64\"}],\"name\":\"SetDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeConfigUpdater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"SetFeeConfigUpdater\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"SetUln\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"UpdateAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"UpdateAllowlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"UpdateDenylist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracleFeeLib\",\"type\":\"address\"}],\"name\":\"UpdateOracleFeeLib\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"UpdatePriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_multiplierBps\",\"type\":\"uint128\"}],\"name\":\"UpdatePriceMultiplierBps\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_quorum\",\"type\":\"uint64\"}],\"name\":\"UpdateQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"UpdateSigner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowlist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowlistSize\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_outboundBlockConfirmation\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"assignJob\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"denylist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"dstGasLookup\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"}],\"name\":\"dstPriceLookup\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"dstPriceRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"dstGasPriceInWei\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeConfigUpdaters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"feeConfigs\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"multiplier\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"floorMarginUSD\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"hashCallData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplierBps\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleFeeLib\",\"outputs\":[{\"internalType\":\"contract IOracleFeeLib\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract ILayerZeroPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_denied\",\"type\":\"bool\"}],\"name\":\"setDenylist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_proofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_gas\",\"type\":\"uint64\"}],\"name\":\"setDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeConfigUpdater\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"setFeeConfigUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"multiplier\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"floorMarginUSD\",\"type\":\"uint128\"}],\"internalType\":\"struct MultiSigOracle.DstFeeConfig[]\",\"name\":\"_feeConfigs\",\"type\":\"tuple[]\"}],\"name\":\"setFeeConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleFeeLib\",\"type\":\"address\"}],\"name\":\"setOracleFeeLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_multiplierBps\",\"type\":\"uint128\"}],\"name\":\"setPriceMultiplierBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_quorum\",\"type\":\"uint64\"}],\"name\":\"setQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uln\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setUln\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signerSize\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ulns\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"verifySignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uln\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFeeFromUlnV2Like\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkPermission(address)\":{\"notice\":\"1) If one address is in the deny list, it is denied 2) If the allow list is empty and not in the deny list, it is allowed 3) If one address is in the allow list and not in the deny list, it is allowed 4) If the allow list is not empty and the address is not in the allow list, it is denied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigOracle.sol\":\"MultiSigOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroOracleV2 {\\n    // @notice query price and assign jobs at the same time\\n    // @param _dstChainId - the destination endpoint identifier\\n    // @param _outboundProofType - the proof type identifier to specify proof to be relayed\\n    // @param _outboundBlockConfirmation - block confirmation delay before relaying blocks\\n    // @param _userApplication - the source sending contract address\\n    function assignJob(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint64 _outboundBlockConfirmation,\\n        address _userApplication\\n    ) external returns (uint price);\\n\\n    // @notice query the oracle price for relaying block information to the destination chain\\n    // @param _dstChainId the destination endpoint identifier\\n    // @param _outboundProofType the proof type identifier to specify the data to be relayed\\n    // @param _outboundBlockConfirmation - block confirmation delay before relaying blocks\\n    // @param _userApplication - the source sending contract address\\n    function getFee(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint64 _outboundBlockConfirmation,\\n        address _userApplication\\n    ) external view returns (uint price);\\n\\n    // @notice withdraw the accrued fee in ultra light node\\n    // @param _to - the fee receiver\\n    // @param _amount - the withdrawal amount\\n    function withdrawFee(address payable _to, uint _amount) external;\\n}\\n\",\"keccak256\":\"0x2eadcc56a9ca45e487337ee081de7dd2e80c864738073f1e8ebea821caccc269\",\"license\":\"BUSL-1.1\"},\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroPriceFeed {\\n    /**\\n     * @dev\\n     * priceRatio: (USD price of 1 unit of remote native token in unit of local native token) * PRICE_RATIO_DENOMINATOR\\n     */\\n\\n    struct Price {\\n        uint128 priceRatio; // float value * 10 ^ 10, decimal awared. for aptos to evm, the basis would be (10^18 / 10^8) * 10 ^10 = 10 ^ 20.\\n        uint64 gasPriceInUnit; // for evm, it is in wei, for aptos, it is in octas.\\n        uint32 gasPerByte;\\n    }\\n\\n    struct UpdatePrice {\\n        uint16 chainId;\\n        Price price;\\n    }\\n\\n    /**\\n     * @dev\\n     *    ArbGasInfo.go:GetPricesInArbGas\\n     *\\n     */\\n    struct ArbitrumPriceExt {\\n        uint64 gasPerL2Tx; // L2 overhead\\n        uint32 gasPerL1CallDataByte;\\n    }\\n\\n    struct UpdatePriceExt {\\n        uint16 chainId;\\n        Price price;\\n        ArbitrumPriceExt extend;\\n    }\\n\\n    function getPrice(uint16 _dstChainId) external view returns (Price memory);\\n\\n    function getPriceRatioDenominator() external view returns (uint128);\\n\\n    function estimateFeeByChain(\\n        uint16 _dstChainId,\\n        uint _callDataSize,\\n        uint _gas\\n    ) external view returns (uint fee, uint128 priceRatio);\\n\\n    function nativeTokenPriceUSD() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xa9ca0cd91305436f53e3ff6758d1802c092d7cf5a0e13c87399aff15af0bc17d\",\"license\":\"BUSL-1.1\"},\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroUltraLightNodeV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\ninterface ILayerZeroUltraLightNodeV2 {\\n    // Relayer functions\\n    function validateTransactionProof(\\n        uint16 _srcChainId,\\n        address _dstAddress,\\n        uint _gasLimit,\\n        bytes32 _lookupHash,\\n        bytes32 _blockData,\\n        bytes calldata _transactionProof\\n    ) external;\\n\\n    // an Oracle delivers the block data using updateHash()\\n    function updateHash(uint16 _srcChainId, bytes32 _lookupHash, uint _confirmations, bytes32 _blockData) external;\\n\\n    // can only withdraw the receivable of the msg.sender\\n    function withdrawNative(address payable _to, uint _amount) external;\\n\\n    function withdrawZRO(address _to, uint _amount) external;\\n\\n    // view functions\\n    function getAppConfig(\\n        uint16 _remoteChainId,\\n        address _userApplicationAddress\\n    ) external view returns (ApplicationConfiguration memory);\\n\\n    function accruedNativeFee(address _address) external view returns (uint);\\n\\n    struct ApplicationConfiguration {\\n        uint16 inboundProofLibraryVersion;\\n        uint64 inboundBlockConfirmations;\\n        address relayer;\\n        uint16 outboundProofType;\\n        uint64 outboundBlockConfirmations;\\n        address oracle;\\n    }\\n\\n    event HashReceived(\\n        uint16 indexed srcChainId,\\n        address indexed oracle,\\n        bytes32 lookupHash,\\n        bytes32 blockData,\\n        uint confirmations\\n    );\\n    event RelayerParams(bytes adapterParams, uint16 outboundProofType);\\n    event Packet(bytes payload);\\n    event InvalidDst(\\n        uint16 indexed srcChainId,\\n        bytes srcAddress,\\n        address indexed dstAddress,\\n        uint64 nonce,\\n        bytes32 payloadHash\\n    );\\n    event PacketReceived(\\n        uint16 indexed srcChainId,\\n        bytes srcAddress,\\n        address indexed dstAddress,\\n        uint64 nonce,\\n        bytes32 payloadHash\\n    );\\n    event AppConfigUpdated(address indexed userApplication, uint indexed configType, bytes newConfig);\\n    event AddInboundProofLibraryForChain(uint16 indexed chainId, address lib);\\n    event EnableSupportedOutboundProof(uint16 indexed chainId, uint16 proofType);\\n    event SetChainAddressSize(uint16 indexed chainId, uint size);\\n    event SetDefaultConfigForChainId(\\n        uint16 indexed chainId,\\n        uint16 inboundProofLib,\\n        uint64 inboundBlockConfirm,\\n        address relayer,\\n        uint16 outboundProofType,\\n        uint64 outboundBlockConfirm,\\n        address oracle\\n    );\\n    event SetDefaultAdapterParamsForChainId(uint16 indexed chainId, uint16 indexed proofType, bytes adapterParams);\\n    event SetLayerZeroToken(address indexed tokenAddress);\\n    event SetRemoteUln(uint16 indexed chainId, bytes32 uln);\\n    event SetTreasury(address indexed treasuryAddress);\\n    event WithdrawZRO(address indexed msgSender, address indexed to, uint amount);\\n    event WithdrawNative(address indexed msgSender, address indexed to, uint amount);\\n}\\n\",\"keccak256\":\"0x33ca8c5ddf2293c995e0a5a31ed3357ef6a9f399a8af894af8231d4ca2c2f7b3\",\"license\":\"BUSL-1.1\"},\"contracts/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nabstract contract AccessControl {\\n    mapping(address => bool) public allowlist;\\n    mapping(address => bool) public denylist;\\n    uint64 public allowlistSize;\\n\\n    event UpdateAllowlist(address _addr, bool _active);\\n    event UpdateDenylist(address _addr, bool _active);\\n\\n    function _setAllowlist(address _addr, bool _allowed) internal {\\n        require(allowlist[_addr] != _allowed, \\\"AccessControl: address already in that state\\\");\\n        allowlist[_addr] = _allowed;\\n        allowlistSize = _allowed ? allowlistSize + 1 : allowlistSize - 1;\\n        emit UpdateAllowlist(_addr, _allowed);\\n    }\\n\\n    function _setDenylist(address _addr, bool _denied) internal {\\n        require(denylist[_addr] != _denied, \\\"AccessControl: address already in that state\\\");\\n        denylist[_addr] = _denied;\\n        emit UpdateDenylist(_addr, _denied);\\n    }\\n\\n    /// 1) If one address is in the deny list, it is denied\\n    /// 2) If the allow list is empty and not in the deny list, it is allowed\\n    /// 3) If one address is in the allow list and not in the deny list, it is allowed\\n    /// 4) If the allow list is not empty and the address is not in the allow list, it is denied\\n    function checkPermission(address _address) public view returns (bool) {\\n        if (denylist[_address]) {\\n            return false;\\n        } else if (allowlist[_address]) {\\n            return true;\\n        } else if (allowlistSize > 0) {\\n            return false;\\n        } else {\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa7c40f17e377da71528c0723d327f6a11c9c7e5c6ce427657ee65cb717b6a046\",\"license\":\"BUSL-1.1\"},\"contracts/MultiSig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nabstract contract MultiSig {\\n    mapping(address => bool) public signers;\\n    uint64 public signerSize;\\n    uint64 public quorum;\\n\\n    event UpdateSigner(address _signer, bool _active);\\n    event UpdateQuorum(uint64 _quorum);\\n\\n    modifier onlySigner() {\\n        require(signers[msg.sender], \\\"MultiSigOracle: caller must be signer\\\");\\n        _;\\n    }\\n\\n    constructor(address[] memory _signers, uint64 _quorum) {\\n        require(_signers.length >= _quorum && _quorum > 0, \\\"MultiSig: signers too few\\\");\\n\\n        address lastSigner = address(0);\\n        for (uint i = 0; i < _signers.length; i++) {\\n            address signer = _signers[i];\\n            require(signer > lastSigner, \\\"MultiSig: signers not sorted\\\"); // to ensure no duplicates\\n            signers[signer] = true;\\n            lastSigner = signer;\\n        }\\n        signerSize = uint64(_signers.length);\\n        quorum = _quorum;\\n    }\\n\\n    function _setSigner(address _signer, bool _active) internal {\\n        require(signers[_signer] != _active, \\\"MultiSig: signer already in that state\\\");\\n        signers[_signer] = _active;\\n        signerSize = _active ? signerSize + 1 : signerSize - 1;\\n        require(signerSize >= quorum, \\\"MultiSig: committee size < threshold\\\");\\n        emit UpdateSigner(_signer, _active);\\n    }\\n\\n    function _setQuorum(uint64 _quorum) internal {\\n        require(_quorum <= signerSize && _quorum > 0, \\\"MultiSig: invalid quorum\\\");\\n        quorum = _quorum;\\n        emit UpdateQuorum(_quorum);\\n    }\\n\\n    function verifySignatures(bytes32 _hash, bytes calldata _signatures) public view {\\n        require(_signatures.length >= uint(quorum) * 65, \\\"MultiSig: signatures too short\\\");\\n\\n        bytes32 messageDigest = _getEthSignedMessageHash(_hash);\\n\\n        address lastSigner = address(0); // There cannot be a signer with address 0.\\n        for (uint i = 0; i < quorum; i++) {\\n            (uint8 v, bytes32 r, bytes32 s) = _splitSignature(_signatures, i);\\n            address currentSigner = ecrecover(messageDigest, v, r, s);\\n\\n            require(currentSigner > lastSigner, \\\"MultiSig: signatures must be in ascending order\\\"); // prevent duplicate signatures\\n            require(signers[currentSigner], \\\"MultiSig: signature is not from a signer\\\");\\n            lastSigner = currentSigner;\\n        }\\n    }\\n\\n    /// divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\\n    function _splitSignature(\\n        bytes memory _signatures,\\n        uint256 _pos\\n    ) internal pure returns (uint8 v, bytes32 r, bytes32 s) {\\n        // The signature format is a compact form of:\\n        //   {bytes32 r}{bytes32 s}{uint8 v}\\n        // Compact means, uint8 is not padded to 32 bytes.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let signaturePos := mul(0x41, _pos)\\n            r := mload(add(_signatures, add(signaturePos, 0x20)))\\n            s := mload(add(_signatures, add(signaturePos, 0x40)))\\n            // Here we are loading the last 32 bytes, including 31 bytes\\n            // of 's'. There is no 'mload8' to do this.\\n            //\\n            // 'byte' is not working due to the Solidity parser, so lets\\n            // use the second best option, 'and'\\n            v := and(mload(add(_signatures, add(signaturePos, 0x41))), 0xff)\\n        }\\n    }\\n\\n    function _getEthSignedMessageHash(bytes32 _messageHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", _messageHash));\\n    }\\n}\\n\",\"keccak256\":\"0xf0681b7d04de77770797f93d2ee034f0b12857caa879096b2553f607d685a04e\",\"license\":\"BUSL-1.1\"},\"contracts/MultiSigOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroOracleV2.sol\\\";\\nimport \\\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroUltraLightNodeV2.sol\\\";\\nimport \\\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroPriceFeed.sol\\\";\\nimport \\\"./interfaces/IOracleFeeLib.sol\\\";\\nimport \\\"./MultiSig.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\n\\n// (1) can interact with multiple ulnv2-like contracts\\n// (2) has an 'admin' role to manage the fee related non-security calls\\n// (3) multi-sig can call arbitrary calldata (with expiration check, no msg replaying)\\ncontract MultiSigOracle is MultiSig, AccessControl, ILayerZeroOracleV2 {\\n    struct DstFeeConfig {\\n        uint16 chainId;\\n        uint128 multiplier;\\n        uint128 floorMarginUSD;\\n    }\\n\\n    struct FeeConfig {\\n        uint128 multiplier;\\n        uint128 floorMarginUSD;\\n    }\\n\\n    mapping(address => bool) public ulns; // to call assignJob\\n    mapping(address => bool) public admins; // sets pricing\\n    mapping(address => bool) public feeConfigUpdaters;\\n\\n    mapping(uint16 => mapping(uint16 => uint64)) public dstGasLookup; // [_chainId][_outboundProofType]\\n\\n    ILayerZeroPriceFeed public priceFeed;\\n    IOracleFeeLib public oracleFeeLib;\\n    uint128 public multiplierBps = 12000; // 20%\\n\\n    mapping(bytes32 => bool) public usedHashes;\\n    mapping(uint16 => FeeConfig) public feeConfigs;\\n\\n    event UpdateAdmin(address _addr, bool _active);\\n    event SetUln(address _addr, bool _active);\\n    event AssignJob(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint _outboundBlockConfirmations,\\n        address _userApplication,\\n        uint _fee\\n    );\\n    event SetDstGas(uint16 _dstChainId, uint16 _outboundProofType, uint64 _gas);\\n    event Execute(address _target, bytes32 _callDataHash, bool _success, bytes _data);\\n    event UpdatePriceFeed(address _priceFeed);\\n    event UpdateOracleFeeLib(address _oracleFeeLib);\\n    event UpdatePriceMultiplierBps(uint128 _multiplierBps);\\n    event SetFeeConfigUpdater(address feeConfigUpdater, bool allow);\\n\\n    modifier onlySelf() {\\n        require(address(this) == msg.sender, \\\"MultiSigOracle: caller must be self\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(admins[msg.sender], \\\"MultiSigOracle: caller must be admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyUpdater() {\\n        if (!admins[msg.sender]) {\\n            require(feeConfigUpdaters[msg.sender], \\\"MultiSigOracle: caller must be updater\\\");\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        address _priceFeed,\\n        address _oracleFeeLib,\\n        address[] memory _signers,\\n        uint64 _quorum,\\n        address[] memory _admins,\\n        address _uln\\n    ) MultiSig(_signers, _quorum) {\\n        priceFeed = ILayerZeroPriceFeed(_priceFeed);\\n        oracleFeeLib = IOracleFeeLib(_oracleFeeLib);\\n        ulns[_uln] = true;\\n        for (uint i = 0; i < _admins.length; i++) {\\n            admins[_admins[i]] = true;\\n        }\\n    }\\n\\n    function assignJob(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint64 _outboundBlockConfirmation,\\n        address _userApplication\\n    ) external override returns (uint fee) {\\n        require(ulns[msg.sender], \\\"MultiSigOracle: caller must be uln\\\");\\n        fee = getFee(_dstChainId, _outboundProofType, _outboundBlockConfirmation, _userApplication);\\n        emit AssignJob(_dstChainId, _outboundProofType, _outboundBlockConfirmation, _userApplication, fee);\\n    }\\n\\n    // signer can call this function to:\\n    // 1. submit a block data to ULN\\n    // 2. change configuration of this oracle\\n    // 3. withdraw fee from ULN\\n    function execute(\\n        address _target,\\n        bytes calldata _callData,\\n        uint _expiration,\\n        bytes calldata _signatures\\n    ) external onlyAdmin {\\n        require(ulns[_target] || _target == address(this), \\\"MultiSigOracle: target must be uln or self\\\");\\n        require(_expiration > block.timestamp, \\\"MultiSigOracle: call data expired\\\");\\n\\n        // generate and validate hash\\n        bytes32 hash = hashCallData(_target, _callData, _expiration);\\n        require(!usedHashes[hash], \\\"MultiSigOracle: call data already executed\\\");\\n        usedHashes[hash] = true; // prevent reentry and replay attack\\n\\n        // check signatures\\n        verifySignatures(hash, _signatures);\\n\\n        // execute call data\\n        (bool success, bytes memory rtnData) = _target.call(_callData);\\n        emit Execute(_target, hash, success, rtnData);\\n    }\\n\\n    // ---------------------- only self, by address(this).call() ----------------------\\n    function setSigner(address _signer, bool _active) external onlySelf {\\n        _setSigner(_signer, _active);\\n    }\\n\\n    function setQuorum(uint64 _quorum) external onlySelf {\\n        _setQuorum(_quorum);\\n    }\\n\\n    function setAllowlist(address _userApplication, bool _allowed) external onlySelf {\\n        _setAllowlist(_userApplication, _allowed);\\n    }\\n\\n    function setDenylist(address _userApplication, bool _denied) external onlySelf {\\n        _setDenylist(_userApplication, _denied);\\n    }\\n\\n    function setUln(address _uln, bool _active) external onlySelf {\\n        require(ulns[_uln] != _active, \\\"MultiSigOracle: uln already in that state\\\");\\n        ulns[_uln] = _active;\\n        emit SetUln(_uln, _active);\\n    }\\n\\n    // ------------------ admin administration, only admin -------------------\\n    function setAdmin(address _admin, bool _active) external onlyAdmin {\\n        require(admins[_admin] != _active, \\\"MultiSigOracle: admin already in that state\\\");\\n        admins[_admin] = _active;\\n        emit UpdateAdmin(_admin, _active);\\n    }\\n\\n    // ---------------------- fee functions, only admin ----------------------\\n    function setDstGas(uint16 _dstChainId, uint16 _proofType, uint64 _gas) external onlyAdmin {\\n        dstGasLookup[_dstChainId][_proofType] = _gas;\\n        emit SetDstGas(_dstChainId, _proofType, _gas);\\n    }\\n\\n    function setPriceFeed(address _priceFeed) external onlyAdmin {\\n        priceFeed = ILayerZeroPriceFeed(_priceFeed);\\n        emit UpdatePriceFeed(_priceFeed);\\n    }\\n\\n    function setOracleFeeLib(address _oracleFeeLib) external onlyAdmin {\\n        oracleFeeLib = IOracleFeeLib(_oracleFeeLib);\\n        emit UpdateOracleFeeLib(_oracleFeeLib);\\n    }\\n\\n    function setPriceMultiplierBps(uint128 _multiplierBps) external onlyAdmin {\\n        multiplierBps = _multiplierBps;\\n        emit UpdatePriceMultiplierBps(_multiplierBps);\\n    }\\n\\n    function withdrawFee(address payable _to, uint _amount) external view override onlyAdmin {\\n        revert(\\\"MultiSigOracle: not implemented\\\");\\n    }\\n\\n    function withdrawFeeFromUlnV2Like(address _uln, address payable _to, uint _amount) external onlyAdmin {\\n        require(ulns[_uln], \\\"MultiSigOracle: _uln is not allowed\\\");\\n        ILayerZeroUltraLightNodeV2(_uln).withdrawNative(_to, _amount);\\n    }\\n\\n    function setFeeConfigUpdater(address _feeConfigUpdater, bool _allow) public onlyAdmin {\\n        feeConfigUpdaters[_feeConfigUpdater] = _allow;\\n        emit SetFeeConfigUpdater(_feeConfigUpdater, _allow);\\n    }\\n\\n    // ---------------------- admin or fee updater ----------------------\\n    function setFeeConfigs(DstFeeConfig[] calldata _feeConfigs) external onlyUpdater {\\n        for (uint i = 0; i < _feeConfigs.length; i++) {\\n            DstFeeConfig calldata _data = _feeConfigs[i];\\n            feeConfigs[_data.chainId] = FeeConfig(_data.multiplier, _data.floorMarginUSD);\\n        }\\n    }\\n\\n    // ---------------------- view functions ----------------------\\n    function getFee(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint64,\\n        address _userApplication\\n    ) public view override returns (uint) {\\n        require(checkPermission(_userApplication), \\\"MultiSigOracle: _userApplication is not allowed\\\");\\n\\n        uint64 dstGas = dstGasLookup[_dstChainId][_outboundProofType];\\n        FeeConfig storage config = feeConfigs[_dstChainId];\\n\\n        return\\n            oracleFeeLib.getFee(\\n                priceFeed,\\n                _dstChainId,\\n                dstGas,\\n                quorum,\\n                multiplierBps,\\n                config.multiplier,\\n                config.floorMarginUSD\\n            );\\n    }\\n\\n    function hashCallData(address _target, bytes calldata _callData, uint _expiration) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_target, _expiration, _callData));\\n    }\\n\\n    function dstPriceLookup(uint16 _dstChainId) public view returns (uint128 dstPriceRatio, uint64 dstGasPriceInWei) {\\n        ILayerZeroPriceFeed.Price memory price = priceFeed.getPrice(_dstChainId);\\n        return (price.priceRatio, price.gasPriceInUnit);\\n    }\\n}\\n\",\"keccak256\":\"0x97bf7a7b8b7ab126d140d89cbae18e01c1771b967e5325351a1a1cb8ab13403f\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IOracleFeeLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"@layerzerolabs/lz-evm-v1-0.8/contracts/interfaces/ILayerZeroPriceFeed.sol\\\";\\n\\ninterface IOracleFeeLib {\\n    function getFee(\\n        ILayerZeroPriceFeed _priceFeed,\\n        uint16 _dstChainId,\\n        uint64 _baseGas,\\n        uint64 _quorum,\\n        uint128 _defaultMultiplier,\\n        uint128 _multiplier,\\n        uint128 _floorMarginUSD\\n    ) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x0899ea4ce14f7e53e7181d4d587ec775deadb65cc194a2aa4c9f7073f50c684b\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6080604052600b80546001600160801b031916612ee01790553480156200002557600080fd5b506040516200350738038062003507833981016040819052620000489162000365565b8383806001600160401b03168251101580156200006e57506000816001600160401b0316115b620000c05760405162461bcd60e51b815260206004820152601960248201527f4d756c74695369673a207369676e65727320746f6f206665770000000000000060448201526064015b60405180910390fd5b6000805b83518110156200018c576000848281518110620000e557620000e562000420565b60200260200101519050826001600160a01b0316816001600160a01b031611620001525760405162461bcd60e51b815260206004820152601c60248201527f4d756c74695369673a207369676e657273206e6f7420736f72746564000000006044820152606401620000b7565b6001600160a01b0381166000908152602081905260409020805460ff19166001179055915080620001838162000436565b915050620000c4565b50509051600180546001600160401b0393841668010000000000000000026001600160801b03199091169390921692909217178155600980546001600160a01b03808a166001600160a01b031992831617909255600a8054898416921691909117905582166000908152600560205260408120805460ff19169092179091555b8251811015620002785760016006600085848151811062000231576200023162000420565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806200026f8162000436565b9150506200020c565b505050505050506200045e565b80516001600160a01b03811681146200029d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ca57600080fd5b815160206001600160401b0380831115620002e957620002e9620002a2565b8260051b604051601f19603f83011681018181108482111715620003115762000311620002a2565b6040529384528581018301938381019250878511156200033057600080fd5b83870191505b848210156200035a576200034a8262000285565b8352918301919083019062000336565b979650505050505050565b60008060008060008060c087890312156200037f57600080fd5b6200038a8762000285565b95506200039a6020880162000285565b60408801519095506001600160401b0380821115620003b857600080fd5b620003c68a838b01620002b8565b9550606089015191508082168214620003de57600080fd5b608089015191945080821115620003f457600080fd5b506200040389828a01620002b8565b9250506200041460a0880162000285565b90509295509295509295565b634e487b7160e01b600052603260045260246000fd5b6000600182016200045757634e487b7160e01b600052601160045260246000fd5b5060010190565b613099806200046e6000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c80639f0707f011610145578063caa99cb3116100bd578063f3ad31f41161008c578063fd62e75011610071578063fd62e7501461069f578063fd9be522146106b3578063fe1b2b8d146106c657600080fd5b8063f3ad31f414610679578063f553ccc91461068c57600080fd5b8063caa99cb3146105fa578063d2ae21041461060d578063e3a0fd8b14610621578063f03821161461065657600080fd5b8063b12527f811610114578063c3b04e7f116100f9578063c3b04e7f146105c1578063c5e193cd146105d4578063c7a823e0146105e757600080fd5b8063b12527f81461059b578063b348ee0c146105ae57600080fd5b80639f0707f0146104f5578063a7cd52cb14610518578063ac353e041461053b578063aef18bf71461057857600080fd5b80636c459a28116101d8578063741bef1a116101a7578063780a00bb1161018c578063780a00bb146104bc5780638585c945146104cf5780638dc3897a146104e257600080fd5b8063741bef1a14610433578063765a8a541461047857600080fd5b80636c459a28146103d757806370cb3acb146103ea578063724e78da146103fd578063736c0d5b1461041057600080fd5b80633371bfff1161022f5780634b0bddd2116102145780634b0bddd2146103905780635553fb8e146103a357806357d3a786146103c457600080fd5b80633371bfff1461033a578063429b62e51461036d57600080fd5b806309310452146102615780631598b16f146102765780631703a018146102ee57806331cb610514610327575b600080fd5b61027461026f36600461297b565b6106e6565b005b6102c06102843660046129c2565b600d602052600090815260409020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b60015461030e9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016102e5565b610274610335366004612a06565b610826565b61035d610348366004612a44565b60036020526000908152604090205460ff1681565b60405190151581526020016102e5565b61035d61037b366004612a44565b60066020526000908152604090205460ff1681565b61027461039e366004612a06565b6108c3565b6103b66103b1366004612a61565b610aad565b6040519081526020016102e5565b61035d6103d2366004612a44565b610c8b565b6102746103e5366004612b02565b610d1e565b6102746103f8366004612b8e565b6110cb565b61027461040b366004612a44565b6112ab565b61035d61041e366004612a44565b60006020819052908152604090205460ff1681565b6009546104539073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102e5565b61048b6104863660046129c2565b6113c3565b604080516fffffffffffffffffffffffffffffffff909316835267ffffffffffffffff9091166020830152016102e5565b6102746104ca366004612a06565b611471565b6102746104dd366004612bcf565b611644565b6102746104f0366004612a06565b6116df565b61035d610503366004612a44565b60056020526000908152604090205460ff1681565b61035d610526366004612a44565b60026020526000908152604090205460ff1681565b600b54610557906fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102e5565b61035d610586366004612bec565b600c6020526000908152604090205460ff1681565b6102746105a9366004612a06565b611804565b6102746105bc366004612a44565b61189d565b6102746105cf366004612c23565b6119ae565b6103b66105e2366004612a61565b611abb565b6102746105f5366004612c40565b611be3565b610274610608366004612c8c565b611f39565b60045461030e9067ffffffffffffffff1681565b61030e61062f366004612d01565b600860209081526000928352604080842090915290825290205467ffffffffffffffff1681565b61035d610664366004612a44565b60076020526000908152604090205460ff1681565b6103b6610687366004612d34565b6120e2565b61027461069a366004612a06565b61211b565b60015461030e9067ffffffffffffffff1681565b6102746106c1366004612d90565b6121b4565b600a546104539073ffffffffffffffffffffffffffffffffffffffff1681565b3360009081526006602052604090205460ff16610789576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e0000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61ffff83811660008181526008602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff87169081179091558251938452908301939093528101919091527fa919b8179a0920376a5f6ac5b26cd567acf115c8b5af1400b09015dd862277d99060600160405180910390a1505050565b3033146108b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf82826122b4565b5050565b3360009081526006602052604090205460ff16610961576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090205481151560ff909116151503610a1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4d756c74695369674f7261636c653a2061646d696e20616c726561647920696e60448201527f20746861742073746174650000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526006602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527fae0a768e1f5a7943e3f1bb8a4d503c6fbfea4c9bbbded6b463e48bebd28ef72591015b60405180910390a15050565b6000610ab882610c8b565b610b44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4d756c74695369674f7261636c653a205f757365724170706c69636174696f6e60448201527f206973206e6f7420616c6c6f77656400000000000000000000000000000000006064820152608401610780565b61ffff8581166000818152600860209081526040808320948916835293815283822054838352600d90915290839020600a54600954600154600b54845497517fdc60028000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019790975267ffffffffffffffff958616604488018190526801000000000000000090920490951660648701526fffffffffffffffffffffffffffffffff948516608487015284871660a487015270010000000000000000000000000000000090960490931660c4850152909291169063dc6002809060e401602060405180830381865afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190612dbc565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081205460ff1615610cc157506000919050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205460ff1615610cf757506001919050565b60045467ffffffffffffffff1615610d1157506000919050565b506001919050565b919050565b3360009081526006602052604090205460ff16610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff861660009081526005602052604090205460ff1680610e05575073ffffffffffffffffffffffffffffffffffffffff861630145b610e91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4d756c74695369674f7261636c653a20746172676574206d757374206265207560448201527f6c6e206f722073656c66000000000000000000000000000000000000000000006064820152608401610780565b428311610f20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d756c74695369674f7261636c653a2063616c6c20646174612065787069726560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610780565b6000610f2e878787876120e2565b6000818152600c602052604090205490915060ff1615610fd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4d756c74695369674f7261636c653a2063616c6c206461746120616c7265616460448201527f79206578656375746564000000000000000000000000000000000000000000006064820152608401610780565b6000818152600c6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611012818484611be3565b6000808873ffffffffffffffffffffffffffffffffffffffff16888860405161103c929190612dd5565b6000604051808303816000865af19150503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b50915091507f293e3a2153dc5c8d3667cbd6ede71a71674b2381e5dc4b40c91ad0e813447c0f898484846040516110b89493929190612de5565b60405180910390a1505050505050505050565b3360009081526006602052604090205460ff16611169576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff1661121e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a205f756c6e206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040517f07b18bde00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390528416906307b18bde90604401600060405180830381600087803b15801561128e57600080fd5b505af11580156112a2573d6000803e3d6000fd5b50505050505050565b3360009081526006602052604090205460ff16611349576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f80674e26c002a5b7d07d752a8b75030a7d410c4d0178d254df106c7667c1cc84906020015b60405180910390a150565b6009546040517fe0ad121a00000000000000000000000000000000000000000000000000000000815261ffff831660048201526000918291829173ffffffffffffffffffffffffffffffffffffffff169063e0ad121a90602401606060405180830381865afa15801561143a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145e9190612e7f565b8051602090910151909590945092505050565b303314611500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205481151560ff9091161515036115bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4d756c74695369674f7261636c653a20756c6e20616c726561647920696e207460448201527f68617420737461746500000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527feabd2f190f320483b897651b13516f0547c3067bdce2d5080d7b4468c07336469101610aa1565b3033146116d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6116dc8161251f565b50565b3360009081526006602052604090205460ff1661177d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527fba72b3b3b814b105e901ac6ce33e81f5f7490c8d22b3903f48c74b255af3a0be9101610aa1565b303314611893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf8282612624565b3360009081526006602052604090205460ff1661193b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fe4bb27f00af84e2f5a3b5d9a4efd102fc5834643fab4f4d18038ce0d74c1d404906020016113b8565b3360009081526006602052604090205460ff16611a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600b80547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff83169081179091556040519081527f2725008ed0736b4e89059cba21b291a6964c242e0fa2ed00574cfb7adbbffc2c906020016113b8565b3360009081526005602052604081205460ff16611b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207560448201527f6c6e0000000000000000000000000000000000000000000000000000000000006064820152608401610780565b611b6685858585610aad565b6040805161ffff88811682528716602082015267ffffffffffffffff86168183015273ffffffffffffffffffffffffffffffffffffffff851660608201526080810183905290519192507f4e41ee13e03cd5e0446487b524fdc48af6acf26c074dacdbdfb6b574b42c8146919081900360a00190a1949350505050565b600154611c079068010000000000000000900467ffffffffffffffff166041612f50565b811015611c70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d756c74695369673a207369676e61747572657320746f6f2073686f727400006044820152606401610780565b6000611cc9846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506000805b60015468010000000000000000900467ffffffffffffffff16811015611f31576000806000611d3588888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506127f1915050565b925092509250600060018785858560405160008152602001604052604051611d79949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611d9b573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611e62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4d756c74695369673a207369676e617475726573206d75737420626520696e2060448201527f617363656e64696e67206f7264657200000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205460ff16611f17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d756c74695369673a207369676e6174757265206973206e6f742066726f6d2060448201527f61207369676e65720000000000000000000000000000000000000000000000006064820152608401610780565b809550505050508080611f2990612f6d565b915050611ccf565b505050505050565b3360009081526006602052604090205460ff16611fef573360009081526007602052604090205460ff16611fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207560448201527f70646174657200000000000000000000000000000000000000000000000000006064820152608401610780565b60005b818110156120dd573683838381811061200d5761200d612fa5565b905060600201905060405180604001604052808260200160208101906120339190612c23565b6fffffffffffffffffffffffffffffffff16815260200161205a6060840160408501612c23565b6fffffffffffffffffffffffffffffffff169052600d600061207f60208501856129c2565b61ffff168152602080820192909252604001600020825192909101516fffffffffffffffffffffffffffffffff90811670010000000000000000000000000000000002921691909117905550806120d581612f6d565b915050611ff2565b505050565b6000848285856040516020016120fb9493929190612fd4565b604051602081830303815290604052805190602001209050949350505050565b3033146121aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf828261280f565b3360009081526006602052604090205460ff16612252576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d756c74695369674f7261636c653a206e6f7420696d706c656d656e746564006044820152606401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481151560ff909116151503612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d756c74695369673a207369676e657220616c726561647920696e207468617460448201527f20737461746500000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515179055806123e257600180546123dd919067ffffffffffffffff1661301a565b6123fc565b600180546123fc9167ffffffffffffffff90911690613042565b600180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff928316908117918290556801000000000000000090910490911611156124d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369673a20636f6d6d69747465652073697a65203c20746872657360448201527f686f6c64000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040805173ffffffffffffffffffffffffffffffffffffffff8416815282151560208201527f863d338cad74814b108a06288ad5e0e80d56495e0332238b1d2cdcfa0ca8e5ce9101610aa1565b60015467ffffffffffffffff90811690821611801590612549575060008167ffffffffffffffff16115b6125af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4d756c74695369673a20696e76616c69642071756f72756d00000000000000006044820152606401610780565b600180547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff166801000000000000000067ffffffffffffffff8416908102919091179091556040519081527fb600f3cf7f38a4b49bb0c75f722ef69f7e3e39ef3bb4aa8207fd86e724a23249906020016113b8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205481151560ff9091161515036126e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416363657373436f6e74726f6c3a206164647265737320616c7265616479206960448201527f6e207468617420737461746500000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515179055806127535760045461274e9060019067ffffffffffffffff1661301a565b61276b565b60045461276b9067ffffffffffffffff166001613042565b600480547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040805173ffffffffffffffffffffffffffffffffffffffff8416815282151560208201527f9352a101313f915f658cc62aeaa4913eeab9d5732c545d05fc379042a16253229101610aa1565b60419081029190910160208101516040820151919092015160ff1692565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090205481151560ff9091161515036128cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416363657373436f6e74726f6c3a206164647265737320616c7265616479206960448201527f6e207468617420737461746500000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f4b4231060768ee40d7781b20f37f18e43e4bac84908227f9d487ed96bd7f1dc79101610aa1565b803561ffff81168114610d1957600080fd5b67ffffffffffffffff811681146116dc57600080fd5b60008060006060848603121561299057600080fd5b61299984612953565b92506129a760208501612953565b915060408401356129b781612965565b809150509250925092565b6000602082840312156129d457600080fd5b6129dd82612953565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146116dc57600080fd5b60008060408385031215612a1957600080fd5b8235612a24816129e4565b915060208301358015158114612a3957600080fd5b809150509250929050565b600060208284031215612a5657600080fd5b81356129dd816129e4565b60008060008060808587031215612a7757600080fd5b612a8085612953565b9350612a8e60208601612953565b92506040850135612a9e81612965565b91506060850135612aae816129e4565b939692955090935050565b60008083601f840112612acb57600080fd5b50813567ffffffffffffffff811115612ae357600080fd5b602083019150836020828501011115612afb57600080fd5b9250929050565b60008060008060008060808789031215612b1b57600080fd5b8635612b26816129e4565b9550602087013567ffffffffffffffff80821115612b4357600080fd5b612b4f8a838b01612ab9565b9097509550604089013594506060890135915080821115612b6f57600080fd5b50612b7c89828a01612ab9565b979a9699509497509295939492505050565b600080600060608486031215612ba357600080fd5b8335612bae816129e4565b92506020840135612bbe816129e4565b929592945050506040919091013590565b600060208284031215612be157600080fd5b81356129dd81612965565b600060208284031215612bfe57600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff811681146116dc57600080fd5b600060208284031215612c3557600080fd5b81356129dd81612c05565b600080600060408486031215612c5557600080fd5b83359250602084013567ffffffffffffffff811115612c7357600080fd5b612c7f86828701612ab9565b9497909650939450505050565b60008060208385031215612c9f57600080fd5b823567ffffffffffffffff80821115612cb757600080fd5b818501915085601f830112612ccb57600080fd5b813581811115612cda57600080fd5b866020606083028501011115612cef57600080fd5b60209290920196919550909350505050565b60008060408385031215612d1457600080fd5b612d1d83612953565b9150612d2b60208401612953565b90509250929050565b60008060008060608587031215612d4a57600080fd5b8435612d55816129e4565b9350602085013567ffffffffffffffff811115612d7157600080fd5b612d7d87828801612ab9565b9598909750949560400135949350505050565b60008060408385031215612da357600080fd5b8235612dae816129e4565b946020939093013593505050565b600060208284031215612dce57600080fd5b5051919050565b8183823760009101908152919050565b73ffffffffffffffffffffffffffffffffffffffff85168152600060208581840152841515604084015260806060840152835180608085015260005b81811015612e3d5785810183015185820160a001528201612e21565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505095945050505050565b600060608284031215612e9157600080fd5b6040516060810181811067ffffffffffffffff82111715612edb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040528251612ee981612c05565b81526020830151612ef981612965565b6020820152604083015163ffffffff81168114612f1557600080fd5b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417612f6757612f67612f21565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f9e57612f9e612f21565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008560601b16815283601482015281836034830137600091016034019081529392505050565b67ffffffffffffffff82811682821603908082111561303b5761303b612f21565b5092915050565b67ffffffffffffffff81811683821601908082111561303b5761303b612f2156fea2646970667358221220447a41a8078c549eec13ec9ccdfbeb927df8c95a44a206c2634d0689795f19fa64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025c5760003560e01c80639f0707f011610145578063caa99cb3116100bd578063f3ad31f41161008c578063fd62e75011610071578063fd62e7501461069f578063fd9be522146106b3578063fe1b2b8d146106c657600080fd5b8063f3ad31f414610679578063f553ccc91461068c57600080fd5b8063caa99cb3146105fa578063d2ae21041461060d578063e3a0fd8b14610621578063f03821161461065657600080fd5b8063b12527f811610114578063c3b04e7f116100f9578063c3b04e7f146105c1578063c5e193cd146105d4578063c7a823e0146105e757600080fd5b8063b12527f81461059b578063b348ee0c146105ae57600080fd5b80639f0707f0146104f5578063a7cd52cb14610518578063ac353e041461053b578063aef18bf71461057857600080fd5b80636c459a28116101d8578063741bef1a116101a7578063780a00bb1161018c578063780a00bb146104bc5780638585c945146104cf5780638dc3897a146104e257600080fd5b8063741bef1a14610433578063765a8a541461047857600080fd5b80636c459a28146103d757806370cb3acb146103ea578063724e78da146103fd578063736c0d5b1461041057600080fd5b80633371bfff1161022f5780634b0bddd2116102145780634b0bddd2146103905780635553fb8e146103a357806357d3a786146103c457600080fd5b80633371bfff1461033a578063429b62e51461036d57600080fd5b806309310452146102615780631598b16f146102765780631703a018146102ee57806331cb610514610327575b600080fd5b61027461026f36600461297b565b6106e6565b005b6102c06102843660046129c2565b600d602052600090815260409020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b60015461030e9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016102e5565b610274610335366004612a06565b610826565b61035d610348366004612a44565b60036020526000908152604090205460ff1681565b60405190151581526020016102e5565b61035d61037b366004612a44565b60066020526000908152604090205460ff1681565b61027461039e366004612a06565b6108c3565b6103b66103b1366004612a61565b610aad565b6040519081526020016102e5565b61035d6103d2366004612a44565b610c8b565b6102746103e5366004612b02565b610d1e565b6102746103f8366004612b8e565b6110cb565b61027461040b366004612a44565b6112ab565b61035d61041e366004612a44565b60006020819052908152604090205460ff1681565b6009546104539073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102e5565b61048b6104863660046129c2565b6113c3565b604080516fffffffffffffffffffffffffffffffff909316835267ffffffffffffffff9091166020830152016102e5565b6102746104ca366004612a06565b611471565b6102746104dd366004612bcf565b611644565b6102746104f0366004612a06565b6116df565b61035d610503366004612a44565b60056020526000908152604090205460ff1681565b61035d610526366004612a44565b60026020526000908152604090205460ff1681565b600b54610557906fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016102e5565b61035d610586366004612bec565b600c6020526000908152604090205460ff1681565b6102746105a9366004612a06565b611804565b6102746105bc366004612a44565b61189d565b6102746105cf366004612c23565b6119ae565b6103b66105e2366004612a61565b611abb565b6102746105f5366004612c40565b611be3565b610274610608366004612c8c565b611f39565b60045461030e9067ffffffffffffffff1681565b61030e61062f366004612d01565b600860209081526000928352604080842090915290825290205467ffffffffffffffff1681565b61035d610664366004612a44565b60076020526000908152604090205460ff1681565b6103b6610687366004612d34565b6120e2565b61027461069a366004612a06565b61211b565b60015461030e9067ffffffffffffffff1681565b6102746106c1366004612d90565b6121b4565b600a546104539073ffffffffffffffffffffffffffffffffffffffff1681565b3360009081526006602052604090205460ff16610789576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e0000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61ffff83811660008181526008602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff87169081179091558251938452908301939093528101919091527fa919b8179a0920376a5f6ac5b26cd567acf115c8b5af1400b09015dd862277d99060600160405180910390a1505050565b3033146108b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf82826122b4565b5050565b3360009081526006602052604090205460ff16610961576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090205481151560ff909116151503610a1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4d756c74695369674f7261636c653a2061646d696e20616c726561647920696e60448201527f20746861742073746174650000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526006602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527fae0a768e1f5a7943e3f1bb8a4d503c6fbfea4c9bbbded6b463e48bebd28ef72591015b60405180910390a15050565b6000610ab882610c8b565b610b44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4d756c74695369674f7261636c653a205f757365724170706c69636174696f6e60448201527f206973206e6f7420616c6c6f77656400000000000000000000000000000000006064820152608401610780565b61ffff8581166000818152600860209081526040808320948916835293815283822054838352600d90915290839020600a54600954600154600b54845497517fdc60028000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019790975267ffffffffffffffff958616604488018190526801000000000000000090920490951660648701526fffffffffffffffffffffffffffffffff948516608487015284871660a487015270010000000000000000000000000000000090960490931660c4850152909291169063dc6002809060e401602060405180830381865afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190612dbc565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604081205460ff1615610cc157506000919050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205460ff1615610cf757506001919050565b60045467ffffffffffffffff1615610d1157506000919050565b506001919050565b919050565b3360009081526006602052604090205460ff16610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff861660009081526005602052604090205460ff1680610e05575073ffffffffffffffffffffffffffffffffffffffff861630145b610e91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4d756c74695369674f7261636c653a20746172676574206d757374206265207560448201527f6c6e206f722073656c66000000000000000000000000000000000000000000006064820152608401610780565b428311610f20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d756c74695369674f7261636c653a2063616c6c20646174612065787069726560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610780565b6000610f2e878787876120e2565b6000818152600c602052604090205490915060ff1615610fd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4d756c74695369674f7261636c653a2063616c6c206461746120616c7265616460448201527f79206578656375746564000000000000000000000000000000000000000000006064820152608401610780565b6000818152600c6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611012818484611be3565b6000808873ffffffffffffffffffffffffffffffffffffffff16888860405161103c929190612dd5565b6000604051808303816000865af19150503d8060008114611079576040519150601f19603f3d011682016040523d82523d6000602084013e61107e565b606091505b50915091507f293e3a2153dc5c8d3667cbd6ede71a71674b2381e5dc4b40c91ad0e813447c0f898484846040516110b89493929190612de5565b60405180910390a1505050505050505050565b3360009081526006602052604090205460ff16611169576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff1661121e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a205f756c6e206973206e6f7420616c6c6f60448201527f77656400000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040517f07b18bde00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390528416906307b18bde90604401600060405180830381600087803b15801561128e57600080fd5b505af11580156112a2573d6000803e3d6000fd5b50505050505050565b3360009081526006602052604090205460ff16611349576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f80674e26c002a5b7d07d752a8b75030a7d410c4d0178d254df106c7667c1cc84906020015b60405180910390a150565b6009546040517fe0ad121a00000000000000000000000000000000000000000000000000000000815261ffff831660048201526000918291829173ffffffffffffffffffffffffffffffffffffffff169063e0ad121a90602401606060405180830381865afa15801561143a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145e9190612e7f565b8051602090910151909590945092505050565b303314611500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205481151560ff9091161515036115bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4d756c74695369674f7261636c653a20756c6e20616c726561647920696e207460448201527f68617420737461746500000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527feabd2f190f320483b897651b13516f0547c3067bdce2d5080d7b4468c07336469101610aa1565b3033146116d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6116dc8161251f565b50565b3360009081526006602052604090205460ff1661177d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527fba72b3b3b814b105e901ac6ce33e81f5f7490c8d22b3903f48c74b255af3a0be9101610aa1565b303314611893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf8282612624565b3360009081526006602052604090205460ff1661193b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fe4bb27f00af84e2f5a3b5d9a4efd102fc5834643fab4f4d18038ce0d74c1d404906020016113b8565b3360009081526006602052604090205460ff16611a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b600b80547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff83169081179091556040519081527f2725008ed0736b4e89059cba21b291a6964c242e0fa2ed00574cfb7adbbffc2c906020016113b8565b3360009081526005602052604081205460ff16611b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207560448201527f6c6e0000000000000000000000000000000000000000000000000000000000006064820152608401610780565b611b6685858585610aad565b6040805161ffff88811682528716602082015267ffffffffffffffff86168183015273ffffffffffffffffffffffffffffffffffffffff851660608201526080810183905290519192507f4e41ee13e03cd5e0446487b524fdc48af6acf26c074dacdbdfb6b574b42c8146919081900360a00190a1949350505050565b600154611c079068010000000000000000900467ffffffffffffffff166041612f50565b811015611c70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d756c74695369673a207369676e61747572657320746f6f2073686f727400006044820152606401610780565b6000611cc9846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506000805b60015468010000000000000000900467ffffffffffffffff16811015611f31576000806000611d3588888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506127f1915050565b925092509250600060018785858560405160008152602001604052604051611d79949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611d9b573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611611e62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4d756c74695369673a207369676e617475726573206d75737420626520696e2060448201527f617363656e64696e67206f7264657200000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090205460ff16611f17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d756c74695369673a207369676e6174757265206973206e6f742066726f6d2060448201527f61207369676e65720000000000000000000000000000000000000000000000006064820152608401610780565b809550505050508080611f2990612f6d565b915050611ccf565b505050505050565b3360009081526006602052604090205460ff16611fef573360009081526007602052604090205460ff16611fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207560448201527f70646174657200000000000000000000000000000000000000000000000000006064820152608401610780565b60005b818110156120dd573683838381811061200d5761200d612fa5565b905060600201905060405180604001604052808260200160208101906120339190612c23565b6fffffffffffffffffffffffffffffffff16815260200161205a6060840160408501612c23565b6fffffffffffffffffffffffffffffffff169052600d600061207f60208501856129c2565b61ffff168152602080820192909252604001600020825192909101516fffffffffffffffffffffffffffffffff90811670010000000000000000000000000000000002921691909117905550806120d581612f6d565b915050611ff2565b505050565b6000848285856040516020016120fb9493929190612fd4565b604051602081830303815290604052805190602001209050949350505050565b3033146121aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265207360448201527f656c6600000000000000000000000000000000000000000000000000000000006064820152608401610780565b6108bf828261280f565b3360009081526006602052604090205460ff16612252576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369674f7261636c653a2063616c6c6572206d757374206265206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d756c74695369674f7261636c653a206e6f7420696d706c656d656e746564006044820152606401610780565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481151560ff909116151503612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d756c74695369673a207369676e657220616c726561647920696e207468617460448201527f20737461746500000000000000000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515179055806123e257600180546123dd919067ffffffffffffffff1661301a565b6123fc565b600180546123fc9167ffffffffffffffff90911690613042565b600180547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff928316908117918290556801000000000000000090910490911611156124d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4d756c74695369673a20636f6d6d69747465652073697a65203c20746872657360448201527f686f6c64000000000000000000000000000000000000000000000000000000006064820152608401610780565b6040805173ffffffffffffffffffffffffffffffffffffffff8416815282151560208201527f863d338cad74814b108a06288ad5e0e80d56495e0332238b1d2cdcfa0ca8e5ce9101610aa1565b60015467ffffffffffffffff90811690821611801590612549575060008167ffffffffffffffff16115b6125af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4d756c74695369673a20696e76616c69642071756f72756d00000000000000006044820152606401610780565b600180547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff166801000000000000000067ffffffffffffffff8416908102919091179091556040519081527fb600f3cf7f38a4b49bb0c75f722ef69f7e3e39ef3bb4aa8207fd86e724a23249906020016113b8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205481151560ff9091161515036126e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416363657373436f6e74726f6c3a206164647265737320616c7265616479206960448201527f6e207468617420737461746500000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515179055806127535760045461274e9060019067ffffffffffffffff1661301a565b61276b565b60045461276b9067ffffffffffffffff166001613042565b600480547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040805173ffffffffffffffffffffffffffffffffffffffff8416815282151560208201527f9352a101313f915f658cc62aeaa4913eeab9d5732c545d05fc379042a16253229101610aa1565b60419081029190910160208101516040820151919092015160ff1692565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090205481151560ff9091161515036128cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416363657373436f6e74726f6c3a206164647265737320616c7265616479206960448201527f6e207468617420737461746500000000000000000000000000000000000000006064820152608401610780565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f4b4231060768ee40d7781b20f37f18e43e4bac84908227f9d487ed96bd7f1dc79101610aa1565b803561ffff81168114610d1957600080fd5b67ffffffffffffffff811681146116dc57600080fd5b60008060006060848603121561299057600080fd5b61299984612953565b92506129a760208501612953565b915060408401356129b781612965565b809150509250925092565b6000602082840312156129d457600080fd5b6129dd82612953565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146116dc57600080fd5b60008060408385031215612a1957600080fd5b8235612a24816129e4565b915060208301358015158114612a3957600080fd5b809150509250929050565b600060208284031215612a5657600080fd5b81356129dd816129e4565b60008060008060808587031215612a7757600080fd5b612a8085612953565b9350612a8e60208601612953565b92506040850135612a9e81612965565b91506060850135612aae816129e4565b939692955090935050565b60008083601f840112612acb57600080fd5b50813567ffffffffffffffff811115612ae357600080fd5b602083019150836020828501011115612afb57600080fd5b9250929050565b60008060008060008060808789031215612b1b57600080fd5b8635612b26816129e4565b9550602087013567ffffffffffffffff80821115612b4357600080fd5b612b4f8a838b01612ab9565b9097509550604089013594506060890135915080821115612b6f57600080fd5b50612b7c89828a01612ab9565b979a9699509497509295939492505050565b600080600060608486031215612ba357600080fd5b8335612bae816129e4565b92506020840135612bbe816129e4565b929592945050506040919091013590565b600060208284031215612be157600080fd5b81356129dd81612965565b600060208284031215612bfe57600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff811681146116dc57600080fd5b600060208284031215612c3557600080fd5b81356129dd81612c05565b600080600060408486031215612c5557600080fd5b83359250602084013567ffffffffffffffff811115612c7357600080fd5b612c7f86828701612ab9565b9497909650939450505050565b60008060208385031215612c9f57600080fd5b823567ffffffffffffffff80821115612cb757600080fd5b818501915085601f830112612ccb57600080fd5b813581811115612cda57600080fd5b866020606083028501011115612cef57600080fd5b60209290920196919550909350505050565b60008060408385031215612d1457600080fd5b612d1d83612953565b9150612d2b60208401612953565b90509250929050565b60008060008060608587031215612d4a57600080fd5b8435612d55816129e4565b9350602085013567ffffffffffffffff811115612d7157600080fd5b612d7d87828801612ab9565b9598909750949560400135949350505050565b60008060408385031215612da357600080fd5b8235612dae816129e4565b946020939093013593505050565b600060208284031215612dce57600080fd5b5051919050565b8183823760009101908152919050565b73ffffffffffffffffffffffffffffffffffffffff85168152600060208581840152841515604084015260806060840152835180608085015260005b81811015612e3d5785810183015185820160a001528201612e21565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505095945050505050565b600060608284031215612e9157600080fd5b6040516060810181811067ffffffffffffffff82111715612edb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040528251612ee981612c05565b81526020830151612ef981612965565b6020820152604083015163ffffffff81168114612f1557600080fd5b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417612f6757612f67612f21565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f9e57612f9e612f21565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008560601b16815283601482015281836034830137600091016034019081529392505050565b67ffffffffffffffff82811682821603908082111561303b5761303b612f21565b5092915050565b67ffffffffffffffff81811683821601908082111561303b5761303b612f2156fea2646970667358221220447a41a8078c549eec13ec9ccdfbeb927df8c95a44a206c2634d0689795f19fa64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkPermission(address)": {
        "notice": "1) If one address is in the deny list, it is denied 2) If the allow list is empty and not in the deny list, it is allowed 3) If one address is in the allow list and not in the deny list, it is allowed 4) If the allow list is not empty and the address is not in the allow list, it is denied"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 426,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "signers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 428,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "signerSize",
        "offset": 0,
        "slot": "1",
        "type": "t_uint64"
      },
      {
        "astId": 430,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "quorum",
        "offset": 8,
        "slot": "1",
        "type": "t_uint64"
      },
      {
        "astId": 301,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "allowlist",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 305,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "denylist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 307,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "allowlistSize",
        "offset": 0,
        "slot": "4",
        "type": "t_uint64"
      },
      {
        "astId": 746,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "ulns",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 750,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "admins",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 754,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "feeConfigUpdaters",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 760,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "dstGasLookup",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint64))"
      },
      {
        "astId": 763,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "priceFeed",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(ILayerZeroPriceFeed)96"
      },
      {
        "astId": 766,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "oracleFeeLib",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IOracleFeeLib)1629"
      },
      {
        "astId": 769,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "multiplierBps",
        "offset": 0,
        "slot": "11",
        "type": "t_uint128"
      },
      {
        "astId": 773,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "usedHashes",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 778,
        "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
        "label": "feeConfigs",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint16,t_struct(FeeConfig)742_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ILayerZeroPriceFeed)96": {
        "encoding": "inplace",
        "label": "contract ILayerZeroPriceFeed",
        "numberOfBytes": "20"
      },
      "t_contract(IOracleFeeLib)1629": {
        "encoding": "inplace",
        "label": "contract IOracleFeeLib",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_uint64)"
      },
      "t_mapping(t_uint16,t_struct(FeeConfig)742_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => struct MultiSigOracle.FeeConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(FeeConfig)742_storage"
      },
      "t_mapping(t_uint16,t_uint64)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_struct(FeeConfig)742_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigOracle.FeeConfig",
        "members": [
          {
            "astId": 739,
            "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
            "label": "multiplier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 741,
            "contract": "contracts/MultiSigOracle.sol:MultiSigOracle",
            "label": "floorMarginUSD",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}